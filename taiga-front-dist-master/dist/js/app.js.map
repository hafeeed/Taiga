{"version":3,"sources":["app.js","locales.en.js"],"names":["configure","init","module","modules","taiga","this","taigaContribPlugins","generateHash","components","_","map","x","JSON","stringify","hex_sha1","join","generateUniqueSessionIdentifier","date","randomNumber","Date","getTime","Math","floor","random","sessionId","$routeProvider","$locationProvider","$httpProvider","$provide","$tgEventsProvider","tgLoaderProvider","authHttpIntercept","defaultHeaders","versionCheckHttpIntercept","when","templateUrl","resolve","loader","add","reloadOnSearch","redirectTo","params","pslug","otherwise","html5Mode","enabled","requireBase","Content-Type","Accept-Language","X-Session-Id","defaults","headers","patch","post","put","get","setSessionId","$q","$location","$navUrls","$lightboxService","httpResponseError","response","nextPath","status","closeAll","path","replace","url","search","reject","responseError","factory","interceptors","push","$confirm","versionErrorMsg","data","version","notify","window","checksley","updateValidators","linewidth","val","width","lines","valid","nl2br","split","every","line","length","updateMessages","$log","$i18n","$config","$rootscope","$auth","$events","$analytics","initialize","debug","contribPlugins","isAuthenticated","setupConnection","concat","plugin","angular","config","run","call","TaigaBase","TaigaController","TaigaService","__extends","child","parent","ctor","constructor","key","__hasProp","prototype","__super__","hasOwnProperty","__bind","fn","me","apply","arguments","_super","onInitialDataError","xhr","location","navUrls","q","Base","Service","Controller","bindMethods","bindOnce","cancelTimeout","debounce","debounceLeading","groupBy","joinStr","mixOf","scopeDefer","sizeFormat","slugify","startswith","timeout","toString","toggleText","trim","unslugify","__indexOf","indexOf","item","i","l","__slice","slice","str","breakTag","object","dependencies","methods","keys","forIn","value","bindAll","scope","attr","continuation","delBind","$eval","$watch","Mixed","base","method","mixin","mixins","name","_i","_ref","char","capitalize","element","texts","nextTextPosition","text","coll","pred","result","_len","wait","setTimeout","timeoutVar","clearTimeout","func","defer","$apply","isNumber","isString","isPlainObject","isUndefined","leading","trailing","str1","str2","startsWith","input","precision","number","size","units","isNaN","parseFloat","isFinite","log","pow","toFixed","FiltersMixin","PageMixin","fillUsersAndRoles","users","roles","activeUsers","availableRoles","filter","user","is_active","sortBy","activeUsersById","e","id","usersById","project","memberships","uniq","computableRoles","contains","loadUsersAndRoles","promise","all","rs","projects","usersList","projectId","rolesList","then","_this","results","selectFilter","load","existing","compact","noreload","replaceFilter","replaceAllFilters","filters","unselectFilter","newValues","parsedValues","isEmpty","AuthService","CancelAccountDirective","ChangeEmailDirective","ChangePasswordFromRecoveryDirective","ForgotPasswordDirective","InvitationDirective","LoginDirective","PublicRegisterMessageDirective","RegisterDirective","_at_rootscope","_at_storage","_at_model","_at_rs","_at_http","_at_urls","rootscope","storage","model","http","urls","$inject","getUser","userData","make_model","setUser","auth","$broadcast","default_language","set","getAttrs","clear","remove","setToken","token","getToken","removeToken","login","type","clone","auth_token","logout","register","getInvitation","invitations","acceptInvitiationWithNewUser","acceptInvitiationWithExistingUser","forgotPassword","changePasswordFromRecovery","changeEmail","cancelAccount","service","templates","template","templateFn","publicRegisterEnabled","restrict","directive","$routeParams","link","$scope","$el","onError","onSuccess","submit","nextUrl","event","form","preventDefault","Form","find","validate","username","password","on","onErrorSubmit","onSuccessSubmit","onlyOneErrorElement","trackEvent","_error_message","setErrors","success","email","$params","tokenInParams","loginForm","onErrorSubmitLogin","onErrorSubmitRegister","onSuccessSubmitLogin","onSuccessSubmitRegister","registerForm","submitLogin","submitRegister","invitation","dataLogin","project_slug","escape","project_name","dataRegister","$repo","$model","email_token","queryOne","cancel_token","TaigaMainDirective","$window","onresize","home","error","not-found","permission-denied","forgot-password","change-password","change-email","cancel-account","create-project","profile","project-backlog","project-taskboard","project-kanban","project-issues","project-search","project-userstories-detail","project-tasks-detail","project-issues-detail","project-wiki","project-wiki-page","project-team","project-admin-home","project-admin-project-profile-details","project-admin-project-profile-default-values","project-admin-project-profile-modules","project-admin-project-profile-export","project-admin-project-values-us-status","project-admin-project-values-us-points","project-admin-project-values-task-status","project-admin-project-values-issue-status","project-admin-project-values-issue-types","project-admin-project-values-issue-priorities","project-admin-project-values-issue-severities","project-admin-memberships","project-admin-roles","project-admin-third-parties-webhooks","project-admin-third-parties-github","project-admin-third-parties-gitlab","project-admin-third-parties-bitbucket","project-admin-contrib","user-settings-user-profile","user-settings-user-change-password","user-settings-user-avatar","user-settings-mail-notifications","$navurls","update","AnimationFrame","AppTitle","CheckPermissionDirective","LimitLineLengthDirective","ProjectUrl","Qqueue","SelectedText","Template","ToggleCommentDirective","$document","getSelection","selection","createRange","render","permission","my_permissions","removeClass","$attrs","addClass","tgCheckPermission","$on","off","animationFrame","performAnimation","tail","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","shift","_results","$","ctx","slug","is_backlog_activated","is_kanban_activated","is_wiki_activated","is_issues_activated","maxColsPerLine","parseInt","code","keyCode","each","index","substring","deferred","lastPromise","qqueue","bindAdd","args","$templateCache","lodash","tmp","EventsProvider","EventsService","_at_win","_at_log","_at_config","_at_auth","win","subscriptions","connected","pendingMessages","WebSocket","info","loc","scheme","stopExistingConnection","protocol","ltrim","host","ws","addEventListener","onOpen","onMessage","onClose","removeEventListener","close","serialize","message","isObject","sendMessage","messages","msg","send","subscribe","routingKey","callback","subscription","cmd","routing_key","unsubscribe","parse","$get","$win","$conf","provider","FeedbackDirective","$loading","submitButton","start","create","feedback","finish","open","focus","ProjectMenuDirective","ProjectsNavigationController","ProjectsNavigationDirective","_at_scope","_at_navurls","_at_projectUrl","navurls","projectUrl","loadInitialData","console","list","filteredProjects","filterText","newProject","filterProjects","toLowerCase","controller","$timeout","tgLoader","$compile","$template","baseTemplate","hideMenu","loadingStart","overlay","projectsTemplate","difftime","timeoutValue","is","one","document","body","css","hide","disablePreventLoading","$ctrls","$ctrl","renderProjects","html","$emit","which","hasClass","show","toggleClass","currentUrl","target","currentTarget","prop","absUrl","preventLoading","require","$tgAuth","getSectionName","mainTemplate","menuEntriesTemplate","renderMainMenu","renderMenuEntries","videoConferenceUrl","sectionName","oldSectionName","targetScope","container","dom","section","feedbackEnabled","replaceWith","baseUrl","videoconferences","videoconferences_salt","popover","listener","stopPropagation","videoconferenceUrl","RelatedTaskAssignedToInlineEditionDirective","RelatedTaskCreateButtonDirective","RelatedTaskCreateFormDirective","RelatedTaskRowDirective","RelatedTasksDirective","templateEdit","templateView","renderEdit","renderView","saveTask","task","subject","save","$modelValue","perms","modify_task","delete_task","select","title","askOnDelete","ngModel","$tgmodel","newTask","assigned_to","createTask","default_task_status","us","$rs","loadTasks","tasks","usId","autoSave","notAutoSave","updateRelatedTask","member","imgurl","photo","full_name_display","tgRelatedTaskAssignedToInlineEdition","unbind","userId","updatedRelatedTask","ResourcesService","initResources","initUrls","auth-register","permissions","notify-policies","bulk-create-memberships","milestones","userstories","bulk-create-us","bulk-update-us-backlog-order","bulk-update-us-sprint-order","bulk-update-us-kanban-order","userstories-restore","bulk-create-tasks","bulk-update-task-taskboard-order","tasks-restore","issues","bulk-create-issues","issues-restore","wiki","wiki-restore","wiki-links","choices/userstory-statuses","choices/userstory-statuses/bulk-update-order","choices/points","choices/points/bulk-update-order","choices/task-statuses","choices/task-statuses/bulk-update-order","choices/issue-statuses","choices/issue-statuses/bulk-update-order","choices/issue-types","choices/issue-types/bulk-update-order","choices/priorities","choices/priorities/bulk-update-order","choices/severities","choices/severities/bulk-update-order","sites","project-templates","site-members","site-projects","users-password-recovery","users-change-password-from-recovery","users-change-password","users-change-email","users-cancel-account","user-storage","resolver","userstory-statuses","points","task-statuses","issue-statuses","issue-types","priorities","severities","project-modules","webhooks","webhooks-test","webhooklogs","webhooklogs-resend","history/us","history/issue","history/task","history/wiki","attachments/us","attachments/issue","attachments/task","attachments/wiki_page","exporter","importer","$urls","providers","toArray","SearchBoxDirective","SearchController","SearchDirective","_at_repo","_at_params","_at_q","_at_location","_at_appTitle","_at_navUrls","_at_tgLoader","loadSearchData","repo","appTitle","bind","searchTerm","t","term","pageLoaded","loadFilters","defered","loadProject","getBySlug","issueStatusById","issue_statuses","taskStatusById","task_statuses","severityById","priorityById","membersById","usStatusById","us_statuses","searchResults","$route","reload","$templatecache","$routeparams","linkTable","getActiveSection","lastSeatchResults","markSectionTabActive","renderFilterTabs","renderTableContent","tabsDom","maxVal","selectedSectionData","selectedSectionName","wikipages","oldElements","oldScope","children","$destroy","$new","parseHTML","activeSection","sectionData","searchText","AnalyticsService","_at_doc","conf","doc","initialized","accountId","pageEvent","trackRoutes","ignoreFirstPageLoad","injectAnalytics","ga","getUrl","trackPage","s","o","g","r","a","m","createElement","getElementsByTagName","async","src","parentNode","insertBefore","page","category","action","label","AttachmentDirective","AttachmentsController","AttachmentsDirective","_at_confirm","confirm","objectId","uploadingAttachments","attachments","attachmentsCount","deprecatedAttachmentsCount","showDeprecated","loadAttachments","urlname","updateCounters","is_deprecated","_createAttachment","attachment","urlName","isCreatedRightNow","splice","createAttachments","promises","addUploadingAttachments","union","reorderAttachment","newIndex","oldIndex","order","updateAttachment","saveAttachments","saveAll","revert","removeAttachment","filterAttachments","$templates","showSizeInfo","tdom","sortable","items","handle","containment","dropOnEmpty","scroll","tolerance","placeholder","ui","attach","files","maxFileSize","maxFileSizeMsg","controllerAs","saveAttachment","edit","modifyPermission","created_date","moment","format","description","isDeprecated","tgAttachment","AssignedToDirective","BlockButtonDirective","CreatedByDisplayDirective","DateRangeDirective","DateSelectorDirective","DeleteButtonDirective","EditableDescriptionDirective","EditableSubjectDirective","ListItemAssignedtoDirective","ListItemIssueStatusDirective","ListItemPriorityDirective","ListItemSeverityDirective","ListItemTaskStatusDirective","ListItemTypeDirective","ListItemUsStatusDirective","SprintProgressBarDirective","TgMainTitleDirective","TgProgressBarDirective","WatchersDirective","renderRange","first","second","endDate","initDate","tgDateRange","valFirst","valSecond","selectedDate","picker","Pikaday","field","onSelect","setDate","renderProgress","percentage","visual_percentage","tgSprintProgressbar","sprint","closedPoints","totalPoints","closed_points","total_points","round","owner","$qqueue","deleteWatcher","isEditable","renderWatchers","_ref1","requiredPerm","watchers","$setViewValue","watcherId","watcherIds","pull","renderAssignedTo","issue","assignedTo","assignedToId","ask","instance","is_blocked","onDeleteGoToUrl","onDeleteTitle","subtitle","click","$selectedText","noDescriptionMegEditMode","noDescriptionMegReadMode","noDescriptionMsg","tgListitemIssueStatus","tgListitemTaskStatus","tgListitemUsStatus","tgListitemAssignedto","full_name","domNode","priority","color","tgListitemPriority","severity","tgListitemSeverity","issueTypeById","tgListitemType","el","tgProgressBar","max","min","projectName","ConfirmService","NOTIFICATION_MSG","light-error","_at_lightboxService","_at_loading","lightboxService","loading","lightboxSelector","ok","askChoice","choices","replacement","warning","choicesField","append","selected","stop","percent","time","selector","tsem","LbUsEstimationDirective","UsEstimationDirective","$rootScope","pointsTemplate","calculateTotalPoints","renderPoints","role","pointId","pointObj","pointsById","usPoints","roleId","point","values","v","reduce","acc","num","siblings","editable","closest","notNullValues","defaultFilter","momentFormat","momentFromNow","yesNoFilter","defaultValue","without_suffix","fromNow","HistoryController","HistoryDirective","loadHistory","history","historyResult","values_diff","description_diff","description_html","blocked_note_diff","blocked_note","blocked_note_html","comments","comment","deleteComment","activityId","undeleteComment","templateActivity","templateBase","templateBaseEntries","templateChangeAttachment","templateChangeDiff","templateChangeGeneric","templateChangeList","templateChangePoints","templateDeletedComment","countChanges","formatChange","getHumanizedFieldName","getUserAvatar","getUserFullName","renderActivity","renderAttachmentEntry","renderChange","renderChangeEntries","renderChangeEntry","renderChangesHelperText","renderComment","renderComments","renderHistory","showAllActivity","showAllComments","humanizedFieldNames","is_closed","finish_date","client_requirement","team_requirement","milestone","user_story","is_iocaine","change","isArray","changes","diff","filename","from","to","flatten","added","removed","difference","delete_comment_date","delete_comment_user","deleteCommentDate","deleteCommentUser","comment_html","canRestoreComment","pk","avatar","userFullName","creationDate","created_at","changesText","mode","canDeleteComment","entries","totalEntries","showMore","totalComments","last","totalChanges","parents","ngmodel","ImportProjectButtonDirective","trigger","file","errorMsg","AssignedToLightboxDirective","BlockLightboxDirective","BlockingMessageInputDirective","CreateBulkUserstoriesDirective","CreateEditUserstoryDirective","LightboxDirective","LightboxKeyboardNavigationService","LightboxService","NotionButtonDirective","NotionLightboxDirective","WatchersLightboxDirective","_at_animationFrame","docEl","lightboxContent","not","removeAttr","lightboxEl","dispatch","activeElement","next","prev","$tgrepo","block","unblock","finishCallback","watch","isNew","statusList","usStatusList","is_archived","tags","broadcastEvent","keydown","statusId","bulk","bulkCreate","lightboxKeyboardNavigationService","closeLightbox","filterUsers","normalizeString","selectedItem","selectedUser","usersTemplate","string","normalizedString","toUpperCase","partial","searchingText","usersSearch","getFilteredUsers","_filterUsers","lightboxId","tgLbNotionButton","Loader","LoaderDirective","onStart","onEnd","startCurrentPageLoader","reset","defaultConfig","forceDisabled","minTime","merge","startLoadTime","force","endTime","TgLoadingService","oldContent","RelatedTaskStatusDirective","UsStatusDirective","usStatusDom","usStatusDomParent","tgUsStatus","onUpdate","statuses","selectionTemplate","updateTaskStatus","taskStatusDom","taskStatusDomParent","tgRelatedTaskStatus","closePopover","isVisible","docViewBottom","docViewLeft","docViewRight","docViewTop","docViewWidth","elemBottom","elemLeft","elemRight","elemTop","elemWidth","display","visibility","scrollTop","height","offset","top","left","fadeOut","fadeIn","ExceptionHandlerFactory","ravenConfig","Raven","install","exception","captureException","ColorizeTagsDirective","LbTagLineDirective","TagLineDirective","TagsDirective","formatter","parser","$formatters","$parsers","backlog","kanban","taskboard","srcTags","tgColorizeTagsType","sort","tag","tags_colors","tgColorizeTags","COMMA_KEY","ENTER_KEY","templateTags","addValue","deleteValue","hideSaveButton","removeInputLastCharacter","renderTags","resetInput","saveInputTag","showSaveButton","tagsColors","style","autocomplete","inputValue","positioningFunction","position","elements","menu","source","my","using","ESC_KEY","hideAddTagButton","hideAddTagButtonText","hideInput","renderInReadModeOnly","showAddTagButton","showAddTagButtonText","showInput","blur","tgMarkitupDirective","$tr","previewTemplate","closePreviewMode","markdownCaretPositon","markdownSettings","markdownTitle","preview","previewDomNode","removeEmptyLine","setCaretPosition","class","markItUpDomNode","markdownDomNode","mdrender","markdown","elm","caretPos","range","createTextRange","move","selectionStart","setSelectionRange","textarea","currentCaretPosition","removedLineLength","nameSpace","onShiftEnter","keepDefault","openWith","onEnter","breakLineAtBeginning","cursorLine","emptyListItem","lastLine","match","newLineContent","caretPosition","afterInsert","scrollRelation","totalLines","scrollHeight","markupSet","placeHolder","closeWith","markItUp","separator","className","heading","n","BacklogFiltersDirective","templateSelected","initializeSelectedFilters","renderFilters","renderSelectedFilters","selectQFilter","selectedFilters","showCategories","showFilters","toggleFilterSelection","f","currentFiltersType","filterVisibleUserstories","loadUserstories","CreateEditSprint","createSprint","hasErrors","estimated_start","estimated_finish","newSprint","copy","setAttr","sprintsCounter","__all__","milestonesCounter","estimatedFinish","estimatedStart","lastSprint","lastSprintNameDom","sprints","BacklogController","BacklogDirective","TgBacklogProgressBarDirective","UsPointsDirective","UsRolePointsSelectorDirective","tgBacklogGraphDirective","_at_events","_at_analytics","events","analytics","showTags","activeFilters","initializeEventHandlers","getShowTags","loadProjectStats","loadSprints","moveUs","loadClosedSprints","unloadClosedSprints","initializeSubscription","routingKey1","routingKey2","toggleShowTags","storeShowTags","toggleActiveFilters","stats","completedPercentage","refreshTagsColors","closedSprints","closed","user_stories","openSprints","reverse","sprintsById","resetFilters","selectedStatuses","selectedTags","filtersQ","filterGrp","httpParams","getUrlFilters","storeQueryParams","listUnassigned","generateFilters","loadBacklog","totalClosedMilestones","total_closed_milestones","visibleUserstories","intersection","res","prepareBulkUpdateData","uses","us_id","resortUserStories","isModified","usList","newUsIndex","newSprintId","oldSprintId","_j","_k","_len1","_len2","Array","bulkUpdateBacklogOrder","bulkUpdateSprintOrder","oldSprint","_l","_len3","pick","isSelected","plainStatuses","plainTags","searchdata","urlfilters","countBy","k","obj","count","editUserStory","deleteUserStory","without","addNewUs","default_us_status","addNewSprint","doomLineTemplate","linkDoomLine","linkFilters","linkToolbar","showHideFilter","showHideTags","addDoomLineDom","getUsItems","reloadDoomLine","removeDoomlineDom","current_sum","assigned_points","before","rowElements","moveToCurrentSprint","selectedUss","extraPoints","totalExtraPoints","ussCurrent","moveToCurrentSprintDom","selectedUsDom","ussDom","ussToMove","itemScope","sidebar","filtersSearch","disableSelection","numberOfRoles","roleName","rolScope","$tgTemplate","rolesTemplate","renderPointsSelector","renderRolesSelector","selectedRoleId","updatePointsRoles","updatingSelectedRoleId","tgBacklogUsPoints","popRolesDom","refresh","redrawChart","dataToDraw","client_increment_line","colors","evolution_line","milestonesRange","optimal_line","options","team_increment_line","zero_line","zip","fillColor","ml","optimal","evolution","grid","borderWidth","right","bottom","borderColor","hoverable","xaxis","ticks","axisLabel","axisLabelUseCanvas","axisLabelFontSizePixels","axisLabelFontFamily","axisLabelPadding","tickFormatter","series","shadowSize","fill","radius","lineWidth","tooltip","tooltipOpts","content","xval","yval","flotItem","seriesIndex","abs","empty","plot","adjustPercentaje","projectPointsPercentaje","closedPointsPercentaje","adjusted","tgBacklogProgressBar","definedPoints","defined_points","BacklogEmptySortableDirective","BacklogSortableDirective","SprintSortableDirective","deleteElement","$tgConfirm","getUsIndex","filterError","connectWith","cursorAt","itemIndex","itemUs","BacklogSprintDirective","BacklogSprintHeaderDirective","ToggleExcludeClosedSprintsVisualization","refreshSprintTableHeight","slideOptions","sprintTableMinHeight","toggleSprint","duration","easing","sprintTable","sprintArrow","tgBacklogSprint","slideToggle","estimatedDateRange","taskboardUrl","excludeClosedSprints","loadingElm","after","SprintGraphDirective","days","day","unshift","d","optimal_points","open_points","tickSize","daysNames","yaxis","formattedDate","roundedValue","CreateBulkTasksDirective","CreateEditTaskDirective","sprintId","TaskboardController","TaskboardDirective","TaskboardSquishColumnDirective","TaskboardTaskDirective","TaskboardUserDirective","loadTaskboard","taskMove","loadSprintStats","loadSprint","pointsList","roleById","taskStatusList","completedPointsSum","remainingPointsSum","remainingTasks","totalPointsSum","completed_points","total_tasks","completed_tasks","openTasks","_ref2","usTasks","sslug","refreshTasksOrder","resortTasks","bulkUpdateTaskTaskboardOrder","task_id","taskboard_order","addNewTask","editTaskAssignedTo","tableBodyDom","tableHeaderDom","scrollLeft","avatarWidth","maxColumnWidth","getCeilWidth","recalculateStatusColumnWidth","recalculateTaskboardWidth","refreshTaskboardTableWidth","setStatusColumnWidth","statusesFolded","getStatusColumnModes","usFolded","getUsRowModes","foldStatus","storeStatusColumnModes","foldUs","storeUsRowModes","tasksMatrixSize","sqrt","column","columnWidths","columns","totalWidth","outerWidth","total","statusFoldedWidth","forEach","clickable","username_label","assign","TaskboardSortableDirective","itemEl","newParentScope","oldParentScope","itemTask","newStatusId","newUsId","oldStatusId","oldUsId","parentEl","st","KanbanArchivedStatusHeaderDirective","KanbanArchivedStatusIntroDirective","KanbanController","KanbanDirective","KanbanSquishColumnDirective","KanbanUserDirective","KanbanUserstoryDirective","KanbanWipLimitDirective","defaultViewMode","defaultViewModes","maximized","cardClass","minimized","statusViewModes","onAssignedToChanged","loadUserStoriesForStatus","hideUserStoriesForStatus","changeUsAssignedTo","userid","status__is_archived","listAll","usByStatus","loadKanban","generateStatusViewModes","storedStatusViewModes","getStatusViewModes","has","storeStatusViewModes","updateStatusViewMode","newViewMode","getCardClass","kanban_order","itemsToSave","bulkUpdateKanbanOrder","hideArchivedText","showArchivedText","hidden","tgKanbanArchivedStatusHeader","hiddenUserStoriexText","userStories","updateIntroText","tgKanbanArchivedStatusIntro","isArchived","userStoriesLoaded","updateTableWidth","folds","redrawWipLimit","tgKanbanWipLimit","wtid","tgKanbanUserAvatar","KanbanSortableDirective","IssueDetailController","IssuePriorityButtonDirective","IssueSeverityButtonDirective","IssueStatusButtonDirective","IssueStatusDisplayDirective","IssueTypeButtonDirective","PromoteIssueToUsButtonDirective","issueRef","issueref","initializeOnDeleteGoToUrl","loadIssue","statusById","typeById","issue_types","typeList","severityList","priorityList","getByRef","issueId","commentModel","neighbors","previous","ref","previousUrl","typees","severityes","priorityes","generated_from_issue","CreateBulkIssuesDirective","CreateIssueDirective","default_issue_status","default_issue_type","default_priority","default_severity","IssueAssignedToInlineEditionDirective","IssueStatusInlineEditionDirective","IssuesController","IssuesDirective","IssuesFiltersDirective","loadIssues","getFilters","storeFilters","issueStatusList","issueTypes","getUrlFilter","loadMyFilters","getMyFilters","removeNotExistingFiltersFromUrl","currentSearch","existingValues","filterName","filterValue","splittedValues","markSelectedFilters","omit","_results1","myFilters","filtersData","choicesFiltersFormat","tagsFilterFormat","usersFiltersFormat","unknownOption","reformatedUsers","unknownItem","u","byIdObject","createdBy","created_by","types","loadIssuesRequests","urlFilters","models","current","paginatedBy","saveCurrentFiltersTo","newFilter","storeMyFilters","deleteMyFilter","addNewIssue","addIssuesInBulk","linkOrdering","linkPagination","$pagEl","afterCurrent","atBegin","atEnd","beforeCurrent","getNumPages","renderPagination","numPages","cpage","pages","showPrevious","showNext","classes","pagenum","colHeadElement","currentOrder","icon","finalOrder","newOrder","filterId","customFilterName","loadPromise","currentfilterstype","updateIssueStatus","issueStatusDom","issueStatusDomParent","tgIssueStatusInlineEdition","updateIssue","tgIssueAssignedToInlineEdition","updatedIssue","UsClientRequirementButtonDirective","UsStatusButtonDirective","UsStatusDisplayDirective","UsTasksProgressDisplayDirective","UsTeamRequirementButtonDirective","UserStoryDetailController","usRef","usref","loadUs","progress","totalClosedTasks","totalTasks","canEdit","isRequired","TaskDetailController","TaskIsIocaineButtonDirective","TaskStatusButtonDirective","TaskStatusDisplayDirective","taskRef","taskref","loadTask","taskId","loadUserStory","isIocaine","LeaveProjectDirective","TeamController","TeamFiltersDirective","TeamMemberCurrentUserDirective","TeamMemberStatsDirective","TeamMembersDirective","setRole","filtersRole","loadMembers","currentUser","membership","totals","is_user_active","issuesEnabled","tasksEnabled","wikiEnabled","loadMemberStats","memberStats","vals","sum","processStats","processStat","stat","singleStat","leave","projectid","EditableWikiContentDirective","WikiDetailController","WikiSummaryDirective","_at_filter","projectSlug","wikiSlug","loadWiki","wikiId","loadWikiLinks","listLinks","wikiLinks","last_modifier","imgUrl","totalEditions","editions","lastModifiedDate","modified_date","wikiPage","cancelEdition","disableEdition","getSelectedText","switchToEditMode","switchToReadMode","prevPos","WikiNavDirective","addWikiLinkPermission","deleteWikiLinkPermission","linkId","linkSlug","href","newLink","CreateMembersDirective","MAX_MEMBERSHIP_FIELDSETS","extraTextTemplate","createFieldSet","resetForm","required","roleList","fieldSet","prepend","lastActionButton","newFieldSet","invitation_extra_text","memberWrappers","destroy","mw","memberWrapper","role_id","bulkCreateMemberships","MembershipsController","MembershipsDirective","MembershipsRowActionsDirective","MembershipsRowAdminCheckboxDirective","MembershipsRowAvatarDirective","MembershipsRowRoleSelectorDirective","httpFilters","addNewMembers","user_email","tgMembershipsRowAvatar","inputId","tgMembershipsRowAdminCheckbox","is_owner","selectedRole","tgMembershipsRowRoleSelector","newRole","activedTemplate","pendingTemplate","tgMembershipsRowActions","resendInvitation","AdminNavigationDirective","tgAdminNavigation","ProjectDefaultValuesDirective","ProjectExportDirective","ProjectModulesDirective","ProjectProfileController","ProjectProfileDirective","prioritiesList","severitiesList","issueTypesList","openDeleteLightbox","newUrl","isVideoconferenceActivated","buttonsEl","hideButtons","hideResult","hideSpinner","resultEl","resultMessageEl","resultTitleEl","setAsyncMessage","setAsyncTitle","setLoadingMessage","setLoadingTitle","setSyncMessage","setSyncTitle","showButtons","showErrorMode","showExportResultAsyncMode","showExportResultSyncMode","showLoadingMode","showResult","showSpinner","spinnerEl","dumpUrl","ColorSelectionDirective","ProjectValuesController","ProjectValuesDirective","moveValue","loadValues","resource","listValues","maxValueOrder","itemValue","linkDragAndDrop","linkValue","axis","cancel","goToBottomList","initializeNewValue","saveValue","valueType","newValue","table","row","editionRow","option","onSucces","moveTo","EditRoleDirective","NewRoleDirective","RolePermissionsDirective","RolesController","RolesDirective","anyComputableRole","some","computable","loadRoles","setComputable","toggleView","toggle","DEFAULT_PERMISSIONS","categoryTemplate","resumeTemplate","generateCategoriesFromRole","renderCategory","renderPermissions","renderResume","categories","issuePermissions","milestonePermissions","setActivePermissions","setActivePermissionsPerCategory","taskPermissions","userStoryPermissions","wikiPermissions","extend","active","activePermissions","getActivePermissions","categoryId","BitbucketController","BitbucketWebhooksDirective","GithubController","GithubWebhooksDirective","GitlabController","GitlabWebhooksDirective","NewWebhookDirective","SelectInputText","ValidOriginIpsDirective","WebhookDirective","WebhooksController","loadWebhooks","openHistory","showEditMode","showVisualizationMode","updateLogs","updateShowHideHistoryText","webhook","tgWebhook","validStatus","prettySentHeaders","pairs","request_headers","_arg","header","prettySentData","request_data","prettyDate","created","logs_counter","logs","historyElement","textElement","test","saveWebhook","resend","addWebhookDOMNode","formDOMNode","loadModules","github","gitlab","bitbucket","saveAttribute","$ngModel","CreateProject","DeleteProjectDirective","$projectUrl","$cacheFactory","removeAll","error_field","error_step","selectors","total_story_points","total_milestones","creation_template","head","step","fields","projectToDelete","ProjectController","ProjectsController","ProjectsListDirective","ProjectsPaginationDirective","recents","loadPageData","checkButtonVisibility","containerSize","hasNextPage","hasPagination","hasPrevPage","nextBtn","nextPage","pageSize","prevBtn","prevPage","visible","lastLi","maxTop","newTop","outerHeight","animate","BindHtmlDirective","BindOnceAltDirective","BindOnceBindDirective","BindOnceHrefDirective","BindOnceHtmlDirective","BindOnceRefDirective","BindOnceSrcDirective","BindOnceTitleDirective","BindTitleDirective","tgBoBind","tgBoHtml","tgBoRef","tgBoSrc","tgBoHref","tgBoAlt","tgBoTitle","tgTitleHtml","tgBindHtml","ConfigurationService","taigaConfig","ContribController","_at_rootScope","rootScope","currentPlugin","where","pluginTemplate","adminPlugins","FiltersStorageService","HttpService","Authorization","request","I18nDirective","I18nService","ns","fallbackLng","lng","localesEn","resStore","en","app","setLanguage","language","i18n","setLng","currentLang","opts","tr","trOpts","locationFactory","lastRoute","un","Model","ModelService","dataTypes","_attrs","_name","_dataTypes","setAttrs","_modifiedAttrs","_isModified","applyCasts","attrName","castMethod","castName","casts","getIdAttrName","getName","attrs","getter","self","setter","substr","enumerable","configurable","Object","defineProperty","isAttributeModified","attribute","markSaved","desSerialize","sdata","ddata","cls","int","float","NavigationUrlsDirective","NavigationUrlsService","formatUrl","replacer","bindOnceP","parseNav","tgNav","fullUrl","RepositoryService","resolveUrlForModel","idAttrName","resolveUrlForAttributeModel","extraParams","_data","queryMany","httpOptions","enablePagination","queryOneAttribute","queryOneRaw","queryPaginated","cache","wikipage","StorageService","_default","serializedValue","localStorage","getItem","setItem","removeItem","UrlsService","fmt","String","mainUrl","Error","rtrim","resourceProvider","object_id","uploadComplete","uploadFailed","uploadProgress","evt","progressMessage","loaded","progressPercent","responseText","_error","FormData","XMLHttpRequest","upload","setRequestHeader","$http","$storage","filtersHashSuffix","hashSuffix","myFiltersHashSuffix","getQueryParams","project_id","bulk_issues","hash","innerPromise","hashSuffixStatusColumnModes","hashSuffixStatusViewModes","listByUser","bulk_memberships","notifyPolicies","statusUpdater","complete","failed","get_all","hashSuffixUserstories","storeUserstoriesQueryParams","hashSuffixUsRowModes","userStoryId","sprint_id","bulk_tasks","changeAvatar","transformRequest","identity","removeAvatar","changePassword","currentPassword","newPassword","current_password","userSettings","status_id","bulk_stories","webhookId","webhooklogId","UserChangePasswordController","UserChangePasswordDirective","newPassword1","newPassword2","DeleteUserDirective","TaigaAvatarModelDirective","UserAvatarDirective","UserProfileDirective","UserSettingsController","avatarAttachment","$parse","modelSetter","tgAvatarModel","UserSettingsNavigationDirective","tgUserSettingsNavigation","UserNotificationsController","UserNotificationsDirective","UserNotificationsListDirective","loadNotifyPolicies","policy","policyIndex","prev_level","notify_level","AUTH_URL","GithubLoginButtonDirective","$loader","clientId","loginOnError","loginOnSuccess","loginWithGitHubAccount","renderGitHubButton","error_message","state","redirectToUri","TermsNoticeDirective","privacyPolicyUrl","termsOfServiceUrl","termsUrl","privacyUrl","defaultMessage","type-email","type-url","type-urlstrict","type-number","type-digits","type-dateIso","type-alphanum","type-phone","notnull","notblank","regexp","minlength","maxlength","rangelength","mincheck","maxcheck","rangecheck","equalto","common","blocked","new-bulk","one-item-line","pagination","markdown-editor","heading-1","heading-2","heading-3","bold","italic","strike","bulleted-list","numeric-list","picture","quotes","code-block","help","link-placeholder","title-new","team-requirement","client-requirement"],"mappings":"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","file":"app.js","sourcesContent":["\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: app.coffee\n */\n\n(function() {\n  var configure, init, module, modules, taiga;\n\n  this.taiga = taiga = {};\n\n  this.taigaContribPlugins = this.taigaContribPlugins || [];\n\n  taiga.generateHash = function(components) {\n    if (components == null) {\n      components = [];\n    }\n    components = _.map(components, function(x) {\n      return JSON.stringify(x);\n    });\n    return hex_sha1(components.join(\":\"));\n  };\n\n  taiga.generateUniqueSessionIdentifier = function() {\n    var date, randomNumber;\n    date = (new Date()).getTime();\n    randomNumber = Math.floor(Math.random() * 0x9000000);\n    return taiga.generateHash([date, randomNumber]);\n  };\n\n  taiga.sessionId = taiga.generateUniqueSessionIdentifier();\n\n  configure = function($routeProvider, $locationProvider, $httpProvider, $provide, $tgEventsProvider, tgLoaderProvider) {\n    var authHttpIntercept, defaultHeaders, versionCheckHttpIntercept;\n    $routeProvider.when(\"/\", {\n      templateUrl: \"project/projects.html\",\n      resolve: {\n        loader: tgLoaderProvider.add()\n      }\n    });\n    $routeProvider.when(\"/project/:pslug/\", {\n      templateUrl: \"project/project.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/backlog\", {\n      templateUrl: \"backlog/backlog.html\",\n      resolve: {\n        loader: tgLoaderProvider.add()\n      }\n    });\n    $routeProvider.when(\"/project/:pslug/taskboard/:sslug\", {\n      templateUrl: \"taskboard/taskboard.html\",\n      resolve: {\n        loader: tgLoaderProvider.add()\n      }\n    });\n    $routeProvider.when(\"/project/:pslug/search\", {\n      templateUrl: \"search/search.html\",\n      reloadOnSearch: false\n    });\n    $routeProvider.when(\"/project/:pslug/kanban\", {\n      templateUrl: \"kanban/kanban.html\",\n      resolve: {\n        loader: tgLoaderProvider.add()\n      }\n    });\n    $routeProvider.when(\"/project/:pslug/us/:usref\", {\n      templateUrl: \"us/us-detail.html\",\n      resolve: {\n        loader: tgLoaderProvider.add()\n      }\n    });\n    $routeProvider.when(\"/project/:pslug/task/:taskref\", {\n      templateUrl: \"task/task-detail.html\",\n      resolve: {\n        loader: tgLoaderProvider.add()\n      }\n    });\n    $routeProvider.when(\"/project/:pslug/wiki\", {\n      redirectTo: function(params) {\n        return \"/project/\" + params.pslug + \"/wiki/home\";\n      }\n    });\n    $routeProvider.when(\"/project/:pslug/wiki/:slug\", {\n      templateUrl: \"wiki/wiki.html\",\n      resolve: {\n        loader: tgLoaderProvider.add()\n      }\n    });\n    $routeProvider.when(\"/project/:pslug/team\", {\n      templateUrl: \"team/team.html\",\n      resolve: {\n        loader: tgLoaderProvider.add()\n      }\n    });\n    $routeProvider.when(\"/project/:pslug/issues\", {\n      templateUrl: \"issue/issues.html\",\n      resolve: {\n        loader: tgLoaderProvider.add()\n      }\n    });\n    $routeProvider.when(\"/project/:pslug/issue/:issueref\", {\n      templateUrl: \"issue/issues-detail.html\",\n      resolve: {\n        loader: tgLoaderProvider.add()\n      }\n    });\n    $routeProvider.when(\"/project/:pslug/admin/project-profile/details\", {\n      templateUrl: \"admin/admin-project-profile.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/project-profile/default-values\", {\n      templateUrl: \"admin/admin-project-default-values.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/project-profile/modules\", {\n      templateUrl: \"admin/admin-project-modules.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/project-profile/export\", {\n      templateUrl: \"admin/admin-project-export.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/project-values/us-status\", {\n      templateUrl: \"admin/admin-project-values-us-status.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/project-values/us-points\", {\n      templateUrl: \"admin/admin-project-values-us-points.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/project-values/task-status\", {\n      templateUrl: \"admin/admin-project-values-task-status.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/project-values/issue-status\", {\n      templateUrl: \"admin/admin-project-values-issue-status.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/project-values/issue-types\", {\n      templateUrl: \"admin/admin-project-values-issue-types.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/project-values/issue-priorities\", {\n      templateUrl: \"admin/admin-project-values-issue-priorities.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/project-values/issue-severities\", {\n      templateUrl: \"admin/admin-project-values-issue-severities.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/memberships\", {\n      templateUrl: \"admin/admin-memberships.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/roles\", {\n      templateUrl: \"admin/admin-roles.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/third-parties/webhooks\", {\n      templateUrl: \"admin/admin-third-parties-webhooks.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/third-parties/github\", {\n      templateUrl: \"admin/admin-third-parties-github.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/third-parties/gitlab\", {\n      templateUrl: \"admin/admin-third-parties-gitlab.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/third-parties/bitbucket\", {\n      templateUrl: \"admin/admin-third-parties-bitbucket.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/admin/contrib/:plugin\", {\n      templateUrl: \"contrib/main.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/user-settings/user-profile\", {\n      templateUrl: \"user/user-profile.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/user-settings/user-change-password\", {\n      templateUrl: \"user/user-change-password.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/user-settings/user-avatar\", {\n      templateUrl: \"user/user-avatar.html\"\n    });\n    $routeProvider.when(\"/project/:pslug/user-settings/mail-notifications\", {\n      templateUrl: \"user/mail-notifications.html\"\n    });\n    $routeProvider.when(\"/change-email/:email_token\", {\n      templateUrl: \"user/change-email.html\"\n    });\n    $routeProvider.when(\"/cancel-account/:cancel_token\", {\n      templateUrl: \"user/cancel-account.html\"\n    });\n    $routeProvider.when(\"/login\", {\n      templateUrl: \"auth/login.html\"\n    });\n    $routeProvider.when(\"/register\", {\n      templateUrl: \"auth/register.html\"\n    });\n    $routeProvider.when(\"/forgot-password\", {\n      templateUrl: \"auth/forgot-password.html\"\n    });\n    $routeProvider.when(\"/change-password\", {\n      templateUrl: \"auth/change-password-from-recovery.html\"\n    });\n    $routeProvider.when(\"/change-password/:token\", {\n      templateUrl: \"auth/change-password-from-recovery.html\"\n    });\n    $routeProvider.when(\"/invitation/:token\", {\n      templateUrl: \"auth/invitation.html\"\n    });\n    $routeProvider.when(\"/error\", {\n      templateUrl: \"error/error.html\"\n    });\n    $routeProvider.when(\"/not-found\", {\n      templateUrl: \"error/not-found.html\"\n    });\n    $routeProvider.when(\"/permission-denied\", {\n      templateUrl: \"error/permission-denied.html\"\n    });\n    $routeProvider.otherwise({\n      redirectTo: '/not-found'\n    });\n    $locationProvider.html5Mode({\n      enabled: true,\n      requireBase: false\n    });\n    defaultHeaders = {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Language\": \"en\",\n      \"X-Session-Id\": taiga.sessionId\n    };\n    $httpProvider.defaults.headers[\"delete\"] = defaultHeaders;\n    $httpProvider.defaults.headers.patch = defaultHeaders;\n    $httpProvider.defaults.headers.post = defaultHeaders;\n    $httpProvider.defaults.headers.put = defaultHeaders;\n    $httpProvider.defaults.headers.get = {\n      \"X-Session-Id\": taiga.sessionId\n    };\n    $tgEventsProvider.setSessionId(taiga.sessionId);\n    authHttpIntercept = function($q, $location, $navUrls, $lightboxService) {\n      var httpResponseError;\n      httpResponseError = function(response) {\n        var nextPath;\n        if (response.status === 0) {\n          $lightboxService.closeAll();\n          $location.path($navUrls.resolve(\"error\"));\n          $location.replace();\n        } else if (response.status === 401) {\n          nextPath = $location.path();\n          $location.url($navUrls.resolve(\"login\")).search(\"next=\" + nextPath);\n        }\n        return $q.reject(response);\n      };\n      return {\n        responseError: httpResponseError\n      };\n    };\n    $provide.factory(\"authHttpIntercept\", [\"$q\", \"$location\", \"$tgNavUrls\", \"lightboxService\", authHttpIntercept]);\n    $httpProvider.interceptors.push('authHttpIntercept');\n    versionCheckHttpIntercept = function($q, $confirm) {\n      var httpResponseError, versionErrorMsg;\n      versionErrorMsg = \"Someone inside Taiga has changed this before and our Oompa Loompas cannot apply your changes. Please reload and apply your changes again (they will be lost).\";\n      httpResponseError = function(response) {\n        if (response.status === 400 && response.data.version) {\n          $confirm.notify(\"error\", versionErrorMsg, null, 10000);\n          return $q.reject(response);\n        }\n        return $q.reject(response);\n      };\n      return {\n        responseError: httpResponseError\n      };\n    };\n    $provide.factory(\"versionCheckHttpIntercept\", [\"$q\", \"$tgConfirm\", versionCheckHttpIntercept]);\n    $httpProvider.interceptors.push('versionCheckHttpIntercept');\n    window.checksley.updateValidators({\n      linewidth: function(val, width) {\n        var lines, valid;\n        lines = taiga.nl2br(val).split(\"<br />\");\n        valid = _.every(lines, function(line) {\n          return line.length < width;\n        });\n        return valid;\n      }\n    });\n    return window.checksley.updateMessages(\"default\", {\n      linewidth: \"The subject must have a maximum size of %s\"\n    });\n  };\n\n  init = function($log, $i18n, $config, $rootscope, $auth, $events, $analytics) {\n    $i18n.initialize($config.get(\"defaultLanguage\"));\n    $log.debug(\"Initialize application\");\n    $rootscope.contribPlugins = this.taigaContribPlugins;\n    if ($auth.isAuthenticated()) {\n      $events.setupConnection();\n    }\n    return $analytics.initialize();\n  };\n\n  modules = [\"taigaBase\", \"taigaCommon\", \"taigaResources\", \"taigaLocales\", \"taigaAuth\", \"taigaEvents\", \"taigaRelatedTasks\", \"taigaBacklog\", \"taigaTaskboard\", \"taigaKanban\", \"taigaIssues\", \"taigaUserStories\", \"taigaTasks\", \"taigaTeam\", \"taigaWiki\", \"taigaSearch\", \"taigaAdmin\", \"taigaNavMenu\", \"taigaProject\", \"taigaUserSettings\", \"taigaFeedback\", \"taigaPlugins\", \"taigaIntegrations\", \"templates\", \"ngRoute\", \"ngAnimate\"].concat(_.map(this.taigaContribPlugins, function(plugin) {\n    return plugin.module;\n  }));\n\n  module = angular.module(\"taiga\", modules);\n\n  module.config([\"$routeProvider\", \"$locationProvider\", \"$httpProvider\", \"$provide\", \"$tgEventsProvider\", \"tgLoaderProvider\", configure]);\n\n  module.run([\"$log\", \"$tgI18n\", \"$tgConfig\", \"$rootScope\", \"$tgAuth\", \"$tgEvents\", \"$tgAnalytics\", init]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: classes.coffee\n */\n\n(function() {\n  var TaigaBase, TaigaController, TaigaService,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  TaigaBase = (function() {\n    function TaigaBase() {}\n\n    return TaigaBase;\n\n  })();\n\n  TaigaService = (function(_super) {\n    __extends(TaigaService, _super);\n\n    function TaigaService() {\n      return TaigaService.__super__.constructor.apply(this, arguments);\n    }\n\n    return TaigaService;\n\n  })(TaigaBase);\n\n  TaigaController = (function(_super) {\n    __extends(TaigaController, _super);\n\n    function TaigaController() {\n      this.onInitialDataError = __bind(this.onInitialDataError, this);\n      return TaigaController.__super__.constructor.apply(this, arguments);\n    }\n\n    TaigaController.prototype.onInitialDataError = function(xhr) {\n      if (xhr) {\n        if (xhr.status === 404) {\n          this.location.path(this.navUrls.resolve(\"not-found\"));\n          this.location.replace();\n        } else if (xhr.status === 403) {\n          this.location.path(this.navUrls.resolve(\"permission-denied\"));\n          this.location.replace();\n        }\n      }\n      return this.q.reject(xhr);\n    };\n\n    return TaigaController;\n\n  })(TaigaBase);\n\n  this.taiga.Base = TaigaBase;\n\n  this.taiga.Service = TaigaService;\n\n  this.taiga.Controller = TaigaController;\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: utils.coffee\n */\n\n(function() {\n  var bindMethods, bindOnce, cancelTimeout, debounce, debounceLeading, groupBy, joinStr, mixOf, nl2br, scopeDefer, sizeFormat, slugify, startswith, taiga, timeout, toString, toggleText, trim, unslugify,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n    __slice = [].slice,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  nl2br = (function(_this) {\n    return function(str) {\n      var breakTag;\n      breakTag = '<br />';\n      return (str + '').replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + breakTag + '$2');\n    };\n  })(this);\n\n  bindMethods = (function(_this) {\n    return function(object) {\n      var dependencies, methods;\n      dependencies = _.keys(object);\n      methods = [];\n      _.forIn(object, function(value, key) {\n        if (__indexOf.call(dependencies, key) < 0) {\n          return methods.push(key);\n        }\n      });\n      return _.bindAll(object, methods);\n    };\n  })(this);\n\n  bindOnce = (function(_this) {\n    return function(scope, attr, continuation) {\n      var delBind, val;\n      val = scope.$eval(attr);\n      if (val !== void 0) {\n        return continuation(val);\n      }\n      delBind = null;\n      return delBind = scope.$watch(attr, function(val) {\n        if (val === void 0) {\n          return;\n        }\n        continuation(val);\n        if (delBind) {\n          return delBind();\n        }\n      });\n    };\n  })(this);\n\n  mixOf = function() {\n    var Mixed, base, method, mixin, mixins, name, _i, _ref;\n    base = arguments[0], mixins = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    Mixed = (function(_super) {\n      __extends(Mixed, _super);\n\n      function Mixed() {\n        return Mixed.__super__.constructor.apply(this, arguments);\n      }\n\n      return Mixed;\n\n    })(base);\n    for (_i = mixins.length - 1; _i >= 0; _i += -1) {\n      mixin = mixins[_i];\n      _ref = mixin.prototype;\n      for (name in _ref) {\n        method = _ref[name];\n        Mixed.prototype[name] = method;\n      }\n    }\n    return Mixed;\n  };\n\n  trim = function(data, char) {\n    return _.str.trim(data, char);\n  };\n\n  slugify = function(data) {\n    return _.str.slugify(data);\n  };\n\n  unslugify = function(data) {\n    if (data) {\n      return _.str.capitalize(data.replace(/-/g, ' '));\n    }\n    return data;\n  };\n\n  toggleText = function(element, texts) {\n    var nextTextPosition, text;\n    nextTextPosition = element.data('nextTextPosition');\n    if ((nextTextPosition == null) || nextTextPosition >= texts.length) {\n      nextTextPosition = 0;\n    }\n    text = texts[nextTextPosition];\n    element.data('nextTextPosition', nextTextPosition + 1);\n    return element.text(text);\n  };\n\n  groupBy = function(coll, pred) {\n    var item, result, _i, _len;\n    result = {};\n    for (_i = 0, _len = coll.length; _i < _len; _i++) {\n      item = coll[_i];\n      result[pred(item)] = item;\n    }\n    return result;\n  };\n\n  timeout = function(wait, continuation) {\n    return window.setTimeout(continuation, wait);\n  };\n\n  cancelTimeout = function(timeoutVar) {\n    return window.clearTimeout(timeoutVar);\n  };\n\n  scopeDefer = function(scope, func) {\n    return _.defer((function(_this) {\n      return function() {\n        return scope.$apply(func);\n      };\n    })(this));\n  };\n\n  toString = function(value) {\n    if (_.isNumber(value)) {\n      return value + \"\";\n    } else if (_.isString(value)) {\n      return value;\n    } else if (_.isPlainObject(value)) {\n      return JSON.stringify(value);\n    } else if (_.isUndefined(value)) {\n      return \"\";\n    }\n    return value.toString();\n  };\n\n  joinStr = function(str, coll) {\n    return _.str.join(str, coll);\n  };\n\n  debounce = function(wait, func) {\n    return _.debounce(func, wait, {\n      leading: true,\n      trailing: false\n    });\n  };\n\n  debounceLeading = function(wait, func) {\n    return _.debounce(func, wait, {\n      leading: false,\n      trailing: true\n    });\n  };\n\n  startswith = function(str1, str2) {\n    return _.str.startsWith(str1, str2);\n  };\n\n  sizeFormat = function(input, precision) {\n    var number, size, units;\n    if (precision == null) {\n      precision = 1;\n    }\n    if (isNaN(parseFloat(input)) || !isFinite(input)) {\n      return \"-\";\n    }\n    if (input === 0) {\n      return \"0 bytes\";\n    }\n    units = [\"bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\"];\n    number = Math.floor(Math.log(input) / Math.log(1024));\n    if (number > 5) {\n      number = 5;\n    }\n    size = (input / Math.pow(1024, number)).toFixed(precision);\n    return size + \" \" + units[number];\n  };\n\n  taiga = this.taiga;\n\n  taiga.nl2br = nl2br;\n\n  taiga.bindMethods = bindMethods;\n\n  taiga.bindOnce = bindOnce;\n\n  taiga.mixOf = mixOf;\n\n  taiga.trim = trim;\n\n  taiga.slugify = slugify;\n\n  taiga.unslugify = unslugify;\n\n  taiga.toggleText = toggleText;\n\n  taiga.groupBy = groupBy;\n\n  taiga.timeout = timeout;\n\n  taiga.cancelTimeout = cancelTimeout;\n\n  taiga.scopeDefer = scopeDefer;\n\n  taiga.toString = toString;\n\n  taiga.joinStr = joinStr;\n\n  taiga.debounce = debounce;\n\n  taiga.debounceLeading = debounceLeading;\n\n  taiga.startswith = startswith;\n\n  taiga.sizeFormat = sizeFormat;\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/controllerMixins.coffee\n */\n\n(function() {\n  var FiltersMixin, PageMixin, groupBy, joinStr, taiga, toString, trim;\n\n  taiga = this.taiga;\n\n  groupBy = this.taiga.groupBy;\n\n  joinStr = this.taiga.joinStr;\n\n  trim = this.taiga.trim;\n\n  toString = this.taiga.toString;\n\n  PageMixin = (function() {\n    function PageMixin() {}\n\n    PageMixin.prototype.fillUsersAndRoles = function(users, roles) {\n      var activeUsers, availableRoles;\n      activeUsers = _.filter(users, (function(_this) {\n        return function(user) {\n          return user.is_active;\n        };\n      })(this));\n      this.scope.activeUsers = _.sortBy(activeUsers, \"full_name_display\");\n      this.scope.activeUsersById = groupBy(this.scope.activeUsers, function(e) {\n        return e.id;\n      });\n      this.scope.users = _.sortBy(users, \"full_name_display\");\n      this.scope.usersById = groupBy(this.scope.users, function(e) {\n        return e.id;\n      });\n      this.scope.roles = _.sortBy(roles, \"order\");\n      availableRoles = _(this.scope.project.memberships).map(\"role\").uniq().value();\n      return this.scope.computableRoles = _(roles).filter(\"computable\").filter(function(x) {\n        return _.contains(availableRoles, x.id);\n      }).value();\n    };\n\n    PageMixin.prototype.loadUsersAndRoles = function() {\n      var promise;\n      promise = this.q.all([this.rs.projects.usersList(this.scope.projectId), this.rs.projects.rolesList(this.scope.projectId)]);\n      return promise.then((function(_this) {\n        return function(results) {\n          var roles, users;\n          users = results[0], roles = results[1];\n          _this.fillUsersAndRoles(users, roles);\n          return results;\n        };\n      })(this));\n    };\n\n    return PageMixin;\n\n  })();\n\n  taiga.PageMixin = PageMixin;\n\n  FiltersMixin = (function() {\n    function FiltersMixin() {}\n\n    FiltersMixin.prototype.selectFilter = function(name, value, load) {\n      var existing, location, params;\n      if (load == null) {\n        load = false;\n      }\n      params = this.location.search();\n      if (params[name] !== void 0 && name !== \"page\") {\n        existing = _.map(taiga.toString(params[name]).split(\",\"), function(x) {\n          return trim(x);\n        });\n        existing.push(taiga.toString(value));\n        existing = _.compact(existing);\n        value = joinStr(\",\", _.uniq(existing));\n      }\n      location = load ? this.location : this.location.noreload(this.scope);\n      return location.search(name, value);\n    };\n\n    FiltersMixin.prototype.replaceFilter = function(name, value, load) {\n      var location;\n      if (load == null) {\n        load = false;\n      }\n      location = load ? this.location : this.location.noreload(this.scope);\n      return location.search(name, value);\n    };\n\n    FiltersMixin.prototype.replaceAllFilters = function(filters, load) {\n      var location;\n      if (load == null) {\n        load = false;\n      }\n      location = load ? this.location : this.location.noreload(this.scope);\n      return location.search(filters);\n    };\n\n    FiltersMixin.prototype.unselectFilter = function(name, value, load) {\n      var location, newValues, params, parsedValues;\n      if (load == null) {\n        load = false;\n      }\n      params = this.location.search();\n      if (params[name] === void 0) {\n        return;\n      }\n      if (value === void 0 || value === null) {\n        delete params[name];\n      }\n      parsedValues = _.map(taiga.toString(params[name]).split(\",\"), function(x) {\n        return trim(x);\n      });\n      newValues = _.reject(parsedValues, function(x) {\n        return x === taiga.toString(value);\n      });\n      newValues = _.compact(newValues);\n      if (_.isEmpty(newValues)) {\n        value = null;\n      } else {\n        value = joinStr(\",\", _.uniq(newValues));\n      }\n      location = load ? this.location : this.location.noreload(this.scope);\n      return location.search(name, value);\n    };\n\n    return FiltersMixin;\n\n  })();\n\n  taiga.FiltersMixin = FiltersMixin;\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/admin.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaAdmin\", []);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/auth.coffee\n */\n\n(function() {\n  var AuthService, CancelAccountDirective, ChangeEmailDirective, ChangePasswordFromRecoveryDirective, ForgotPasswordDirective, InvitationDirective, LoginDirective, PublicRegisterMessageDirective, RegisterDirective, debounce, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaAuth\", [\"taigaResources\"]);\n\n  AuthService = (function(_super) {\n    __extends(AuthService, _super);\n\n    AuthService.$inject = [\"$rootScope\", \"$tgStorage\", \"$tgModel\", \"$tgResources\", \"$tgHttp\", \"$tgUrls\"];\n\n    function AuthService(_at_rootscope, _at_storage, _at_model, _at_rs, _at_http, _at_urls) {\n      this.rootscope = _at_rootscope;\n      this.storage = _at_storage;\n      this.model = _at_model;\n      this.rs = _at_rs;\n      this.http = _at_http;\n      this.urls = _at_urls;\n      AuthService.__super__.constructor.call(this);\n    }\n\n    AuthService.prototype.getUser = function() {\n      var user, userData;\n      if (this.rootscope.user) {\n        return this.rootscope.user;\n      }\n      userData = this.storage.get(\"userInfo\");\n      if (userData) {\n        user = this.model.make_model(\"users\", userData);\n        this.rootscope.user = user;\n        return user;\n      }\n      return null;\n    };\n\n    AuthService.prototype.setUser = function(user) {\n      this.rootscope.auth = user;\n      this.rootscope.$broadcast(\"i18n:change\", user.default_language);\n      this.storage.set(\"userInfo\", user.getAttrs());\n      return this.rootscope.user = user;\n    };\n\n    AuthService.prototype.clear = function() {\n      this.rootscope.auth = null;\n      this.rootscope.user = null;\n      return this.storage.remove(\"userInfo\");\n    };\n\n    AuthService.prototype.setToken = function(token) {\n      return this.storage.set(\"token\", token);\n    };\n\n    AuthService.prototype.getToken = function() {\n      return this.storage.get(\"token\");\n    };\n\n    AuthService.prototype.removeToken = function() {\n      return this.storage.remove(\"token\");\n    };\n\n    AuthService.prototype.isAuthenticated = function() {\n      if (this.getUser() !== null) {\n        return true;\n      }\n      return false;\n    };\n\n    AuthService.prototype.login = function(data, type) {\n      var url;\n      url = this.urls.resolve(\"auth\");\n      data = _.clone(data, false);\n      data.type = type ? type : \"normal\";\n      this.removeToken();\n      return this.http.post(url, data).then((function(_this) {\n        return function(data, status) {\n          var user;\n          user = _this.model.make_model(\"users\", data.data);\n          _this.setToken(user.auth_token);\n          _this.setUser(user);\n          return user;\n        };\n      })(this));\n    };\n\n    AuthService.prototype.logout = function() {\n      this.removeToken();\n      return this.clear();\n    };\n\n    AuthService.prototype.register = function(data, type, existing) {\n      var url;\n      url = this.urls.resolve(\"auth-register\");\n      data = _.clone(data, false);\n      data.type = type ? type : \"public\";\n      if (type === \"private\") {\n        data.existing = existing ? existing : false;\n      }\n      this.removeToken();\n      return this.http.post(url, data).then((function(_this) {\n        return function(response) {\n          var user;\n          user = _this.model.make_model(\"users\", response.data);\n          _this.setToken(user.auth_token);\n          _this.setUser(user);\n          return user;\n        };\n      })(this));\n    };\n\n    AuthService.prototype.getInvitation = function(token) {\n      return this.rs.invitations.get(token);\n    };\n\n    AuthService.prototype.acceptInvitiationWithNewUser = function(data) {\n      return this.register(data, \"private\", false);\n    };\n\n    AuthService.prototype.acceptInvitiationWithExistingUser = function(data) {\n      return this.register(data, \"private\", true);\n    };\n\n    AuthService.prototype.forgotPassword = function(data) {\n      var url;\n      url = this.urls.resolve(\"users-password-recovery\");\n      data = _.clone(data, false);\n      this.removeToken();\n      return this.http.post(url, data);\n    };\n\n    AuthService.prototype.changePasswordFromRecovery = function(data) {\n      var url;\n      url = this.urls.resolve(\"users-change-password-from-recovery\");\n      data = _.clone(data, false);\n      this.removeToken();\n      return this.http.post(url, data);\n    };\n\n    AuthService.prototype.changeEmail = function(data) {\n      var url;\n      url = this.urls.resolve(\"users-change-email\");\n      data = _.clone(data, false);\n      return this.http.post(url, data);\n    };\n\n    AuthService.prototype.cancelAccount = function(data) {\n      var url;\n      url = this.urls.resolve(\"users-cancel-account\");\n      data = _.clone(data, false);\n      return this.http.post(url, data);\n    };\n\n    return AuthService;\n\n  })(taiga.Service);\n\n  module.service(\"$tgAuth\", AuthService);\n\n  PublicRegisterMessageDirective = function($config, $navUrls, templates) {\n    var template, templateFn;\n    template = templates.get(\"auth/login-text.html\", true);\n    templateFn = function() {\n      var publicRegisterEnabled;\n      publicRegisterEnabled = $config.get(\"publicRegisterEnabled\");\n      if (!publicRegisterEnabled) {\n        return \"\";\n      }\n      return template({\n        url: $navUrls.resolve(\"register\")\n      });\n    };\n    return {\n      restrict: \"AE\",\n      scope: {},\n      template: templateFn\n    };\n  };\n\n  module.directive(\"tgPublicRegisterMessage\", [\"$tgConfig\", \"$tgNavUrls\", \"$tgTemplate\", PublicRegisterMessageDirective]);\n\n  LoginDirective = function($auth, $confirm, $location, $config, $routeParams, $navUrls, $events) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var onError, onSuccess, submit;\n      onSuccess = function(response) {\n        var nextUrl;\n        if ($routeParams['next'] && $routeParams['next'] !== $navUrls.resolve(\"login\")) {\n          nextUrl = $routeParams['next'];\n        } else {\n          nextUrl = $navUrls.resolve(\"home\");\n        }\n        $events.setupConnection();\n        return $location.path(nextUrl);\n      };\n      onError = function(response) {\n        return $confirm.notify(\"light-error\", \"According to our Oompa Loompas, your username/email or password are incorrect.\");\n      };\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var data, form, promise;\n          event.preventDefault();\n          form = new checksley.Form($el.find(\"form.login-form\"));\n          if (!form.validate()) {\n            return;\n          }\n          data = {\n            \"username\": $el.find(\"form.login-form input[name=username]\").val(),\n            \"password\": $el.find(\"form.login-form input[name=password]\").val()\n          };\n          promise = $auth.login(data);\n          return promise.then(onSuccess, onError);\n        };\n      })(this));\n      return $el.on(\"submit\", \"form\", submit);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLogin\", [\"$tgAuth\", \"$tgConfirm\", \"$tgLocation\", \"$tgConfig\", \"$routeParams\", \"$tgNavUrls\", \"$tgEvents\", LoginDirective]);\n\n  RegisterDirective = function($auth, $confirm, $location, $navUrls, $config, $analytics) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var form, onErrorSubmit, onSuccessSubmit, submit;\n      if (!$config.get(\"publicRegisterEnabled\")) {\n        $location.path($navUrls.resolve(\"not-found\"));\n        $location.replace();\n      }\n      $scope.data = {};\n      form = $el.find(\"form\").checksley({\n        onlyOneErrorElement: true\n      });\n      onSuccessSubmit = function(response) {\n        $analytics.trackEvent(\"auth\", \"register\", \"user registration\", 1);\n        $confirm.notify(\"success\", \"Our Oompa Loompas are happy, welcome to Taiga.\");\n        return $location.path($navUrls.resolve(\"home\"));\n      };\n      onErrorSubmit = function(response) {\n        if (response.data._error_message != null) {\n          $confirm.notify(\"light-error\", \"According to our Oompa Loompas there was an error. \" + response.data._error_message);\n        }\n        return form.setErrors(response.data);\n      };\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var promise;\n          event.preventDefault();\n          if (!form.validate()) {\n            return;\n          }\n          promise = $auth.register($scope.data);\n          return promise.then(onSuccessSubmit, onErrorSubmit);\n        };\n      })(this));\n      return $el.on(\"submit\", \"form\", submit);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgRegister\", [\"$tgAuth\", \"$tgConfirm\", \"$tgLocation\", \"$tgNavUrls\", \"$tgConfig\", \"$tgAnalytics\", RegisterDirective]);\n\n  ForgotPasswordDirective = function($auth, $confirm, $location, $navUrls) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var form, onErrorSubmit, onSuccessSubmit, submit;\n      $scope.data = {};\n      form = $el.find(\"form\").checksley();\n      onSuccessSubmit = function(response) {\n        $location.path($navUrls.resolve(\"login\"));\n        return $confirm.success(\"<strong>Check your inbox!</strong><br /> We have sent a mail to<br /> <strong>\" + response.data.email + \"</strong><br /> with the instructions to set a new password\");\n      };\n      onErrorSubmit = function(response) {\n        return $confirm.notify(\"light-error\", \"According to our Oompa Loompas, your are not registered yet.\");\n      };\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var promise;\n          event.preventDefault();\n          if (!form.validate()) {\n            return;\n          }\n          promise = $auth.forgotPassword($scope.data);\n          return promise.then(onSuccessSubmit, onErrorSubmit);\n        };\n      })(this));\n      return $el.on(\"submit\", \"form\", submit);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgForgotPassword\", [\"$tgAuth\", \"$tgConfirm\", \"$tgLocation\", \"$tgNavUrls\", ForgotPasswordDirective]);\n\n  ChangePasswordFromRecoveryDirective = function($auth, $confirm, $location, $params, $navUrls) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var form, onErrorSubmit, onSuccessSubmit, submit;\n      $scope.data = {};\n      if ($params.token != null) {\n        $scope.tokenInParams = true;\n        $scope.data.token = $params.token;\n      } else {\n        $scope.tokenInParams = false;\n      }\n      form = $el.find(\"form\").checksley();\n      onSuccessSubmit = function(response) {\n        $location.path($navUrls.resolve(\"login\"));\n        return $confirm.success(\"Our Oompa Loompas saved your new password.<br /> Try to <strong>sign in</strong> with it.\");\n      };\n      onErrorSubmit = function(response) {\n        return $confirm.notify(\"light-error\", \"One of our Oompa Loompas say '\" + response.data._error_message + \"'.\");\n      };\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var promise;\n          event.preventDefault();\n          if (!form.validate()) {\n            return;\n          }\n          promise = $auth.changePasswordFromRecovery($scope.data);\n          return promise.then(onSuccessSubmit, onErrorSubmit);\n        };\n      })(this));\n      return $el.on(\"submit\", \"form\", submit);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgChangePasswordFromRecovery\", [\"$tgAuth\", \"$tgConfirm\", \"$tgLocation\", \"$routeParams\", \"$tgNavUrls\", ChangePasswordFromRecoveryDirective]);\n\n  InvitationDirective = function($auth, $confirm, $location, $params, $navUrls, $analytics) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var loginForm, onErrorSubmitLogin, onErrorSubmitRegister, onSuccessSubmitLogin, onSuccessSubmitRegister, promise, registerForm, submitLogin, submitRegister, token;\n      token = $params.token;\n      promise = $auth.getInvitation(token);\n      promise.then(function(invitation) {\n        return $scope.invitation = invitation;\n      });\n      promise.then(null, function(response) {\n        $location.path($navUrls.resolve(\"login\"));\n        return $confirm.success(\"<strong>Ooops, we have a problem</strong><br /> Our Oompa Loompas can't find your invitation.\");\n      });\n      $scope.dataLogin = {\n        token: token\n      };\n      loginForm = $el.find(\"form.login-form\").checksley({\n        onlyOneErrorElement: true\n      });\n      onSuccessSubmitLogin = function(response) {\n        $analytics.trackEvent(\"auth\", \"invitationAccept\", \"invitation accept with existing user\", 1);\n        $location.path($navUrls.resolve(\"project\", {\n          project: $scope.invitation.project_slug\n        }));\n        return $confirm.notify(\"success\", \"You've successfully joined this project\", \"Welcome to \" + (_.escape($scope.invitation.project_name)));\n      };\n      onErrorSubmitLogin = function(response) {\n        return $confirm.notify(\"light-error\", \"According to our Oompa Loompas, your are not registered yet or typed an invalid password.\");\n      };\n      submitLogin = debounce(2000, (function(_this) {\n        return function(event) {\n          event.preventDefault();\n          if (!loginForm.validate()) {\n            return;\n          }\n          promise = $auth.acceptInvitiationWithExistingUser($scope.dataLogin);\n          return promise.then(onSuccessSubmitLogin, onErrorSubmitLogin);\n        };\n      })(this));\n      $el.on(\"submit\", \"form.login-form\", submitLogin);\n      $el.on(\"click\", \".button-login\", submitLogin);\n      $scope.dataRegister = {\n        token: token\n      };\n      registerForm = $el.find(\"form.register-form\").checksley();\n      onSuccessSubmitRegister = function(response) {\n        $analytics.trackEvent(\"auth\", \"invitationAccept\", \"invitation accept with new user\", 1);\n        $location.path($navUrls.resolve(\"project\", {\n          project: $scope.invitation.project_slug\n        }));\n        return $confirm.notify(\"success\", \"You've successfully joined this project\", \"Welcome to \" + (_.escape($scope.invitation.project_name)));\n      };\n      onErrorSubmitRegister = function(response) {\n        return $confirm.notify(\"light-error\", \"According to our Oompa Loompas, that username or email is already in use.\");\n      };\n      submitRegister = debounce(2000, (function(_this) {\n        return function(event) {\n          event.preventDefault();\n          if (!registerForm.validate()) {\n            return;\n          }\n          promise = $auth.acceptInvitiationWithNewUser($scope.dataRegister);\n          return promise.then(onSuccessSubmitRegister, onErrorSubmitRegister);\n        };\n      })(this));\n      $el.on(\"submit\", \"form.register-form\", submitRegister);\n      return $el.on(\"click\", \".button-register\", submitRegister);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgInvitation\", [\"$tgAuth\", \"$tgConfirm\", \"$tgLocation\", \"$routeParams\", \"$tgNavUrls\", \"$tgAnalytics\", InvitationDirective]);\n\n  ChangeEmailDirective = function($repo, $model, $auth, $confirm, $location, $params, $navUrls) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var form, onErrorSubmit, onSuccessSubmit, submit;\n      $scope.data = {};\n      $scope.data.email_token = $params.email_token;\n      form = $el.find(\"form\").checksley();\n      onSuccessSubmit = function(response) {\n        return $repo.queryOne(\"users\", $auth.getUser().id).then((function(_this) {\n          return function(data) {\n            $auth.setUser(data);\n            $location.path($navUrls.resolve(\"home\"));\n            return $confirm.success(\"Our Oompa Loompas updated your email\");\n          };\n        })(this));\n      };\n      onErrorSubmit = function(response) {\n        return $confirm.notify(\"error\", \"One of our Oompa Loompas says '\" + response.data._error_message + \"'.\");\n      };\n      submit = function() {\n        var promise;\n        if (!form.validate()) {\n          return;\n        }\n        promise = $auth.changeEmail($scope.data);\n        return promise.then(onSuccessSubmit, onErrorSubmit);\n      };\n      $el.on(\"submit\", function(event) {\n        event.preventDefault();\n        return submit();\n      });\n      return $el.on(\"click\", \"a.button-change-email\", function(event) {\n        event.preventDefault();\n        return submit();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgChangeEmail\", [\"$tgRepo\", \"$tgModel\", \"$tgAuth\", \"$tgConfirm\", \"$tgLocation\", \"$routeParams\", \"$tgNavUrls\", ChangeEmailDirective]);\n\n  CancelAccountDirective = function($repo, $model, $auth, $confirm, $location, $params, $navUrls) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var form, onErrorSubmit, onSuccessSubmit, submit;\n      $scope.data = {};\n      $scope.data.cancel_token = $params.cancel_token;\n      form = $el.find(\"form\").checksley();\n      onSuccessSubmit = function(response) {\n        $auth.logout();\n        $location.path($navUrls.resolve(\"home\"));\n        return $confirm.success(\"Our Oompa Loompas removed your account\");\n      };\n      onErrorSubmit = function(response) {\n        return $confirm.notify(\"error\", \"One of our Oompa Loompas says '\" + response.data._error_message + \"'.\");\n      };\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var promise;\n          event.preventDefault();\n          if (!form.validate()) {\n            return;\n          }\n          promise = $auth.cancelAccount($scope.data);\n          return promise.then(onSuccessSubmit, onErrorSubmit);\n        };\n      })(this));\n      return $el.on(\"submit\", \"form\", submit);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgCancelAccount\", [\"$tgRepo\", \"$tgModel\", \"$tgAuth\", \"$tgConfirm\", \"$tgLocation\", \"$routeParams\", \"$tgNavUrls\", CancelAccountDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/backlog.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaBacklog\", []);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base.coffee\n */\n\n(function() {\n  var TaigaMainDirective, bindOnce, groupBy, init, module, taiga, urls;\n\n  taiga = this.taiga;\n\n  groupBy = this.taiga.groupBy;\n\n  bindOnce = this.taiga.bindOnce;\n\n  module = angular.module(\"taigaBase\", [\"taigaLocales\"]);\n\n  TaigaMainDirective = function($rootscope, $window) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return $window.onresize = function() {\n        return $rootscope.$broadcast(\"resize\");\n      };\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgMain\", [\"$rootScope\", \"$window\", TaigaMainDirective]);\n\n  urls = {\n    \"home\": \"/\",\n    \"error\": \"/error\",\n    \"not-found\": \"/not-found\",\n    \"permission-denied\": \"/permission-denied\",\n    \"login\": \"/login\",\n    \"forgot-password\": \"/forgot-password\",\n    \"change-password\": \"/change-password/:token\",\n    \"change-email\": \"/change-email/:token\",\n    \"cancel-account\": \"/cancel-account/:token\",\n    \"register\": \"/register\",\n    \"invitation\": \"/invitation/:token\",\n    \"create-project\": \"/create-project\",\n    \"profile\": \"/:user\",\n    \"project\": \"/project/:project\",\n    \"project-backlog\": \"/project/:project/backlog\",\n    \"project-taskboard\": \"/project/:project/taskboard/:sprint\",\n    \"project-kanban\": \"/project/:project/kanban\",\n    \"project-issues\": \"/project/:project/issues\",\n    \"project-search\": \"/project/:project/search\",\n    \"project-userstories-detail\": \"/project/:project/us/:ref\",\n    \"project-tasks-detail\": \"/project/:project/task/:ref\",\n    \"project-issues-detail\": \"/project/:project/issue/:ref\",\n    \"project-wiki\": \"/project/:project/wiki\",\n    \"project-wiki-page\": \"/project/:project/wiki/:slug\",\n    \"project-team\": \"/project/:project/team\",\n    \"project-admin-home\": \"/project/:project/admin/project-profile/details\",\n    \"project-admin-project-profile-details\": \"/project/:project/admin/project-profile/details\",\n    \"project-admin-project-profile-default-values\": \"/project/:project/admin/project-profile/default-values\",\n    \"project-admin-project-profile-modules\": \"/project/:project/admin/project-profile/modules\",\n    \"project-admin-project-profile-export\": \"/project/:project/admin/project-profile/export\",\n    \"project-admin-project-values-us-status\": \"/project/:project/admin/project-values/us-status\",\n    \"project-admin-project-values-us-points\": \"/project/:project/admin/project-values/us-points\",\n    \"project-admin-project-values-task-status\": \"/project/:project/admin/project-values/task-status\",\n    \"project-admin-project-values-issue-status\": \"/project/:project/admin/project-values/issue-status\",\n    \"project-admin-project-values-issue-types\": \"/project/:project/admin/project-values/issue-types\",\n    \"project-admin-project-values-issue-priorities\": \"/project/:project/admin/project-values/issue-priorities\",\n    \"project-admin-project-values-issue-severities\": \"/project/:project/admin/project-values/issue-severities\",\n    \"project-admin-memberships\": \"/project/:project/admin/memberships\",\n    \"project-admin-roles\": \"/project/:project/admin/roles\",\n    \"project-admin-third-parties-webhooks\": \"/project/:project/admin/third-parties/webhooks\",\n    \"project-admin-third-parties-github\": \"/project/:project/admin/third-parties/github\",\n    \"project-admin-third-parties-gitlab\": \"/project/:project/admin/third-parties/gitlab\",\n    \"project-admin-third-parties-bitbucket\": \"/project/:project/admin/third-parties/bitbucket\",\n    \"project-admin-contrib\": \"/project/:project/admin/contrib/:plugin\",\n    \"user-settings-user-profile\": \"/project/:project/user-settings/user-profile\",\n    \"user-settings-user-change-password\": \"/project/:project/user-settings/user-change-password\",\n    \"user-settings-user-avatar\": \"/project/:project/user-settings/user-avatar\",\n    \"user-settings-mail-notifications\": \"/project/:project/user-settings/mail-notifications\"\n  };\n\n  init = function($log, $navurls) {\n    $log.debug(\"Initialize navigation urls\");\n    return $navurls.update(urls);\n  };\n\n  module.run([\"$log\", \"$tgNavUrls\", init]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common.coffee\n */\n\n(function() {\n  var AnimationFrame, AppTitle, CheckPermissionDirective, LimitLineLengthDirective, ProjectUrl, Qqueue, SelectedText, Template, ToggleCommentDirective, module, taiga,\n    __slice = [].slice;\n\n  taiga = this.taiga;\n\n  module = angular.module(\"taigaCommon\", []);\n\n  SelectedText = function($window, $document) {\n    var get;\n    get = function() {\n      if ($window.getSelection) {\n        return $window.getSelection().toString();\n      } else if ($document.selection) {\n        return $document.selection.createRange().text;\n      }\n      return \"\";\n    };\n    return {\n      get: get\n    };\n  };\n\n  module.factory(\"$selectedText\", [\"$window\", \"$document\", SelectedText]);\n\n  CheckPermissionDirective = function() {\n    var link, render;\n    render = function($el, project, permission) {\n      if (project.my_permissions.indexOf(permission) > -1) {\n        return $el.removeClass('hidden');\n      }\n    };\n    link = function($scope, $el, $attrs) {\n      var permission;\n      $el.addClass('hidden');\n      permission = $attrs.tgCheckPermission;\n      $scope.$watch(\"project\", function(project) {\n        if (project != null) {\n          return render($el, project, permission);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgCheckPermission\", CheckPermissionDirective);\n\n  AnimationFrame = function() {\n    var add, animationFrame, performAnimation, tail;\n    animationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n    performAnimation = (function(_this) {\n      return function(time) {\n        var fn;\n        fn = tail.shift();\n        fn();\n        if (tail.length) {\n          return animationFrame(performAnimation);\n        }\n      };\n    })(this);\n    tail = [];\n    add = function() {\n      var fn, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = arguments.length; _i < _len; _i++) {\n        fn = arguments[_i];\n        tail.push(fn);\n        if (tail.length === 1) {\n          _results.push(animationFrame(performAnimation));\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n    return {\n      add: add\n    };\n  };\n\n  module.factory(\"animationFrame\", AnimationFrame);\n\n  ToggleCommentDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return $el.find(\"textarea\").on(\"focus\", function() {\n        return $el.addClass(\"active\");\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgToggleComment\", ToggleCommentDirective);\n\n  AppTitle = function() {\n    var set;\n    set = function(text) {\n      return $(\"title\").text(text);\n    };\n    return {\n      set: set\n    };\n  };\n\n  module.factory(\"$appTitle\", AppTitle);\n\n  ProjectUrl = function($navurls) {\n    var get;\n    get = function(project) {\n      var ctx;\n      ctx = {\n        project: project.slug\n      };\n      if (project.is_backlog_activated && project.my_permissions.indexOf(\"view_us\") > -1) {\n        return $navurls.resolve(\"project-backlog\", ctx);\n      }\n      if (project.is_kanban_activated && project.my_permissions.indexOf(\"view_us\") > -1) {\n        return $navurls.resolve(\"project-kanban\", ctx);\n      }\n      if (project.is_wiki_activated && project.my_permissions.indexOf(\"view_wiki_pages\") > -1) {\n        return $navurls.resolve(\"project-wiki\", ctx);\n      }\n      if (project.is_issues_activated && project.my_permissions.indexOf(\"view_issues\") > -1) {\n        return $navurls.resolve(\"project-issues\", ctx);\n      }\n      return $navurls.resolve(\"project\", ctx);\n    };\n    return {\n      get: get\n    };\n  };\n\n  module.factory(\"$projectUrl\", [\"$tgNavUrls\", ProjectUrl]);\n\n  LimitLineLengthDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var maxColsPerLine;\n      maxColsPerLine = parseInt($el.attr(\"cols\"));\n      return $el.on(\"keyup\", function(event) {\n        var code, lines;\n        code = event.keyCode;\n        lines = $el.val().split(\"\\n\");\n        _.each(lines, function(line, index) {\n          return lines[index] = line.substring(0, maxColsPerLine - 2);\n        });\n        return $el.val(lines.join(\"\\n\"));\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLimitLineLength\", LimitLineLengthDirective);\n\n  Qqueue = function($q) {\n    var deferred, lastPromise, qqueue;\n    deferred = $q.defer();\n    deferred.resolve();\n    lastPromise = deferred.promise;\n    qqueue = {\n      bindAdd: (function(_this) {\n        return function(fn) {\n          return function() {\n            var args;\n            args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n            return lastPromise = lastPromise.then(function() {\n              return fn.apply(_this, args);\n            });\n          };\n          return qqueue;\n        };\n      })(this),\n      add: (function(_this) {\n        return function(fn) {\n          if (!lastPromise) {\n            lastPromise = fn();\n          } else {\n            lastPromise = lastPromise.then(fn);\n          }\n          return qqueue;\n        };\n      })(this)\n    };\n    return qqueue;\n  };\n\n  module.factory(\"$tgQqueue\", [\"$q\", Qqueue]);\n\n  Template = function($templateCache) {\n    return {\n      get: (function(_this) {\n        return function(name, lodash) {\n          var tmp;\n          if (lodash == null) {\n            lodash = false;\n          }\n          tmp = $templateCache.get(name);\n          if (lodash) {\n            tmp = _.template(tmp);\n          }\n          return tmp;\n        };\n      })(this)\n    };\n  };\n\n  module.factory(\"$tgTemplate\", [\"$templateCache\", Template]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/events.coffee\n */\n\n(function() {\n  var EventsProvider, EventsService, bindMethods, module, startswith, taiga;\n\n  taiga = this.taiga;\n\n  startswith = this.taiga.startswith;\n\n  bindMethods = this.taiga.bindMethods;\n\n  module = angular.module(\"taigaEvents\", []);\n\n  EventsService = (function() {\n    function EventsService(_at_win, _at_log, _at_config, _at_auth) {\n      this.win = _at_win;\n      this.log = _at_log;\n      this.config = _at_config;\n      this.auth = _at_auth;\n      bindMethods(this);\n    }\n\n    EventsService.prototype.initialize = function(sessionId) {\n      this.sessionId = sessionId;\n      this.subscriptions = {};\n      this.connected = false;\n      this.error = false;\n      this.pendingMessages = [];\n      if (this.win.WebSocket === void 0) {\n        return this.log.info(\"WebSockets not supported on your browser\");\n      }\n    };\n\n    EventsService.prototype.setupConnection = function() {\n      var loc, path, scheme, url;\n      this.stopExistingConnection();\n      url = this.config.get(\"eventsUrl\");\n      if (!url) {\n        return;\n      }\n      if (!startswith(url, \"ws:\") && !startswith(url, \"wss:\")) {\n        loc = this.win.location;\n        scheme = loc.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n        path = _.str.ltrim(url, \"/\");\n        url = scheme + \"//\" + loc.host + \"/\" + path;\n      }\n      this.ws = new this.win.WebSocket(url);\n      this.ws.addEventListener(\"open\", this.onOpen);\n      this.ws.addEventListener(\"message\", this.onMessage);\n      this.ws.addEventListener(\"error\", this.onError);\n      return this.ws.addEventListener(\"close\", this.onClose);\n    };\n\n    EventsService.prototype.stopExistingConnection = function() {\n      if (this.ws === void 0) {\n        return;\n      }\n      this.ws.removeEventListener(\"open\", this.onOpen);\n      this.ws.removeEventListener(\"close\", this.onClose);\n      this.ws.removeEventListener(\"error\", this.onError);\n      this.ws.removeEventListener(\"message\", this.onMessage);\n      this.ws.close();\n      return delete this.ws;\n    };\n\n    EventsService.prototype.serialize = function(message) {\n      if (_.isObject(message)) {\n        return JSON.stringify(message);\n      }\n      return message;\n    };\n\n    EventsService.prototype.sendMessage = function(message) {\n      var messages, msg, _i, _len, _results;\n      this.pendingMessages.push(message);\n      if (!this.connected) {\n        return;\n      }\n      messages = _.map(this.pendingMessages, this.serialize);\n      this.pendingMessages = [];\n      _results = [];\n      for (_i = 0, _len = messages.length; _i < _len; _i++) {\n        msg = messages[_i];\n        _results.push(this.ws.send(msg));\n      }\n      return _results;\n    };\n\n    EventsService.prototype.subscribe = function(scope, routingKey, callback) {\n      var message, subscription;\n      if (this.error) {\n        return;\n      }\n      this.log.debug(\"Subscribe to: \" + routingKey);\n      subscription = {\n        scope: scope,\n        routingKey: routingKey,\n        callback: _.debounce(callback, 500, {\n          \"leading\": true,\n          \"trailing\": false\n        })\n      };\n      message = {\n        \"cmd\": \"subscribe\",\n        \"routing_key\": routingKey\n      };\n      this.subscriptions[routingKey] = subscription;\n      this.sendMessage(message);\n      return scope.$on(\"$destroy\", (function(_this) {\n        return function() {\n          return _this.unsubscribe(routingKey);\n        };\n      })(this));\n    };\n\n    EventsService.prototype.unsubscribe = function(routingKey) {\n      var message;\n      if (this.error) {\n        return;\n      }\n      this.log.debug(\"Unsubscribe from: \" + routingKey);\n      message = {\n        \"cmd\": \"unsubscribe\",\n        \"routing_key\": routingKey\n      };\n      return this.sendMessage(message);\n    };\n\n    EventsService.prototype.onOpen = function() {\n      var message, token;\n      this.connected = true;\n      this.log.debug(\"WebSocket connection opened\");\n      token = this.auth.getToken();\n      message = {\n        cmd: \"auth\",\n        data: {\n          token: token,\n          sessionId: this.sessionId\n        }\n      };\n      return this.sendMessage(message);\n    };\n\n    EventsService.prototype.onMessage = function(event) {\n      var data, routingKey, subscription;\n      this.log.debug(\"WebSocket message received: \" + event.data);\n      data = JSON.parse(event.data);\n      routingKey = data.routing_key;\n      if (this.subscriptions[routingKey] == null) {\n        return;\n      }\n      subscription = this.subscriptions[routingKey];\n      return subscription.scope.$apply(function() {\n        return subscription.callback(data.data);\n      });\n    };\n\n    EventsService.prototype.onError = function(error) {\n      this.log.error(\"WebSocket error: \" + error);\n      return this.error = true;\n    };\n\n    EventsService.prototype.onClose = function() {\n      this.log.debug(\"WebSocket closed.\");\n      return this.connected = false;\n    };\n\n    return EventsService;\n\n  })();\n\n  EventsProvider = (function() {\n    function EventsProvider() {}\n\n    EventsProvider.prototype.setSessionId = function(sessionId) {\n      return this.sessionId = sessionId;\n    };\n\n    EventsProvider.prototype.$get = function($win, $log, $conf, $auth) {\n      var service;\n      service = new EventsService($win, $log, $conf, $auth);\n      service.initialize(this.sessionId);\n      return service;\n    };\n\n    EventsProvider.prototype.$get.$inject = [\"$window\", \"$log\", \"$tgConfig\", \"$tgAuth\"];\n\n    return EventsProvider;\n\n  })();\n\n  module.provider(\"$tgEvents\", EventsProvider);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/feedback.coffee\n */\n\n(function() {\n  var FeedbackDirective, bindOnce, debounce, groupBy, mixOf, module, taiga, trim;\n\n  taiga = this.taiga;\n\n  groupBy = this.taiga.groupBy;\n\n  bindOnce = this.taiga.bindOnce;\n\n  mixOf = this.taiga.mixOf;\n\n  debounce = this.taiga.debounce;\n\n  trim = this.taiga.trim;\n\n  module = angular.module(\"taigaFeedback\", []);\n\n  FeedbackDirective = function($lightboxService, $repo, $confirm, $loading) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var form, submit, submitButton;\n      form = $el.find(\"form\").checksley();\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var promise;\n          event.preventDefault();\n          if (!form.validate()) {\n            return;\n          }\n          $loading.start(submitButton);\n          promise = $repo.create(\"feedback\", $scope.feedback);\n          promise.then(function(data) {\n            $loading.finish(submitButton);\n            $lightboxService.close($el);\n            return $confirm.notify(\"success\", \"\\\\o/ we'll be happy to read your\");\n          });\n          return promise.then(null, function() {\n            $loading.finish(submitButton);\n            return $confirm.notify(\"error\");\n          });\n        };\n      })(this));\n      submitButton = $el.find(\".submit-button\");\n      $el.on(\"submit\", \"form\", submit);\n      $scope.$on(\"feedback:show\", function() {\n        $scope.$apply(function() {\n          return $scope.feedback = {};\n        });\n        $lightboxService.open($el);\n        return $el.find(\"textarea\").focus();\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLbFeedback\", [\"lightboxService\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", FeedbackDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/integrations.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaIntegrations\", []);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/issues.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaIssues\", []);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/kanban.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaKanban\", []);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/locales.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaLocales\", []);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/nav.coffee\n */\n\n(function() {\n  var ProjectMenuDirective, ProjectsNavigationController, ProjectsNavigationDirective, bindOnce, groupBy, module, taiga, timeout,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  groupBy = this.taiga.groupBy;\n\n  bindOnce = this.taiga.bindOnce;\n\n  timeout = this.taiga.timeout;\n\n  module = angular.module(\"taigaNavMenu\", []);\n\n  ProjectsNavigationController = (function(_super) {\n    __extends(ProjectsNavigationController, _super);\n\n    ProjectsNavigationController.$inject = [\"$scope\", \"$rootScope\", \"$tgResources\", \"$tgNavUrls\", \"$projectUrl\"];\n\n    function ProjectsNavigationController(_at_scope, _at_rootscope, _at_rs, _at_navurls, _at_projectUrl) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.rs = _at_rs;\n      this.navurls = _at_navurls;\n      this.projectUrl = _at_projectUrl;\n      promise = this.loadInitialData();\n      promise.then(null, function() {\n        return console.log(\"FAIL\");\n      });\n      this.scope.$on(\"projects:reload\", (function(_this) {\n        return function() {\n          return _this.loadInitialData();\n        };\n      })(this));\n      this.scope.$on(\"project:loaded\", (function(_this) {\n        return function(ctx, project) {\n          return _this.loadInitialData();\n        };\n      })(this));\n    }\n\n    ProjectsNavigationController.prototype.loadInitialData = function() {\n      return this.rs.projects.list().then((function(_this) {\n        return function(projects) {\n          var project, _i, _len;\n          for (_i = 0, _len = projects.length; _i < _len; _i++) {\n            project = projects[_i];\n            project.url = _this.projectUrl.get(project);\n          }\n          _this.scope.projects = projects;\n          _this.scope.filteredProjects = projects;\n          _this.scope.filterText = \"\";\n          return projects;\n        };\n      })(this));\n    };\n\n    ProjectsNavigationController.prototype.newProject = function() {\n      return this.scope.$apply((function(_this) {\n        return function() {\n          return _this.rootscope.$broadcast(\"projects:create\");\n        };\n      })(this));\n    };\n\n    ProjectsNavigationController.prototype.filterProjects = function(text) {\n      this.scope.filteredProjects = _.filter(this.scope.projects, function(project) {\n        return project.name.toLowerCase().indexOf(text) > -1;\n      });\n      this.scope.filterText = text;\n      return this.rootscope.$broadcast(\"projects:filtered\");\n    };\n\n    return ProjectsNavigationController;\n\n  })(taiga.Controller);\n\n  module.controller(\"ProjectsNavigationController\", ProjectsNavigationController);\n\n  ProjectsNavigationDirective = function($rootscope, animationFrame, $timeout, tgLoader, $location, $compile, $template) {\n    var baseTemplate, hideMenu, link, loadingStart, overlay, projectsTemplate;\n    baseTemplate = $template.get(\"project/project-navigation-base.html\", true);\n    projectsTemplate = $template.get(\"project/project-navigation-list.html\", true);\n    overlay = $(\".projects-nav-overlay\");\n    loadingStart = 0;\n    hideMenu = function() {\n      var difftime, timeoutValue;\n      if (overlay.is(':visible')) {\n        difftime = new Date().getTime() - loadingStart;\n        timeoutValue = 0;\n        if (difftime < 1000) {\n          timeoutValue = 1000 - timeoutValue;\n        }\n        return timeout(timeoutValue, function() {\n          overlay.one('transitionend', function() {\n            $(document.body).removeClass(\"loading-project open-projects-nav closed-projects-nav\").css(\"overflow-x\", \"visible\");\n            return overlay.hide();\n          });\n          $(document.body).addClass(\"closed-projects-nav\");\n          return tgLoader.disablePreventLoading();\n        });\n      }\n    };\n    link = function($scope, $el, $attrs, $ctrls) {\n      var $ctrl, render, renderProjects;\n      $ctrl = $ctrls[0];\n      $rootscope.$on(\"project:loaded\", hideMenu);\n      renderProjects = function(projects) {\n        var html;\n        html = projectsTemplate({\n          projects: projects\n        });\n        $el.find(\".projects-list\").html(html);\n        return $scope.$emit(\"regenerate:project-pagination\");\n      };\n      render = function(projects) {\n        $el.html($compile(baseTemplate())($scope));\n        return renderProjects(projects);\n      };\n      overlay.on('click', function() {\n        return hideMenu();\n      });\n      $(document).on('keydown', (function(_this) {\n        return function(e) {\n          var code;\n          code = e.keyCode ? e.keyCode : e.which;\n          if (code === 27) {\n            return hideMenu();\n          }\n        };\n      })(this));\n      $scope.$on(\"nav:projects-list:open\", function() {\n        if (!$(document.body).hasClass(\"open-projects-nav\")) {\n          animationFrame.add((function(_this) {\n            return function() {\n              return overlay.show();\n            };\n          })(this));\n        }\n        return animationFrame.add((function(_this) {\n          return function() {\n            return $(document.body).css(\"overflow-x\", \"hidden\");\n          };\n        })(this), (function(_this) {\n          return function() {\n            return $(document.body).toggleClass(\"open-projects-nav\");\n          };\n        })(this));\n      });\n      $el.on(\"click\", \".projects-list > li > a\", function(event) {\n        var currentUrl, nextUrl, target;\n        target = angular.element(event.currentTarget);\n        nextUrl = target.prop(\"href\");\n        currentUrl = $location.absUrl();\n        if (nextUrl === currentUrl) {\n          hideMenu();\n          return;\n        }\n        $(document.body).addClass('loading-project');\n        tgLoader.preventLoading();\n        return loadingStart = new Date().getTime();\n      });\n      $el.on(\"click\", \".create-project-button\", function(event) {\n        event.preventDefault();\n        return $ctrl.newProject();\n      });\n      $el.on(\"keyup\", \".search-project\", function(event) {\n        var target;\n        target = angular.element(event.currentTarget);\n        return $ctrl.filterProjects(target.val());\n      });\n      $scope.$on(\"projects:filtered\", function() {\n        return renderProjects($scope.filteredProjects);\n      });\n      return $scope.$watch(\"projects\", function(projects) {\n        if (projects != null) {\n          return render(projects);\n        }\n      });\n    };\n    return {\n      require: [\"tgProjectsNav\"],\n      controller: ProjectsNavigationController,\n      link: link\n    };\n  };\n\n  module.directive(\"tgProjectsNav\", [\"$rootScope\", \"animationFrame\", \"$timeout\", \"tgLoader\", \"$tgLocation\", \"$compile\", \"$tgTemplate\", ProjectsNavigationDirective]);\n\n  ProjectMenuDirective = function($log, $compile, $auth, $rootscope, $tgAuth, $location, $navUrls, $config, $template) {\n    var getSectionName, link, mainTemplate, menuEntriesTemplate, renderMainMenu, renderMenuEntries, videoConferenceUrl;\n    menuEntriesTemplate = $template.get(\"project/project-menu.html\", true);\n    mainTemplate = _.template(\"<div class=\\\"logo-container logo\\\">\\n    <svg xmlns:svg=\\\"http://www.w3.org/2000/svg\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 134.2 134.3\\\" version=\\\"1.1\\\" preserveAspectRatio=\\\"xMidYMid meet\\\">\\n        <style>\\n            path {\\n                fill:#f5f5f5;\\n                opacity:0.7;\\n            }\\n        </style>\\n        <g transform=\\\"translate(-307.87667,-465.22863)\\\">\\n            <g class=\\\"bottom\\\">\\n                <path transform=\\\"matrix(-0.14066483,0.99005727,-0.99005727,0.14066483,0,0)\\\" d=\\\"m561.8-506.6 42 0 0 42-42 0z\\\" />\\n                <path transform=\\\"matrix(0.14066483,-0.99005727,0.99005727,-0.14066483,0,0)\\\" d=\\\"m-645.7 422.6 42 0 0 42-42 0z\\\" />\\n                <path transform=\\\"matrix(0.99005727,0.14066483,0.14066483,0.99005727,0,0)\\\" d=\\\"m266.6 451.9 42 0 0 42-42 0z\\\" />\\n                <path transform=\\\"matrix(-0.99005727,-0.14066483,-0.14066483,-0.99005727,0,0)\\\" d=\\\"m-350.6-535.9 42 0 0 42-42 0z\\\" />\\n            </g>\\n            <g class=\\\"top\\\">\\n                <path transform=\\\"matrix(-0.60061118,-0.79954125,0.60061118,-0.79954125,0,0)\\\" d=\\\"m-687.1-62.7 42 0 0 42-42 0z\\\" />\\n                <path transform=\\\"matrix(-0.79954125,0.60061118,-0.79954125,-0.60061118,0,0)\\\" d=\\\"m166.6-719.6 42 0 0 42-42 0z\\\" />\\n                <path transform=\\\"matrix(0.60061118,0.79954125,-0.60061118,0.79954125,0,0)\\\" d=\\\"m603.1-21.3 42 0 0 42-42 0z\\\" />\\n                <path transform=\\\"matrix(0.79954125,-0.60061118,0.79954125,0.60061118,0,0)\\\" d=\\\"m-250.7 635.8 42 0 0 42-42 0z\\\" />\\n                <path transform=\\\"matrix(0.70710678,0.70710678,-0.70710678,0.70710678,0,0)\\\" d=\\\"m630.3 100 22.6 0 0 22.6-22.6 0z\\\" />\\n            </g>\\n        </g>\\n    </svg>\\n    <span class=\\\"item\\\">taiga<sup>[beta]</sup></span>\\n</div>\\n<div class=\\\"menu-container\\\"></div>\");\n    getSectionName = function($el, sectionName, project) {\n      var oldSectionName, _ref;\n      oldSectionName = (_ref = $el.find(\"a.active\").parent().attr(\"id\")) != null ? _ref.replace(\"nav-\", \"\") : void 0;\n      if (sectionName === \"backlog-kanban\") {\n        if (oldSectionName === \"backlog\" || oldSectionName === \"kanban\") {\n          sectionName = oldSectionName;\n        } else if (project.is_backlog_activated && !project.is_kanban_activated) {\n          sectionName = \"backlog\";\n        } else if (!project.is_backlog_activated && project.is_kanban_activated) {\n          sectionName = \"kanban\";\n        }\n      }\n      return sectionName;\n    };\n    renderMainMenu = function($el) {\n      var html;\n      html = mainTemplate({});\n      return $el.html(html);\n    };\n    renderMenuEntries = function($el, targetScope, project) {\n      var container, ctx, dom, sectionName;\n      if (project == null) {\n        project = {};\n      }\n      container = $el.find(\".menu-container\");\n      sectionName = getSectionName($el, targetScope.section, project);\n      ctx = {\n        user: $auth.getUser(),\n        project: project,\n        feedbackEnabled: $config.get(\"feedbackEnabled\")\n      };\n      dom = $compile(menuEntriesTemplate(ctx))(targetScope);\n      dom.find(\"a.active\").removeClass(\"active\");\n      dom.find(\"#nav-\" + sectionName + \" > a\").addClass(\"active\");\n      return container.replaceWith(dom);\n    };\n    videoConferenceUrl = function(project) {\n      var baseUrl, url;\n      if (project.videoconferences === \"appear-in\") {\n        baseUrl = \"https://appear.in/\";\n      } else if (project.videoconferences === \"talky\") {\n        baseUrl = \"https://talky.io/\";\n      } else {\n        return \"\";\n      }\n      if (project.videoconferences_salt) {\n        url = project.slug + \"-\" + project.videoconferences_salt;\n      } else {\n        url = \"\" + project.slug;\n      }\n      return baseUrl + url;\n    };\n    link = function($scope, $el, $attrs, $ctrl) {\n      var project;\n      renderMainMenu($el);\n      project = null;\n      $el.on(\"click\", \".logo\", function(event) {\n        var target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        return $rootscope.$broadcast(\"nav:projects-list:open\");\n      });\n      $el.on(\"click\", \".user-settings .avatar\", function(event) {\n        event.preventDefault();\n        return $el.find(\".user-settings .popover\").popover().open();\n      });\n      $el.on(\"click\", \".logout\", function(event) {\n        event.preventDefault();\n        $auth.logout();\n        return $scope.$apply(function() {\n          return $location.path($navUrls.resolve(\"login\"));\n        });\n      });\n      $el.on(\"click\", \"#nav-search > a\", function(event) {\n        event.preventDefault();\n        return $rootscope.$broadcast(\"search-box:show\", project);\n      });\n      $el.on(\"click\", \".feedback\", function(event) {\n        event.preventDefault();\n        return $rootscope.$broadcast(\"feedback:show\");\n      });\n      $scope.$on(\"projects:loaded\", function(listener) {\n        $el.addClass(\"hidden\");\n        return listener.stopPropagation();\n      });\n      return $scope.$on(\"project:loaded\", function(ctx, newProject) {\n        project = newProject;\n        if ($el.hasClass(\"hidden\")) {\n          $el.removeClass(\"hidden\");\n        }\n        project.videoconferenceUrl = videoConferenceUrl(project);\n        return renderMenuEntries($el, ctx.targetScope, project);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgProjectMenu\", [\"$log\", \"$compile\", \"$tgAuth\", \"$rootScope\", \"$tgAuth\", \"$tgLocation\", \"$tgNavUrls\", \"$tgConfig\", \"$tgTemplate\", ProjectMenuDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/projects.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaProject\", []);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/related-tasks.coffee\n */\n\n(function() {\n  var RelatedTaskAssignedToInlineEditionDirective, RelatedTaskCreateButtonDirective, RelatedTaskCreateFormDirective, RelatedTaskRowDirective, RelatedTasksDirective, debounce, module, taiga, trim;\n\n  taiga = this.taiga;\n\n  trim = this.taiga.trim;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaRelatedTasks\", []);\n\n  RelatedTaskRowDirective = function($repo, $compile, $confirm, $rootscope, $loading, $template) {\n    var link, templateEdit, templateView;\n    templateView = $template.get(\"task/related-task-row.html\", true);\n    templateEdit = $template.get(\"task/related-task-row-edit.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var renderEdit, renderView, saveTask;\n      saveTask = debounce(2000, function(task) {\n        var promise;\n        task.subject = $el.find('input').val();\n        $loading.start($el.find('.task-name'));\n        promise = $repo.save(task);\n        promise.then((function(_this) {\n          return function() {\n            $loading.finish($el.find('.task-name'));\n            $confirm.notify(\"success\");\n            return $rootscope.$broadcast(\"related-tasks:update\");\n          };\n        })(this));\n        promise.then(null, (function(_this) {\n          return function() {\n            $loading.finish($el.find('.task-name'));\n            $el.find('input').val(task.subject);\n            return $confirm.notify(\"error\");\n          };\n        })(this));\n        return promise;\n      });\n      renderEdit = function(task) {\n        $el.html($compile(templateEdit({\n          task: task\n        }))($scope));\n        $el.on(\"keyup\", \"input\", function(event) {\n          if (event.keyCode === 13) {\n            return saveTask($model.$modelValue).then(function() {\n              return renderView($model.$modelValue);\n            });\n          } else if (event.keyCode === 27) {\n            return renderView($model.$modelValue);\n          }\n        });\n        $el.on(\"click\", \".icon-floppy\", function(event) {\n          return saveTask($model.$modelValue).then(function() {\n            return renderView($model.$modelValue);\n          });\n        });\n        return $el.on(\"click\", \".cancel-edit\", function(event) {\n          return renderView($model.$modelValue);\n        });\n      };\n      renderView = function(task) {\n        var perms;\n        $el.off();\n        perms = {\n          modify_task: $scope.project.my_permissions.indexOf(\"modify_task\") !== -1,\n          delete_task: $scope.project.my_permissions.indexOf(\"delete_task\") !== -1\n        };\n        $el.html($compile(templateView({\n          task: task,\n          perms: perms\n        }))($scope));\n        $el.on(\"click\", \".icon-edit\", function() {\n          renderEdit($model.$modelValue);\n          return $el.find('input').focus().select();\n        });\n        return $el.on(\"click\", \".delete-task\", function(event) {\n          var message, title;\n          task = $model.$modelValue;\n          title = \"Delete Task\";\n          message = task.subject;\n          return $confirm.askOnDelete(title, message).then(function(finish) {\n            var promise;\n            promise = $repo.remove(task);\n            promise.then(function() {\n              finish();\n              $confirm.notify(\"success\");\n              return $scope.$emit(\"related-tasks:delete\");\n            });\n            return promise.then(null, function() {\n              return $confirm.notify(\"error\");\n            });\n          });\n        });\n      };\n      $scope.$watch($attrs.ngModel, function(val) {\n        if (!val) {\n          return;\n        }\n        return renderView(val);\n      });\n      $scope.$on(\"related-tasks:assigned-to-changed\", function() {\n        return $rootscope.$broadcast(\"related-tasks:update\");\n      });\n      $scope.$on(\"related-tasks:status-changed\", function() {\n        return $rootscope.$broadcast(\"related-tasks:update\");\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgRelatedTaskRow\", [\"$tgRepo\", \"$compile\", \"$tgConfirm\", \"$rootScope\", \"$tgLoading\", \"$tgTemplate\", RelatedTaskRowDirective]);\n\n  RelatedTaskCreateFormDirective = function($repo, $compile, $confirm, $tgmodel, $loading, $analytics, $template) {\n    var link, newTask, template;\n    template = $template.get(\"task/related-task-create-form.html\", true);\n    newTask = {\n      subject: \"\",\n      assigned_to: null\n    };\n    link = function($scope, $el, $attrs) {\n      var createTask, render;\n      createTask = debounce(2000, function(task) {\n        var promise;\n        task.subject = $el.find('input').val();\n        task.assigned_to = $scope.newTask.assigned_to;\n        task.status = $scope.newTask.status;\n        $scope.newTask.status = $scope.project.default_task_status;\n        $scope.newTask.assigned_to = null;\n        $loading.start($el.find('.task-name'));\n        promise = $repo.create(\"tasks\", task);\n        promise.then(function() {\n          $analytics.trackEvent(\"task\", \"create\", \"create task on userstory\", 1);\n          $loading.finish($el.find('.task-name'));\n          $scope.$emit(\"related-tasks:add\");\n          return $confirm.notify(\"success\");\n        });\n        promise.then(null, function() {\n          $el.find('input').val(task.subject);\n          $loading.finish($el.find('.task-name'));\n          return $confirm.notify(\"error\");\n        });\n        return promise;\n      });\n      render = function() {\n        $el.off();\n        $el.html($compile(template())($scope));\n        $el.find('input').focus().select();\n        $el.addClass('active');\n        $el.on(\"keyup\", \"input\", function(event) {\n          if (event.keyCode === 13) {\n            return createTask(newTask).then(function() {\n              return render();\n            });\n          } else if (event.keyCode === 27) {\n            return $el.html(\"\");\n          }\n        });\n        $el.on(\"click\", \".icon-delete\", function(event) {\n          return $el.html(\"\");\n        });\n        return $el.on(\"click\", \".icon-floppy\", function(event) {\n          return createTask(newTask).then(function() {\n            return $el.html(\"\");\n          });\n        });\n      };\n      taiga.bindOnce($scope, \"us\", function(val) {\n        newTask[\"status\"] = $scope.project.default_task_status;\n        newTask[\"project\"] = $scope.project.id;\n        newTask[\"user_story\"] = $scope.us.id;\n        $scope.newTask = $tgmodel.make_model(\"tasks\", newTask);\n        return $el.html(\"\");\n      });\n      $scope.$on(\"related-tasks:show-form\", function() {\n        return render();\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgRelatedTaskCreateForm\", [\"$tgRepo\", \"$compile\", \"$tgConfirm\", \"$tgModel\", \"$tgLoading\", \"$tgAnalytics\", \"$tgTemplate\", RelatedTaskCreateFormDirective]);\n\n  RelatedTaskCreateButtonDirective = function($repo, $compile, $confirm, $tgmodel) {\n    var link, template;\n    template = _.template(\"<a class=\\\"icon icon-plus related-tasks-buttons\\\"></a>\");\n    link = function($scope, $el, $attrs) {\n      $scope.$watch(\"project\", function(val) {\n        if (!val) {\n          return;\n        }\n        $el.off();\n        if ($scope.project.my_permissions.indexOf(\"add_task\") !== -1) {\n          $el.html(template());\n        } else {\n          $el.html(\"\");\n        }\n        return $el.on(\"click\", \".icon\", function(event) {\n          return $scope.$emit(\"related-tasks:add-new-clicked\");\n        });\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgRelatedTaskCreateButton\", [\"$tgRepo\", \"$compile\", \"$tgConfirm\", \"$tgModel\", RelatedTaskCreateButtonDirective]);\n\n  RelatedTasksDirective = function($repo, $rs, $rootscope) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var loadTasks;\n      loadTasks = function() {\n        return $rs.tasks.list($scope.projectId, null, $scope.usId).then((function(_this) {\n          return function(tasks) {\n            $scope.tasks = tasks;\n            return tasks;\n          };\n        })(this));\n      };\n      $scope.$on(\"related-tasks:add\", function() {\n        return loadTasks().then(function() {\n          return $rootscope.$broadcast(\"related-tasks:update\");\n        });\n      });\n      $scope.$on(\"related-tasks:delete\", function() {\n        return loadTasks().then(function() {\n          return $rootscope.$broadcast(\"related-tasks:update\");\n        });\n      });\n      $scope.$on(\"related-tasks:add-new-clicked\", function() {\n        return $scope.$broadcast(\"related-tasks:show-form\");\n      });\n      taiga.bindOnce($scope, \"us\", function(val) {\n        return loadTasks();\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgRelatedTasks\", [\"$tgRepo\", \"$tgResources\", \"$rootScope\", RelatedTasksDirective]);\n\n  RelatedTaskAssignedToInlineEditionDirective = function($repo, $rootscope, popoverService) {\n    var link, template;\n    template = _.template(\"<img src=\\\"<%- imgurl %>\\\" alt=\\\"<%- name %>\\\"/>\\n<figcaption><%- name %></figcaption>\");\n    link = function($scope, $el, $attrs) {\n      var $ctrl, autoSave, notAutoSave, task, updateRelatedTask;\n      updateRelatedTask = function(task) {\n        var ctx, member;\n        ctx = {\n          name: \"Unassigned\",\n          imgurl: \"/images/unnamed.png\"\n        };\n        member = $scope.usersById[task.assigned_to];\n        if (member) {\n          ctx.imgurl = member.photo;\n          ctx.name = member.full_name_display;\n        }\n        $el.find(\".avatar\").html(template(ctx));\n        return $el.find(\".task-assignedto\").attr('title', ctx.name);\n      };\n      $ctrl = $el.controller();\n      task = $scope.$eval($attrs.tgRelatedTaskAssignedToInlineEdition);\n      notAutoSave = $scope.$eval($attrs.notAutoSave);\n      autoSave = !notAutoSave;\n      updateRelatedTask(task);\n      $el.on(\"click\", \".task-assignedto\", function(event) {\n        return $rootscope.$broadcast(\"assigned-to:add\", task);\n      });\n      taiga.bindOnce($scope, \"project\", function(project) {\n        if (project.my_permissions.indexOf(\"modify_task\") === -1) {\n          $el.unbind(\"click\");\n          return $el.find(\"a\").addClass(\"not-clickable\");\n        }\n      });\n      $scope.$on(\"assigned-to:added\", debounce(2000, (function(_this) {\n        return function(ctx, userId, updatedRelatedTask) {\n          if (updatedRelatedTask.id === task.id) {\n            updatedRelatedTask.assigned_to = userId;\n            if (autoSave) {\n              $repo.save(updatedRelatedTask).then(function() {\n                return $scope.$emit(\"related-tasks:assigned-to-changed\");\n              });\n            }\n            return updateRelatedTask(updatedRelatedTask);\n          }\n        };\n      })(this)));\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgRelatedTaskAssignedToInlineEdition\", [\"$tgRepo\", \"$rootScope\", RelatedTaskAssignedToInlineEditionDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources.coffee\n */\n\n(function() {\n  var ResourcesService, initResources, initUrls, module, taiga, urls,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  ResourcesService = (function(_super) {\n    __extends(ResourcesService, _super);\n\n    function ResourcesService() {\n      return ResourcesService.__super__.constructor.apply(this, arguments);\n    }\n\n    return ResourcesService;\n\n  })(taiga.Service);\n\n  urls = {\n    \"auth\": \"/auth\",\n    \"auth-register\": \"/auth/register\",\n    \"invitations\": \"/invitations\",\n    \"permissions\": \"/permissions\",\n    \"roles\": \"/roles\",\n    \"projects\": \"/projects\",\n    \"memberships\": \"/memberships\",\n    \"notify-policies\": \"/notify-policies\",\n    \"bulk-create-memberships\": \"/memberships/bulk_create\",\n    \"milestones\": \"/milestones\",\n    \"userstories\": \"/userstories\",\n    \"bulk-create-us\": \"/userstories/bulk_create\",\n    \"bulk-update-us-backlog-order\": \"/userstories/bulk_update_backlog_order\",\n    \"bulk-update-us-sprint-order\": \"/userstories/bulk_update_sprint_order\",\n    \"bulk-update-us-kanban-order\": \"/userstories/bulk_update_kanban_order\",\n    \"userstories-restore\": \"/userstories/%s/restore\",\n    \"tasks\": \"/tasks\",\n    \"bulk-create-tasks\": \"/tasks/bulk_create\",\n    \"bulk-update-task-taskboard-order\": \"/tasks/bulk_update_taskboard_order\",\n    \"tasks-restore\": \"/tasks/%s/restore\",\n    \"issues\": \"/issues\",\n    \"bulk-create-issues\": \"/issues/bulk_create\",\n    \"issues-restore\": \"/issues/%s/restore\",\n    \"wiki\": \"/wiki\",\n    \"wiki-restore\": \"/wiki/%s/restore\",\n    \"wiki-links\": \"/wiki-links\",\n    \"choices/userstory-statuses\": \"/userstory-statuses\",\n    \"choices/userstory-statuses/bulk-update-order\": \"/userstory-statuses/bulk_update_order\",\n    \"choices/points\": \"/points\",\n    \"choices/points/bulk-update-order\": \"/points/bulk_update_order\",\n    \"choices/task-statuses\": \"/task-statuses\",\n    \"choices/task-statuses/bulk-update-order\": \"/task-statuses/bulk_update_order\",\n    \"choices/issue-statuses\": \"/issue-statuses\",\n    \"choices/issue-statuses/bulk-update-order\": \"/issue-statuses/bulk_update_order\",\n    \"choices/issue-types\": \"/issue-types\",\n    \"choices/issue-types/bulk-update-order\": \"/issue-types/bulk_update_order\",\n    \"choices/priorities\": \"/priorities\",\n    \"choices/priorities/bulk-update-order\": \"/priorities/bulk_update_order\",\n    \"choices/severities\": \"/severities\",\n    \"choices/severities/bulk-update-order\": \"/severities/bulk_update_order\",\n    \"search\": \"/search\",\n    \"sites\": \"/sites\",\n    \"project-templates\": \"/project-templates\",\n    \"site-members\": \"/site-members\",\n    \"site-projects\": \"/site-projects\",\n    \"users\": \"/users\",\n    \"users-password-recovery\": \"/users/password_recovery\",\n    \"users-change-password-from-recovery\": \"/users/change_password_from_recovery\",\n    \"users-change-password\": \"/users/change_password\",\n    \"users-change-email\": \"/users/change_email\",\n    \"users-cancel-account\": \"/users/cancel\",\n    \"user-storage\": \"/user-storage\",\n    \"resolver\": \"/resolver\",\n    \"userstory-statuses\": \"/userstory-statuses\",\n    \"points\": \"/points\",\n    \"task-statuses\": \"/task-statuses\",\n    \"issue-statuses\": \"/issue-statuses\",\n    \"issue-types\": \"/issue-types\",\n    \"priorities\": \"/priorities\",\n    \"severities\": \"/severities\",\n    \"project-modules\": \"/projects/%s/modules\",\n    \"webhooks\": \"/webhooks\",\n    \"webhooks-test\": \"/webhooks/%s/test\",\n    \"webhooklogs\": \"/webhooklogs\",\n    \"webhooklogs-resend\": \"/webhooklogs/%s/resend\",\n    \"history/us\": \"/history/userstory\",\n    \"history/issue\": \"/history/issue\",\n    \"history/task\": \"/history/task\",\n    \"history/wiki\": \"/history/wiki\",\n    \"attachments/us\": \"/userstories/attachments\",\n    \"attachments/issue\": \"/issues/attachments\",\n    \"attachments/task\": \"/tasks/attachments\",\n    \"attachments/wiki_page\": \"/wiki/attachments\",\n    \"feedback\": \"/feedback\",\n    \"exporter\": \"/exporter\",\n    \"importer\": \"/importer/load_dump\"\n  };\n\n  initUrls = function($log, $urls) {\n    $log.debug(\"Initialize api urls\");\n    return $urls.update(urls);\n  };\n\n  initResources = function($log, $rs) {\n    var provider, providers, _i, _len, _results;\n    $log.debug(\"Initialize resources\");\n    providers = _.toArray(arguments).slice(2);\n    _results = [];\n    for (_i = 0, _len = providers.length; _i < _len; _i++) {\n      provider = providers[_i];\n      _results.push(provider($rs));\n    }\n    return _results;\n  };\n\n  module = angular.module(\"taigaResources\", [\"taigaBase\"]);\n\n  module.service(\"$tgResources\", ResourcesService);\n\n  module.run([\"$log\", \"$tgUrls\", initUrls]);\n\n  module.run([\"$log\", \"$tgResources\", \"$tgProjectsResourcesProvider\", \"$tgMembershipsResourcesProvider\", \"$tgNotifyPoliciesResourcesProvider\", \"$tgInvitationsResourcesProvider\", \"$tgRolesResourcesProvider\", \"$tgUserSettingsResourcesProvider\", \"$tgSprintsResourcesProvider\", \"$tgUserstoriesResourcesProvider\", \"$tgTasksResourcesProvider\", \"$tgIssuesResourcesProvider\", \"$tgWikiResourcesProvider\", \"$tgSearchResourcesProvider\", \"$tgAttachmentsResourcesProvider\", \"$tgMdRenderResourcesProvider\", \"$tgHistoryResourcesProvider\", \"$tgKanbanResourcesProvider\", \"$tgModulesResourcesProvider\", \"$tgWebhooksResourcesProvider\", \"$tgWebhookLogsResourcesProvider\", initResources]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/search.coffee\n */\n\n(function() {\n  var SearchBoxDirective, SearchController, SearchDirective, bindOnce, debounce, debounceLeading, groupBy, mixOf, module, taiga, trim,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  groupBy = this.taiga.groupBy;\n\n  bindOnce = this.taiga.bindOnce;\n\n  mixOf = this.taiga.mixOf;\n\n  debounceLeading = this.taiga.debounceLeading;\n\n  trim = this.taiga.trim;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaSearch\", []);\n\n  SearchController = (function(_super) {\n    __extends(SearchController, _super);\n\n    SearchController.$inject = [\"$scope\", \"$tgRepo\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$appTitle\", \"$tgNavUrls\", \"tgLoader\"];\n\n    function SearchController(_at_scope, _at_repo, _at_rs, _at_params, _at_q, _at_location, _at_appTitle, _at_navUrls, _at_tgLoader) {\n      var loadSearchData, promise;\n      this.scope = _at_scope;\n      this.repo = _at_repo;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.appTitle = _at_appTitle;\n      this.navUrls = _at_navUrls;\n      this.tgLoader = _at_tgLoader;\n      this.scope.sectionName = \"Search\";\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Search\");\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      this.scope.searchTerm = \"\";\n      loadSearchData = debounceLeading(100, (function(_this) {\n        return function(t) {\n          return _this.loadSearchData(t);\n        };\n      })(this));\n      this.scope.$watch(\"searchTerm\", (function(_this) {\n        return function(term) {\n          if (!term) {\n            return _this.tgLoader.pageLoaded();\n          } else {\n            return loadSearchData(term);\n          }\n        };\n      })(this));\n    }\n\n    SearchController.prototype.loadFilters = function() {\n      var defered;\n      defered = this.q.defer();\n      defered.resolve();\n      return defered.promise;\n    };\n\n    SearchController.prototype.loadProject = function() {\n      return this.rs.projects.getBySlug(this.params.pslug).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          _this.scope.issueStatusById = groupBy(project.issue_statuses, function(x) {\n            return x.id;\n          });\n          _this.scope.taskStatusById = groupBy(project.task_statuses, function(x) {\n            return x.id;\n          });\n          _this.scope.severityById = groupBy(project.severities, function(x) {\n            return x.id;\n          });\n          _this.scope.priorityById = groupBy(project.priorities, function(x) {\n            return x.id;\n          });\n          _this.scope.membersById = groupBy(project.memberships, function(x) {\n            return x.user;\n          });\n          _this.scope.usStatusById = groupBy(project.us_statuses, function(x) {\n            return x.id;\n          });\n          return project;\n        };\n      })(this));\n    };\n\n    SearchController.prototype.loadSearchData = function(term) {\n      var promise;\n      promise = this.rs.search[\"do\"](this.scope.projectId, term).then((function(_this) {\n        return function(data) {\n          _this.scope.searchResults = data;\n          return data;\n        };\n      })(this));\n      promise[\"finally\"]((function(_this) {\n        return function() {\n          return _this.tgLoader.pageLoaded();\n        };\n      })(this));\n      return promise;\n    };\n\n    SearchController.prototype.loadInitialData = function() {\n      return this.loadProject().then((function(_this) {\n        return function(project) {\n          _this.scope.projectId = project.id;\n          return _this.fillUsersAndRoles(project.users, project.roles);\n        };\n      })(this));\n    };\n\n    return SearchController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin));\n\n  module.controller(\"SearchController\", SearchController);\n\n  SearchBoxDirective = function($lightboxService, $navurls, $location, $route) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var project, submit;\n      project = null;\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var form, text, url;\n          event.preventDefault();\n          form = $el.find(\"form\").checksley();\n          if (!form.validate()) {\n            return;\n          }\n          text = $el.find(\"#search-text\").val();\n          url = $navurls.resolve(\"project-search\", {\n            project: project.slug\n          });\n          $lightboxService.close($el);\n          return $scope.$apply(function() {\n            $location.path(url);\n            $location.search(\"text\", text).path(url);\n            return $route.reload();\n          });\n        };\n      })(this));\n      $scope.$on(\"search-box:show\", function(ctx, newProject) {\n        project = newProject;\n        $lightboxService.open($el);\n        return $el.find(\"#search-text\").val(\"\");\n      });\n      return $el.on(\"submit\", \"form\", submit);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgSearchBox\", [\"lightboxService\", \"$tgNavUrls\", \"$tgLocation\", \"$route\", SearchBoxDirective]);\n\n  SearchDirective = function($log, $compile, $templatecache, $routeparams, $location) {\n    var link, linkTable;\n    linkTable = function($scope, $el, $attrs, $ctrl) {\n      var getActiveSection, lastSeatchResults, markSectionTabActive, renderFilterTabs, renderTableContent, tabsDom, templates;\n      tabsDom = $el.find(\"section.search-filter\");\n      lastSeatchResults = null;\n      getActiveSection = function(data) {\n        var maxVal, name, selectedSectionData, selectedSectionName, value;\n        maxVal = 0;\n        selectedSectionName = null;\n        selectedSectionData = null;\n        for (name in data) {\n          value = data[name];\n          if (name === \"count\") {\n            continue;\n          }\n          if (value.length > maxVal) {\n            maxVal = value.length;\n            selectedSectionName = name;\n            selectedSectionData = value;\n          }\n        }\n        if (maxVal === 0) {\n          return {\n            name: \"userstories\",\n            value: []\n          };\n        }\n        return {\n          name: selectedSectionName,\n          value: selectedSectionData\n        };\n      };\n      renderFilterTabs = function(data) {\n        var name, value, _results;\n        _results = [];\n        for (name in data) {\n          value = data[name];\n          if (name === \"count\") {\n            continue;\n          }\n          _results.push(tabsDom.find(\"li.\" + name + \" .num\").html(value.length));\n        }\n        return _results;\n      };\n      markSectionTabActive = function(section) {\n        tabsDom.find(\"a.active\").removeClass(\"active\");\n        return tabsDom.find(\"li.\" + section.name + \" a\").addClass(\"active\");\n      };\n      templates = {\n        issues: $templatecache.get(\"search-issues\"),\n        tasks: $templatecache.get(\"search-tasks\"),\n        userstories: $templatecache.get(\"search-userstories\"),\n        wikipages: $templatecache.get(\"search-wikipages\")\n      };\n      renderTableContent = function(section) {\n        var element, oldElements, oldScope, scope, template;\n        oldElements = $el.find(\".search-result-table\").children();\n        oldScope = oldElements.scope();\n        if (oldScope) {\n          oldScope.$destroy();\n          oldElements.remove();\n        }\n        scope = $scope.$new();\n        scope[section.name] = section.value;\n        template = angular.element.parseHTML(trim(templates[section.name]));\n        element = $compile(template)(scope);\n        return $el.find(\".search-result-table\").html(element);\n      };\n      $scope.$watch(\"searchResults\", function(data) {\n        var activeSection;\n        lastSeatchResults = data;\n        activeSection = getActiveSection(data);\n        renderFilterTabs(data);\n        renderTableContent(activeSection);\n        return markSectionTabActive(activeSection);\n      });\n      $scope.$watch(\"searchTerm\", function(searchTerm) {\n        if (searchTerm) {\n          return $location.search(\"text\", searchTerm);\n        }\n      });\n      return $el.on(\"click\", \".search-filter li > a\", function(event) {\n        var section, sectionData, sectionName, target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        sectionName = target.parent().data(\"name\");\n        sectionData = lastSeatchResults[sectionName];\n        section = {\n          name: sectionName,\n          value: sectionData\n        };\n        return $scope.$apply(function() {\n          renderTableContent(section);\n          return markSectionTabActive(section);\n        });\n      });\n    };\n    link = function($scope, $el, $attrs) {\n      var $ctrl, searchText;\n      $ctrl = $el.controller();\n      linkTable($scope, $el, $attrs, $ctrl);\n      searchText = $routeparams.text;\n      return $scope.$watch(\"projectId\", function(projectId) {\n        if (projectId != null) {\n          return $scope.searchTerm = searchText;\n        }\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgSearch\", [\"$log\", \"$compile\", \"$templateCache\", \"$routeParams\", \"$tgLocation\", SearchDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/taskboard.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaTaskboard\", []);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/tasks.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaTasks\", []);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/team.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaTeam\", []);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/user-settings.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaUserSettings\", []);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/userstories.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaUserStories\", []);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/wiki.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaWiki\", []);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/analytics.coffee\n */\n\n(function() {\n  var AnalyticsService, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  module = angular.module(\"taigaCommon\");\n\n  AnalyticsService = (function(_super) {\n    __extends(AnalyticsService, _super);\n\n    AnalyticsService.$inject = [\"$rootScope\", \"$log\", \"$tgConfig\", \"$window\", \"$document\", \"$location\"];\n\n    function AnalyticsService(_at_rootscope, _at_log, _at_config, _at_win, _at_doc, _at_location) {\n      var conf;\n      this.rootscope = _at_rootscope;\n      this.log = _at_log;\n      this.config = _at_config;\n      this.win = _at_win;\n      this.doc = _at_doc;\n      this.location = _at_location;\n      this.initialized = false;\n      conf = this.config.get(\"analytics\", {});\n      this.accountId = conf.accountId;\n      this.pageEvent = conf.pageEvent || \"$routeChangeSuccess\";\n      this.trackRoutes = conf.trackRoutes || true;\n      this.ignoreFirstPageLoad = conf.ignoreFirstPageLoad || false;\n    }\n\n    AnalyticsService.prototype.initialize = function() {\n      if (!this.accountId) {\n        this.log.debug(\"Analytics: no acount id provided. Disabling.\");\n        return;\n      }\n      this.injectAnalytics();\n      this.win.ga(\"create\", this.accountId, \"auto\");\n      this.win.ga(\"require\", \"displayfeatures\");\n      if (this.trackRoutes && (!this.ignoreFirstPageLoad)) {\n        this.win.ga(\"send\", \"pageview\", this.getUrl());\n      }\n      if (this.trackRoutes) {\n        this.rootscope.$on(this.pageEvent, (function(_this) {\n          return function() {\n            return _this.trackPage(_this.getUrl(), \"Taiga\");\n          };\n        })(this));\n      }\n      return this.initialized = true;\n    };\n\n    AnalyticsService.prototype.getUrl = function() {\n      return this.location.path();\n    };\n\n    AnalyticsService.prototype.injectAnalytics = function() {\n      var fn;\n      fn = (function(i,s,o,g,r,a,m){i[\"GoogleAnalyticsObject\"]=r;i[r]=i[r]||function(){\n              (i[r].q=i[r].q||[]).push(arguments);},i[r].l=1*new Date();a=s.createElement(o),\n              m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m);});\n      return fn(window, document, \"script\", \"//www.google-analytics.com/analytics.js\", \"ga\");\n    };\n\n    AnalyticsService.prototype.trackPage = function(url, title) {\n      if (!this.initialized) {\n        return;\n      }\n      if (!this.win.ga) {\n        return;\n      }\n      title = title || this.doc[0].title;\n      return this.win.ga(\"send\", \"pageview\", {\n        \"page\": url,\n        \"title\": title\n      });\n    };\n\n    AnalyticsService.prototype.trackEvent = function(category, action, label, value) {\n      if (!this.initialized) {\n        return;\n      }\n      if (!this.win.ga) {\n        return;\n      }\n      return this.win.ga(\"send\", \"event\", category, action, label, value);\n    };\n\n    return AnalyticsService;\n\n  })(taiga.Service);\n\n  module.service(\"$tgAnalytics\", AnalyticsService);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/attachments.coffee\n */\n\n(function() {\n  var AttachmentDirective, AttachmentsController, AttachmentsDirective, bindMethods, bindOnce, module, sizeFormat, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  sizeFormat = this.taiga.sizeFormat;\n\n  bindOnce = this.taiga.bindOnce;\n\n  bindMethods = this.taiga.bindMethods;\n\n  module = angular.module(\"taigaCommon\");\n\n  AttachmentsController = (function(_super) {\n    __extends(AttachmentsController, _super);\n\n    AttachmentsController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgResources\", \"$tgConfirm\", \"$q\"];\n\n    function AttachmentsController(_at_scope, _at_rootscope, _at_repo, _at_rs, _at_confirm, _at_q) {\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.rs = _at_rs;\n      this.confirm = _at_confirm;\n      this.q = _at_q;\n      bindMethods(this);\n      this.type = null;\n      this.objectId = null;\n      this.projectId = null;\n      this.uploadingAttachments = [];\n      this.attachments = [];\n      this.attachmentsCount = 0;\n      this.deprecatedAttachmentsCount = 0;\n      this.showDeprecated = false;\n    }\n\n    AttachmentsController.prototype.initialize = function(type, objectId) {\n      this.type = type;\n      this.objectId = objectId;\n      return this.projectId = this.scope.projectId;\n    };\n\n    AttachmentsController.prototype.loadAttachments = function() {\n      var urlname;\n      if (!this.objectId) {\n        return this.attachments;\n      }\n      urlname = \"attachments/\" + this.type;\n      return this.rs.attachments.list(urlname, this.objectId, this.projectId).then((function(_this) {\n        return function(attachments) {\n          _this.attachments = _.sortBy(attachments, \"order\");\n          _this.updateCounters();\n          return attachments;\n        };\n      })(this));\n    };\n\n    AttachmentsController.prototype.updateCounters = function() {\n      this.attachmentsCount = this.attachments.length;\n      return this.deprecatedAttachmentsCount = _.filter(this.attachments, {\n        is_deprecated: true\n      }).length;\n    };\n\n    AttachmentsController.prototype._createAttachment = function(attachment) {\n      var promise, urlName;\n      urlName = \"attachments/\" + this.type;\n      promise = this.rs.attachments.create(urlName, this.projectId, this.objectId, attachment);\n      promise = promise.then((function(_this) {\n        return function(data) {\n          var index;\n          data.isCreatedRightNow = true;\n          index = _this.uploadingAttachments.indexOf(attachment);\n          _this.uploadingAttachments.splice(index, 1);\n          _this.attachments.push(data);\n          return _this.rootscope.$broadcast(\"attachment:create\");\n        };\n      })(this));\n      promise = promise.then(null, (function(_this) {\n        return function(data) {\n          var index;\n          if (data.status === 413) {\n            _this.scope.$emit(\"attachments:size-error\");\n          }\n          index = _this.uploadingAttachments.indexOf(attachment);\n          _this.uploadingAttachments.splice(index, 1);\n          _this.confirm.notify(\"error\", \"We have not been able to upload '\" + attachment.name + \"'. \" + data.data._error_message);\n          return _this.q.reject(data);\n        };\n      })(this));\n      return promise;\n    };\n\n    AttachmentsController.prototype.createAttachments = function(attachments) {\n      var promises;\n      promises = _.map(attachments, (function(_this) {\n        return function(x) {\n          return _this._createAttachment(x);\n        };\n      })(this));\n      return this.q.all(promises).then((function(_this) {\n        return function() {\n          return _this.updateCounters();\n        };\n      })(this));\n    };\n\n    AttachmentsController.prototype.addUploadingAttachments = function(attachments) {\n      return this.uploadingAttachments = _.union(this.uploadingAttachments, attachments);\n    };\n\n    AttachmentsController.prototype.reorderAttachment = function(attachment, newIndex) {\n      var oldIndex;\n      oldIndex = this.attachments.indexOf(attachment);\n      if (oldIndex === newIndex) {\n        return;\n      }\n      this.attachments.splice(oldIndex, 1);\n      this.attachments.splice(newIndex, 0, attachment);\n      return _.each(this.attachments, function(x, i) {\n        return x.order = i + 1;\n      });\n    };\n\n    AttachmentsController.prototype.updateAttachment = function(attachment) {\n      var onError, onSuccess;\n      onSuccess = (function(_this) {\n        return function() {\n          _this.updateCounters();\n          return _this.rootscope.$broadcast(\"attachment:edit\");\n        };\n      })(this);\n      onError = (function(_this) {\n        return function(response) {\n          if (response.status === 413) {\n            $scope.$emit(\"attachments:size-error\");\n          }\n          _this.confirm.notify(\"error\");\n          return _this.q.reject();\n        };\n      })(this);\n      return this.repo.save(attachment).then(onSuccess, onError);\n    };\n\n    AttachmentsController.prototype.saveAttachments = function() {\n      return this.repo.saveAll(this.attachments).then(null, (function(_this) {\n        return function() {\n          var item, _i, _len, _ref;\n          _ref = _this.attachments;\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            item = _ref[_i];\n            item.revert();\n          }\n          return _this.attachments = _.sortBy(_this.attachments, \"order\");\n        };\n      })(this));\n    };\n\n    AttachmentsController.prototype.removeAttachment = function(attachment) {\n      var message, title;\n      title = \"Delete attachment\";\n      message = \"the attachment '\" + attachment.name + \"'\";\n      return this.confirm.askOnDelete(title, message).then((function(_this) {\n        return function(finish) {\n          var onError, onSuccess;\n          onSuccess = function() {\n            var index;\n            finish();\n            index = _this.attachments.indexOf(attachment);\n            _this.attachments.splice(index, 1);\n            _this.updateCounters();\n            return _this.rootscope.$broadcast(\"attachment:delete\");\n          };\n          onError = function() {\n            finish(false);\n            _this.confirm.notify(\"error\", null, \"We have not been able to delete \" + message + \".\");\n            return _this.q.reject();\n          };\n          return _this.repo.remove(attachment).then(onSuccess, onError);\n        };\n      })(this));\n    };\n\n    AttachmentsController.prototype.filterAttachments = function(item) {\n      if (this.showDeprecated) {\n        return true;\n      }\n      return !item.is_deprecated;\n    };\n\n    return AttachmentsController;\n\n  })(taiga.Controller);\n\n  AttachmentsDirective = function($config, $confirm, $templates) {\n    var link, template, templateFn;\n    template = $templates.get(\"attachment/attachments.html\", true);\n    link = function($scope, $el, $attrs, $ctrls) {\n      var $ctrl, $model, showSizeInfo, tdom;\n      $ctrl = $ctrls[0];\n      $model = $ctrls[1];\n      bindOnce($scope, $attrs.ngModel, function(value) {\n        $ctrl.initialize($attrs.type, value.id);\n        return $ctrl.loadAttachments();\n      });\n      tdom = $el.find(\"div.attachment-body.sortable\");\n      tdom.sortable({\n        items: \"div.single-attachment\",\n        handle: \"a.settings.icon.icon-drag-v\",\n        containment: \".attachments\",\n        dropOnEmpty: true,\n        scroll: false,\n        tolerance: \"pointer\",\n        placeholder: \"sortable-placeholder single-attachment\"\n      });\n      tdom.on(\"sortstop\", function(event, ui) {\n        var attachment, newIndex;\n        attachment = ui.item.scope().attach;\n        newIndex = ui.item.index();\n        $ctrl.reorderAttachment(attachment, newIndex);\n        return $ctrl.saveAttachments().then(function() {\n          return $scope.$emit(\"attachment:edit\");\n        });\n      });\n      showSizeInfo = function() {\n        return $el.find(\".size-info\").removeClass(\"hidden\");\n      };\n      $scope.$on(\"attachments:size-error\", function() {\n        return showSizeInfo();\n      });\n      $el.on(\"change\", \".attachments-header input\", function(event) {\n        var files;\n        files = _.toArray(event.target.files);\n        if (files.length < 1) {\n          return;\n        }\n        return $scope.$apply(function() {\n          $ctrl.addUploadingAttachments(files);\n          return $ctrl.createAttachments(files);\n        });\n      });\n      $el.on(\"click\", \".more-attachments\", function(event) {\n        var target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        $scope.$apply(function() {\n          return $ctrl.showDeprecated = !$ctrl.showDeprecated;\n        });\n        target.find(\"span.text\").addClass(\"hidden\");\n        if ($ctrl.showDeprecated) {\n          target.find(\"span[data-type=hide]\").removeClass(\"hidden\");\n          return target.find(\"more-attachments-num\").addClass(\"hidden\");\n        } else {\n          target.find(\"span[data-type=show]\").removeClass(\"hidden\");\n          return target.find(\"more-attachments-num\").removeClass(\"hidden\");\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    templateFn = function($el, $attrs) {\n      var ctx, maxFileSize, maxFileSizeMsg;\n      maxFileSize = $config.get(\"maxUploadFileSize\", null);\n      if (maxFileSize) {\n        maxFileSize = sizeFormat(maxFileSize);\n      }\n      maxFileSizeMsg = maxFileSize ? \"Maximum upload size is \" + maxFileSize : \"\";\n      ctx = {\n        type: $attrs.type,\n        maxFileSize: maxFileSize,\n        maxFileSizeMsg: maxFileSizeMsg\n      };\n      return template(ctx);\n    };\n    return {\n      require: [\"tgAttachments\", \"ngModel\"],\n      controller: AttachmentsController,\n      controllerAs: \"ctrl\",\n      restrict: \"AE\",\n      scope: true,\n      link: link,\n      template: templateFn\n    };\n  };\n\n  module.directive(\"tgAttachments\", [\"$tgConfig\", \"$tgConfirm\", \"$tgTemplate\", AttachmentsDirective]);\n\n  AttachmentDirective = function($template) {\n    var link, template, templateEdit;\n    template = $template.get(\"attachment/attachment.html\", true);\n    templateEdit = $template.get(\"attachment/attachment-edit.html\", true);\n    link = function($scope, $el, $attrs, $ctrl) {\n      var attachment, render, saveAttachment;\n      render = function(attachment, edit) {\n        var ctx, html, modifyPermission, permissions;\n        if (edit == null) {\n          edit = false;\n        }\n        permissions = $scope.project.my_permissions;\n        modifyPermission = permissions.indexOf(\"modify_\" + $ctrl.type) > -1;\n        ctx = {\n          id: attachment.id,\n          name: attachment.name,\n          created_date: moment(attachment.created_date).format(\"DD MMM YYYY [at] hh:mm\"),\n          url: attachment.url,\n          size: sizeFormat(attachment.size),\n          description: attachment.description,\n          isDeprecated: attachment.is_deprecated,\n          modifyPermission: modifyPermission\n        };\n        if (edit) {\n          html = templateEdit(ctx);\n        } else {\n          html = template(ctx);\n        }\n        $el.html(html);\n        if (attachment.is_deprecated) {\n          $el.addClass(\"deprecated\");\n          return $el.find(\"input:checkbox\").prop('checked', true);\n        }\n      };\n      saveAttachment = function() {\n        attachment.description = $el.find(\"input[name='description']\").val();\n        attachment.is_deprecated = $el.find(\"input[name='is-deprecated']\").prop(\"checked\");\n        return $scope.$apply(function() {\n          return $ctrl.updateAttachment(attachment).then(function() {\n            return render(attachment, false);\n          });\n        });\n      };\n      $el.on(\"click\", \"a.editable-settings.icon-floppy\", function(event) {\n        event.preventDefault();\n        return saveAttachment();\n      });\n      $el.on(\"keyup\", \"input[name=description]\", function(event) {\n        if (event.keyCode === 13) {\n          return saveAttachment();\n        } else if (event.keyCode === 27) {\n          return render(attachment, false);\n        }\n      });\n      $el.on(\"click\", \"a.editable-settings.icon-delete\", function(event) {\n        event.preventDefault();\n        return render(attachment, false);\n      });\n      $el.on(\"click\", \"a.settings.icon-edit\", function(event) {\n        event.preventDefault();\n        render(attachment, true);\n        return $el.find(\"input[name='description']\").focus().select();\n      });\n      $el.on(\"click\", \"a.settings.icon-delete\", function(event) {\n        event.preventDefault();\n        return $scope.$apply(function() {\n          return $ctrl.removeAttachment(attachment);\n        });\n      });\n      $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n      attachment = $scope.$eval($attrs.tgAttachment);\n      render(attachment, attachment.isCreatedRightNow);\n      if (attachment.isCreatedRightNow) {\n        return $el.find(\"input[name='description']\").focus().select();\n      }\n    };\n    return {\n      link: link,\n      require: \"^tgAttachments\",\n      restrict: \"AE\"\n    };\n  };\n\n  module.directive(\"tgAttachment\", [\"$tgTemplate\", AttachmentDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/components.coffee\n */\n\n(function() {\n  var AssignedToDirective, BlockButtonDirective, CreatedByDisplayDirective, DateRangeDirective, DateSelectorDirective, DeleteButtonDirective, EditableDescriptionDirective, EditableSubjectDirective, ListItemAssignedtoDirective, ListItemIssueStatusDirective, ListItemPriorityDirective, ListItemSeverityDirective, ListItemTaskStatusDirective, ListItemTypeDirective, ListItemUsStatusDirective, SprintProgressBarDirective, TgMainTitleDirective, TgProgressBarDirective, WatchersDirective, bindOnce, module, taiga;\n\n  taiga = this.taiga;\n\n  bindOnce = this.taiga.bindOnce;\n\n  module = angular.module(\"taigaCommon\");\n\n  DateRangeDirective = function() {\n    var link, renderRange;\n    renderRange = function($el, first, second) {\n      var endDate, initDate;\n      initDate = moment(first).format(\"DD MMM YYYY\");\n      endDate = moment(second).format(\"DD MMM YYYY\");\n      return $el.html(initDate + \"-\" + endDate);\n    };\n    link = function($scope, $el, $attrs) {\n      var first, second, _ref;\n      _ref = $attrs.tgDateRange.split(\",\"), first = _ref[0], second = _ref[1];\n      return bindOnce($scope, first, function(valFirst) {\n        return bindOnce($scope, second, function(valSecond) {\n          return renderRange($el, valFirst, valSecond);\n        });\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgDateRange\", DateRangeDirective);\n\n  DateSelectorDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs, $model) {\n      var selectedDate;\n      selectedDate = null;\n      $el.picker = new Pikaday({\n        field: $el[0],\n        format: \"DD MMM YYYY\",\n        onSelect: (function(_this) {\n          return function(date) {\n            return selectedDate = date;\n          };\n        })(this),\n        onOpen: (function(_this) {\n          return function() {\n            if (selectedDate != null) {\n              return $el.picker.setDate(selectedDate);\n            }\n          };\n        })(this)\n      });\n      return $scope.$watch($attrs.ngModel, function(val) {\n        if (val != null) {\n          return $el.picker.setDate(val);\n        }\n      });\n    };\n    return {\n      link: link,\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgDateSelector\", DateSelectorDirective);\n\n  SprintProgressBarDirective = function() {\n    var link, renderProgress;\n    renderProgress = function($el, percentage, visual_percentage) {\n      if ($el.hasClass(\".current-progress\")) {\n        return $el.css(\"width\", percentage + \"%\");\n      } else {\n        $el.find(\".current-progress\").css(\"width\", visual_percentage + \"%\");\n        return $el.find(\".number\").html(percentage + \" %\");\n      }\n    };\n    link = function($scope, $el, $attrs) {\n      return bindOnce($scope, $attrs.tgSprintProgressbar, function(sprint) {\n        var closedPoints, percentage, totalPoints, visual_percentage;\n        closedPoints = sprint.closed_points;\n        totalPoints = sprint.total_points;\n        percentage = 0;\n        if (totalPoints !== 0) {\n          percentage = Math.round(100 * (closedPoints / totalPoints));\n        }\n        visual_percentage = 0;\n        if (totalPoints !== 0) {\n          visual_percentage = Math.round(98 * (closedPoints / totalPoints));\n        }\n        return renderProgress($el, percentage, visual_percentage);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgSprintProgressbar\", SprintProgressBarDirective);\n\n  CreatedByDisplayDirective = function($template) {\n    var link, template;\n    template = $template.get(\"common/components/created-by.html\", true);\n    link = function($scope, $el, $attrs) {\n      var render;\n      render = function(model) {\n        var html, owner, _ref;\n        owner = ((_ref = $scope.usersById) != null ? _ref[model.owner] : void 0) || {\n          full_name_display: \"external user\",\n          photo: \"/images/unnamed.png\"\n        };\n        html = template({\n          owner: owner,\n          date: moment(model.created_date).format(\"DD MMM YYYY HH:mm\")\n        });\n        return $el.html(html);\n      };\n      bindOnce($scope, $attrs.ngModel, function(model) {\n        if (model != null) {\n          return render(model);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgCreatedByDisplay\", [\"$tgTemplate\", CreatedByDisplayDirective]);\n\n  WatchersDirective = function($rootscope, $confirm, $repo, $qqueue, $template) {\n    var link, template;\n    template = $template.get(\"common/components/watchers.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var deleteWatcher, isEditable, renderWatchers, save;\n      isEditable = function() {\n        var _ref, _ref1;\n        return ((_ref = $scope.project) != null ? (_ref1 = _ref.my_permissions) != null ? _ref1.indexOf($attrs.requiredPerm) : void 0 : void 0) !== -1;\n      };\n      save = $qqueue.bindAdd((function(_this) {\n        return function(watchers) {\n          var item, promise;\n          item = $model.$modelValue.clone();\n          item.watchers = watchers;\n          $model.$setViewValue(item);\n          promise = $repo.save($model.$modelValue);\n          promise.then(function() {\n            $confirm.notify(\"success\");\n            watchers = _.map(watchers, function(watcherId) {\n              return $scope.usersById[watcherId];\n            });\n            renderWatchers(watchers);\n            return $rootscope.$broadcast(\"history:reload\");\n          });\n          return promise.then(null, function() {\n            return $model.$modelValue.revert();\n          });\n        };\n      })(this));\n      deleteWatcher = $qqueue.bindAdd((function(_this) {\n        return function(watcherIds) {\n          var item, promise;\n          item = $model.$modelValue.clone();\n          item.watchers = watcherIds;\n          $model.$setViewValue(item);\n          promise = $repo.save($model.$modelValue);\n          promise.then(function() {\n            var watchers;\n            $confirm.notify(\"success\");\n            watchers = _.map(item.watchers, function(watcherId) {\n              return $scope.usersById[watcherId];\n            });\n            renderWatchers(watchers);\n            return $rootscope.$broadcast(\"history:reload\");\n          });\n          return promise.then(null, function() {\n            item.revert();\n            return $confirm.notify(\"error\");\n          });\n        };\n      })(this));\n      renderWatchers = function(watchers) {\n        var ctx, html;\n        ctx = {\n          watchers: watchers,\n          isEditable: isEditable()\n        };\n        html = template(ctx);\n        $el.html(html);\n        if (isEditable() && watchers.length === 0) {\n          $el.find(\".title\").text(\"Add watchers\");\n          return $el.find(\".watchers-header\").addClass(\"no-watchers\");\n        }\n      };\n      $el.on(\"click\", \".icon-delete\", function(event) {\n        var message, target, title, watcherId;\n        event.preventDefault();\n        if (!isEditable()) {\n          return;\n        }\n        target = angular.element(event.currentTarget);\n        watcherId = target.data(\"watcher-id\");\n        title = \"Delete watcher\";\n        message = $scope.usersById[watcherId].full_name_display;\n        return $confirm.askOnDelete(title, message).then((function(_this) {\n          return function(finish) {\n            var watcherIds;\n            finish();\n            watcherIds = _.clone($model.$modelValue.watchers, false);\n            watcherIds = _.pull(watcherIds, watcherId);\n            return deleteWatcher(watcherIds);\n          };\n        })(this));\n      });\n      $el.on(\"click\", \".add-watcher\", function(event) {\n        event.preventDefault();\n        if (!isEditable()) {\n          return;\n        }\n        return $scope.$apply(function() {\n          return $rootscope.$broadcast(\"watcher:add\", $model.$modelValue);\n        });\n      });\n      $scope.$on(\"watcher:added\", function(ctx, watcherId) {\n        var watchers;\n        watchers = _.clone($model.$modelValue.watchers, false);\n        watchers.push(watcherId);\n        watchers = _.uniq(watchers);\n        return save(watchers);\n      });\n      $scope.$watch($attrs.ngModel, function(item) {\n        var watchers;\n        if (item == null) {\n          return;\n        }\n        watchers = _.map(item.watchers, function(watcherId) {\n          return $scope.usersById[watcherId];\n        });\n        return renderWatchers(watchers);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgWatchers\", [\"$rootScope\", \"$tgConfirm\", \"$tgRepo\", \"$tgQqueue\", \"$tgTemplate\", WatchersDirective]);\n\n  AssignedToDirective = function($rootscope, $confirm, $repo, $loading, $qqueue, $template) {\n    var link, template;\n    template = $template.get(\"common/components/assigned-to.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var isEditable, renderAssignedTo, save;\n      isEditable = function() {\n        var _ref, _ref1;\n        return ((_ref = $scope.project) != null ? (_ref1 = _ref.my_permissions) != null ? _ref1.indexOf($attrs.requiredPerm) : void 0 : void 0) !== -1;\n      };\n      save = $qqueue.bindAdd((function(_this) {\n        return function(userId) {\n          var promise;\n          $model.$modelValue.assigned_to = userId;\n          $loading.start($el);\n          promise = $repo.save($model.$modelValue);\n          promise.then(function() {\n            $loading.finish($el);\n            $confirm.notify(\"success\");\n            renderAssignedTo($model.$modelValue);\n            return $rootscope.$broadcast(\"history:reload\");\n          });\n          promise.then(null, function() {\n            $model.$modelValue.revert();\n            $confirm.notify(\"error\");\n            return $loading.finish($el);\n          });\n          return promise;\n        };\n      })(this));\n      renderAssignedTo = function(issue) {\n        var assignedTo, assignedToId, ctx, html;\n        assignedToId = issue != null ? issue.assigned_to : void 0;\n        assignedTo = assignedToId != null ? $scope.usersById[assignedToId] : null;\n        ctx = {\n          assignedTo: assignedTo,\n          isEditable: isEditable()\n        };\n        html = template(ctx);\n        return $el.html(html);\n      };\n      $el.on(\"click\", \".user-assigned\", function(event) {\n        event.preventDefault();\n        if (!isEditable()) {\n          return;\n        }\n        return $scope.$apply(function() {\n          return $rootscope.$broadcast(\"assigned-to:add\", $model.$modelValue);\n        });\n      });\n      $el.on(\"click\", \".icon-delete\", function(event) {\n        var title;\n        event.preventDefault();\n        if (!isEditable()) {\n          return;\n        }\n        title = \"Are you sure you want to leave it unassigned?\";\n        return $confirm.ask(title).then((function(_this) {\n          return function(finish) {\n            finish();\n            $model.$modelValue.assigned_to = null;\n            return save(null);\n          };\n        })(this));\n      });\n      $scope.$on(\"assigned-to:added\", function(ctx, userId, item) {\n        if (item.id !== $model.$modelValue.id) {\n          return;\n        }\n        return save(userId);\n      });\n      $scope.$watch($attrs.ngModel, function(instance) {\n        return renderAssignedTo(instance);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgAssignedTo\", [\"$rootScope\", \"$tgConfirm\", \"$tgRepo\", \"$tgLoading\", \"$tgQqueue\", \"$tgTemplate\", AssignedToDirective]);\n\n  BlockButtonDirective = function($rootscope, $loading, $template) {\n    var link, template;\n    template = $template.get(\"common/components/block-button.html\");\n    link = function($scope, $el, $attrs, $model) {\n      var isEditable;\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf(\"modify_us\") !== -1;\n      };\n      $scope.$watch($attrs.ngModel, function(item) {\n        if (!item) {\n          return;\n        }\n        if (isEditable()) {\n          $el.find('.item-block').addClass('editable');\n        }\n        if (item.is_blocked) {\n          $el.find('.item-block').hide();\n          return $el.find('.item-unblock').show();\n        } else {\n          $el.find('.item-block').show();\n          return $el.find('.item-unblock').hide();\n        }\n      });\n      $el.on(\"click\", \".item-block\", function(event) {\n        event.preventDefault();\n        return $rootscope.$broadcast(\"block\", $model.$modelValue);\n      });\n      $el.on(\"click\", \".item-unblock\", function(event) {\n        var finish;\n        event.preventDefault();\n        $loading.start($el.find(\".item-unblock\"));\n        finish = function() {\n          return $loading.finish($el.find(\".item-unblock\"));\n        };\n        return $rootscope.$broadcast(\"unblock\", $model.$modelValue, finish);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\",\n      template: template\n    };\n  };\n\n  module.directive(\"tgBlockButton\", [\"$rootScope\", \"$tgLoading\", \"$tgTemplate\", BlockButtonDirective]);\n\n  DeleteButtonDirective = function($log, $repo, $confirm, $location, $template) {\n    var link, template;\n    template = $template.get(\"common/components/delete-button.html\");\n    link = function($scope, $el, $attrs, $model) {\n      if (!$attrs.onDeleteGoToUrl) {\n        return $log.error(\"DeleteButtonDirective requires on-delete-go-to-url set in scope.\");\n      }\n      if (!$attrs.onDeleteTitle) {\n        return $log.error(\"DeleteButtonDirective requires on-delete-title set in scope.\");\n      }\n      $el.on(\"click\", \".button\", function(event) {\n        var subtitle, title;\n        title = $scope.$eval($attrs.onDeleteTitle);\n        subtitle = $model.$modelValue.subject;\n        return $confirm.askOnDelete(title, subtitle).then((function(_this) {\n          return function(finish) {\n            var promise;\n            promise = $repo.remove($model.$modelValue);\n            promise.then(function() {\n              var url;\n              finish();\n              url = $scope.$eval($attrs.onDeleteGoToUrl);\n              return $location.path(url);\n            });\n            return promise.then(null, function() {\n              finish(false);\n              return $confirm.notify(\"error\");\n            });\n          };\n        })(this));\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\",\n      template: template\n    };\n  };\n\n  module.directive(\"tgDeleteButton\", [\"$log\", \"$tgRepo\", \"$tgConfirm\", \"$tgLocation\", \"$tgTemplate\", DeleteButtonDirective]);\n\n  EditableSubjectDirective = function($rootscope, $repo, $confirm, $loading, $qqueue, $template) {\n    var link, template;\n    template = $template.get(\"common/components/editable-subject.html\");\n    link = function($scope, $el, $attrs, $model) {\n      var isEditable, save;\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf($attrs.requiredPerm) !== -1;\n      };\n      save = $qqueue.bindAdd((function(_this) {\n        return function(subject) {\n          var promise;\n          $model.$modelValue.subject = subject;\n          $loading.start($el.find('.save-container'));\n          promise = $repo.save($model.$modelValue);\n          promise.then(function() {\n            $confirm.notify(\"success\");\n            $rootscope.$broadcast(\"history:reload\");\n            $el.find('.edit-subject').hide();\n            return $el.find('.view-subject').show();\n          });\n          promise.then(null, function() {\n            return $confirm.notify(\"error\");\n          });\n          promise[\"finally\"](function() {\n            return $loading.finish($el.find('.save-container'));\n          });\n          return promise;\n        };\n      })(this));\n      $el.click(function() {\n        if (!isEditable()) {\n          return;\n        }\n        $el.find('.edit-subject').show();\n        $el.find('.view-subject').hide();\n        return $el.find('input').focus();\n      });\n      $el.on(\"click\", \".save\", function() {\n        var subject;\n        subject = $scope.item.subject;\n        return save(subject);\n      });\n      $el.on(\"keyup\", \"input\", function(event) {\n        var subject;\n        if (event.keyCode === 13) {\n          subject = $scope.item.subject;\n          return save(subject);\n        } else if (event.keyCode === 27) {\n          $scope.$apply((function(_this) {\n            return function() {\n              return $model.$modelValue.revert();\n            };\n          })(this));\n          $el.find('div.edit-subject').hide();\n          return $el.find('div.view-subject').show();\n        }\n      });\n      $el.find('div.edit-subject').hide();\n      $el.find('div.view-subject span.edit').hide();\n      $scope.$watch($attrs.ngModel, function(value) {\n        if (!value) {\n          return;\n        }\n        $scope.item = value;\n        if (!isEditable()) {\n          return $el.find('.view-subject .edit').remove();\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\",\n      template: template\n    };\n  };\n\n  module.directive(\"tgEditableSubject\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", \"$tgQqueue\", \"$tgTemplate\", EditableSubjectDirective]);\n\n  EditableDescriptionDirective = function($rootscope, $repo, $confirm, $compile, $loading, $selectedText, $qqueue, $template) {\n    var link, noDescriptionMegEditMode, noDescriptionMegReadMode, template;\n    template = $template.get(\"common/components/editable-description.html\");\n    noDescriptionMegEditMode = $template.get(\"common/components/editable-description-msg-edit-mode.html\");\n    noDescriptionMegReadMode = $template.get(\"common/components/editable-description-msg-read-mode.html\");\n    link = function($scope, $el, $attrs, $model) {\n      var isEditable, save;\n      $el.find('.edit-description').hide();\n      $el.find('.view-description .edit').hide();\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf($attrs.requiredPerm) !== -1;\n      };\n      save = $qqueue.bindAdd((function(_this) {\n        return function(description) {\n          var promise;\n          $model.$modelValue.description = description;\n          $loading.start($el.find('.save-container'));\n          promise = $repo.save($model.$modelValue);\n          promise.then(function() {\n            $confirm.notify(\"success\");\n            $rootscope.$broadcast(\"history:reload\");\n            $el.find('.edit-description').hide();\n            return $el.find('.view-description').show();\n          });\n          promise.then(null, function() {\n            return $confirm.notify(\"error\");\n          });\n          return promise[\"finally\"](function() {\n            return $loading.finish($el.find('.save-container'));\n          });\n        };\n      })(this));\n      $el.on(\"mouseup\", \".view-description\", function(event) {\n        var target;\n        target = angular.element(event.target);\n        if (!isEditable()) {\n          return;\n        }\n        if (target.is('a')) {\n          return;\n        }\n        if ($selectedText.get().length) {\n          return;\n        }\n        $el.find('.edit-description').show();\n        $el.find('.view-description').hide();\n        return $el.find('textarea').focus();\n      });\n      $el.on(\"click\", \".save\", function() {\n        var description;\n        description = $scope.item.description;\n        return save(description);\n      });\n      $el.on(\"keydown\", \"textarea\", function(event) {\n        if (event.keyCode === 27) {\n          $scope.$apply((function(_this) {\n            return function() {\n              return $scope.item.revert();\n            };\n          })(this));\n          $el.find('.edit-description').hide();\n          return $el.find('.view-description').show();\n        }\n      });\n      $scope.$watch($attrs.ngModel, function(value) {\n        if (!value) {\n          return;\n        }\n        $scope.item = value;\n        if (isEditable()) {\n          $el.find('.view-description .edit').show();\n          $el.find('.view-description .us-content').addClass('editable');\n          return $scope.noDescriptionMsg = noDescriptionMegEditMode;\n        } else {\n          return $scope.noDescriptionMsg = noDescriptionMegReadMode;\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\",\n      template: template\n    };\n  };\n\n  module.directive(\"tgEditableDescription\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$compile\", \"$tgLoading\", \"$selectedText\", \"$tgQqueue\", \"$tgTemplate\", EditableDescriptionDirective]);\n\n  ListItemIssueStatusDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var issue;\n      issue = $scope.$eval($attrs.tgListitemIssueStatus);\n      return bindOnce($scope, \"issueStatusById\", function(issueStatusById) {\n        return $el.html(issueStatusById[issue.status].name);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  ListItemTaskStatusDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var task;\n      task = $scope.$eval($attrs.tgListitemTaskStatus);\n      return bindOnce($scope, \"taskStatusById\", function(taskStatusById) {\n        return $el.html(taskStatusById[task.status].name);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  ListItemUsStatusDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var us;\n      us = $scope.$eval($attrs.tgListitemUsStatus);\n      return bindOnce($scope, \"usStatusById\", function(usStatusById) {\n        return $el.html(usStatusById[us.status].name);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  ListItemAssignedtoDirective = function($template) {\n    var link, template;\n    template = $template.get(\"common/components/list-item-assigned-to-avatar.html\", true);\n    link = function($scope, $el, $attrs) {\n      return bindOnce($scope, \"membersById\", function(membersById) {\n        var ctx, item, member;\n        item = $scope.$eval($attrs.tgListitemAssignedto);\n        ctx = {\n          name: \"Unassigned\",\n          imgurl: \"/images/unnamed.png\"\n        };\n        member = membersById[item.assigned_to];\n        if (member) {\n          ctx.imgurl = member.photo;\n          ctx.name = member.full_name;\n        }\n        return $el.html(template(ctx));\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgListitemAssignedto\", [\"$tgTemplate\", ListItemAssignedtoDirective]);\n\n  ListItemPriorityDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var render;\n      render = function(priorityById, issue) {\n        var domNode, priority;\n        priority = priorityById[issue.priority];\n        domNode = $el.find(\".level\");\n        domNode.css(\"background-color\", priority.color);\n        return domNode.attr(\"title\", priority.name);\n      };\n      bindOnce($scope, \"priorityById\", function(priorityById) {\n        var issue;\n        issue = $scope.$eval($attrs.tgListitemPriority);\n        return render(priorityById, issue);\n      });\n      return $scope.$watch($attrs.tgListitemPriority, function(issue) {\n        return render($scope.priorityById, issue);\n      });\n    };\n    return {\n      link: link,\n      templateUrl: \"common/components/level.html\"\n    };\n  };\n\n  module.directive(\"tgListitemPriority\", ListItemPriorityDirective);\n\n  ListItemSeverityDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var render;\n      render = function(severityById, issue) {\n        var domNode, severity;\n        severity = severityById[issue.severity];\n        domNode = $el.find(\".level\");\n        domNode.css(\"background-color\", severity.color);\n        return domNode.attr(\"title\", severity.name);\n      };\n      bindOnce($scope, \"severityById\", function(severityById) {\n        var issue;\n        issue = $scope.$eval($attrs.tgListitemSeverity);\n        return render(severityById, issue);\n      });\n      return $scope.$watch($attrs.tgListitemSeverity, function(issue) {\n        return render($scope.severityById, issue);\n      });\n    };\n    return {\n      link: link,\n      templateUrl: \"common/components/level.html\"\n    };\n  };\n\n  ListItemTypeDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var render;\n      render = function(issueTypeById, issue) {\n        var domNode, type;\n        type = issueTypeById[issue.type];\n        domNode = $el.find(\".level\");\n        domNode.css(\"background-color\", type.color);\n        return domNode.attr(\"title\", type.name);\n      };\n      bindOnce($scope, \"issueTypeById\", function(issueTypeById) {\n        var issue;\n        issue = $scope.$eval($attrs.tgListitemType);\n        return render(issueTypeById, issue);\n      });\n      return $scope.$watch($attrs.tgListitemType, function(issue) {\n        return render($scope.issueTypeById, issue);\n      });\n    };\n    return {\n      link: link,\n      templateUrl: \"common/components/level.html\"\n    };\n  };\n\n  TgProgressBarDirective = function($template) {\n    var link, render, template;\n    template = $template.get(\"common/components/progress-bar.html\", true);\n    render = function(el, percentage) {\n      return el.html(template({\n        percentage: percentage\n      }));\n    };\n    link = function($scope, $el, $attrs) {\n      var element;\n      element = angular.element($el);\n      $scope.$watch($attrs.tgProgressBar, function(percentage) {\n        percentage = _.max([0, percentage]);\n        percentage = _.min([100, percentage]);\n        return render($el, percentage);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgProgressBar\", [\"$tgTemplate\", TgProgressBarDirective]);\n\n  TgMainTitleDirective = function($template) {\n    var link, render, template;\n    template = $template.get(\"common/components/main-title.html\", true);\n    render = function(el, projectName, sectionName) {\n      return el.html(template({\n        projectName: projectName,\n        sectionName: sectionName\n      }));\n    };\n    link = function($scope, $el, $attrs) {\n      var element;\n      element = angular.element($el);\n      $scope.$watch(\"project\", function(project) {\n        if (project) {\n          return render($el, project.name, $scope.sectionName);\n        }\n      });\n      $scope.$on(\"project:loaded\", (function(_this) {\n        return function(ctx, project) {\n          return render($el, project.name, $scope.sectionName);\n        };\n      })(this));\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgMainTitle\", [\"$tgTemplate\", TgMainTitleDirective]);\n\n  module.directive(\"tgListitemType\", ListItemTypeDirective);\n\n  module.directive(\"tgListitemIssueStatus\", ListItemIssueStatusDirective);\n\n  module.directive(\"tgListitemSeverity\", ListItemSeverityDirective);\n\n  module.directive(\"tgListitemTaskStatus\", ListItemTaskStatusDirective);\n\n  module.directive(\"tgListitemUsStatus\", ListItemUsStatusDirective);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base/confirm.coffee\n */\n\n(function() {\n  var ConfirmService, NOTIFICATION_MSG, bindMethods, cancelTimeout, debounce, module, taiga, timeout,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  timeout = this.taiga.timeout;\n\n  cancelTimeout = this.taiga.cancelTimeout;\n\n  debounce = this.taiga.debounce;\n\n  bindMethods = this.taiga.bindMethods;\n\n  NOTIFICATION_MSG = {\n    \"success\": {\n      title: \"Everything is ok\",\n      message: \"Our Oompa Loompas saved all your changes!\"\n    },\n    \"error\": {\n      title: \"Oops, something happened...\",\n      message: \"Our Oompa Loompas are sad, your changes were not saved!\"\n    },\n    \"light-error\": {\n      title: \"Oops, something happened...\",\n      message: \"Our Oompa Loompas are sad, your changes were not saved!\"\n    }\n  };\n\n  ConfirmService = (function(_super) {\n    __extends(ConfirmService, _super);\n\n    ConfirmService.$inject = [\"$q\", \"lightboxService\", \"$tgLoading\"];\n\n    function ConfirmService(_at_q, _at_lightboxService, _at_loading) {\n      this.q = _at_q;\n      this.lightboxService = _at_lightboxService;\n      this.loading = _at_loading;\n      bindMethods(this);\n    }\n\n    ConfirmService.prototype.hide = function(el) {\n      if (el) {\n        this.lightboxService.close(el);\n        return el.off(\".confirm-dialog\");\n      }\n    };\n\n    ConfirmService.prototype.ask = function(title, subtitle, message, lightboxSelector) {\n      var defered, el;\n      if (lightboxSelector == null) {\n        lightboxSelector = \".lightbox-generic-ask\";\n      }\n      el = angular.element(lightboxSelector);\n      el.find(\"h2.title\").html(title);\n      el.find(\"span.subtitle\").html(subtitle);\n      el.find(\"span.message\").html(message);\n      defered = this.q.defer();\n      el.on(\"click.confirm-dialog\", \"a.button-green\", debounce(2000, (function(_this) {\n        return function(event) {\n          var target;\n          event.preventDefault();\n          target = angular.element(event.currentTarget);\n          _this.loading.start(target);\n          return defered.resolve(function(ok) {\n            if (ok == null) {\n              ok = true;\n            }\n            _this.loading.finish(target);\n            if (ok) {\n              return _this.hide(el);\n            }\n          });\n        };\n      })(this)));\n      el.on(\"click.confirm-dialog\", \"a.button-red\", (function(_this) {\n        return function(event) {\n          event.preventDefault();\n          defered.reject();\n          return _this.hide(el);\n        };\n      })(this));\n      this.lightboxService.open(el);\n      return defered.promise;\n    };\n\n    ConfirmService.prototype.askOnDelete = function(title, message) {\n      return this.ask(title, \"Are you sure you want to delete?\", message);\n    };\n\n    ConfirmService.prototype.askChoice = function(title, subtitle, choices, replacement, warning, lightboxSelector) {\n      var choicesField, defered, el;\n      if (lightboxSelector == null) {\n        lightboxSelector = \".lightbox-ask-choice\";\n      }\n      el = angular.element(lightboxSelector);\n      el.find(\".title\").html(title);\n      el.find(\".subtitle\").html(subtitle);\n      if (replacement) {\n        el.find(\".replacement\").html(replacement);\n      } else {\n        el.find(\".replacement\").remove();\n      }\n      if (warning) {\n        el.find(\".warning\").html(warning);\n      } else {\n        el.find(\".warning\").remove();\n      }\n      choicesField = el.find(\".choices\");\n      choicesField.html('');\n      _.each(choices, function(value, key) {\n        return choicesField.append(angular.element(\"<option value='\" + key + \"'>\" + value + \"</option>\"));\n      });\n      defered = this.q.defer();\n      el.on(\"click.confirm-dialog\", \"a.button-green\", debounce(2000, (function(_this) {\n        return function(event) {\n          var target;\n          event.preventDefault();\n          target = angular.element(event.currentTarget);\n          _this.loading.start(target);\n          return defered.resolve({\n            selected: choicesField.val(),\n            finish: function() {\n              _this.loading.finish(target);\n              return _this.hide(el);\n            }\n          });\n        };\n      })(this)));\n      el.on(\"click.confirm-dialog\", \"a.button-red\", (function(_this) {\n        return function(event) {\n          event.preventDefault();\n          defered.reject();\n          return _this.hide(el);\n        };\n      })(this));\n      this.lightboxService.open(el);\n      return defered.promise;\n    };\n\n    ConfirmService.prototype.error = function(message) {\n      var defered, el;\n      el = angular.element(\".lightbox-generic-error\");\n      el.find(\"h2.title\").html(message);\n      defered = this.q.defer();\n      el.on(\"click.confirm-dialog\", \"a.button-green\", (function(_this) {\n        return function(event) {\n          event.preventDefault();\n          defered.resolve();\n          return _this.hide(el);\n        };\n      })(this));\n      el.on(\"click.confirm-dialog\", \"a.close\", (function(_this) {\n        return function(event) {\n          event.preventDefault();\n          defered.resolve();\n          return _this.hide(el);\n        };\n      })(this));\n      this.lightboxService.open(el);\n      return defered.promise;\n    };\n\n    ConfirmService.prototype.success = function(title, message) {\n      var defered, el;\n      el = angular.element(\".lightbox-generic-success\");\n      if (title) {\n        el.find(\"h2.title\").html(title);\n      }\n      if (message) {\n        el.find(\"p.message\").html(message);\n      }\n      defered = this.q.defer();\n      el.on(\"click.confirm-dialog\", \"a.button-green\", (function(_this) {\n        return function(event) {\n          event.preventDefault();\n          defered.resolve();\n          return _this.hide(el);\n        };\n      })(this));\n      el.on(\"click.confirm-dialog\", \"a.close\", (function(_this) {\n        return function(event) {\n          event.preventDefault();\n          defered.resolve();\n          return _this.hide(el);\n        };\n      })(this));\n      this.lightboxService.open(el);\n      return defered.promise;\n    };\n\n    ConfirmService.prototype.loader = function(title, message) {\n      var el;\n      el = angular.element(\".lightbox-generic-loading\");\n      if (title) {\n        el.find(\"h2.title\").html(title);\n      }\n      if (message) {\n        el.find(\"p.message\").html(message);\n      }\n      return {\n        start: (function(_this) {\n          return function() {\n            return _this.lightboxService.open(el);\n          };\n        })(this),\n        stop: (function(_this) {\n          return function() {\n            return _this.lightboxService.close(el);\n          };\n        })(this),\n        update: (function(_this) {\n          return function(status, title, message, percent) {\n            if (title) {\n              el.find(\"h2.title\").html(title);\n            }\n            if (message) {\n              el.find(\"p.message\").html(message);\n            }\n            if (percent) {\n              el.find(\".spin\").addClass(\"hidden\");\n              el.find(\".progress-bar-wrapper\").removeClass(\"hidden\");\n              el.find(\".progress-bar-wrapper > .bar\").width(percent + '%');\n              return el.find(\".progress-bar-wrapper > span\").html(percent + '%').css('left', (percent - 9) + '%');\n            } else {\n              el.find(\".spin\").removeClass(\"hidden\");\n              return el.find(\".progress-bar-wrapper\").addClass(\"hidden\");\n            }\n          };\n        })(this)\n      };\n    };\n\n    ConfirmService.prototype.notify = function(type, message, title, time) {\n      var body, el, selector;\n      selector = \".notification-message-\" + type;\n      el = angular.element(selector);\n      if (el.hasClass(\"active\")) {\n        return;\n      }\n      if (title) {\n        el.find(\"h4\").html(title);\n      } else {\n        el.find(\"h4\").html(NOTIFICATION_MSG[type].title);\n      }\n      if (message) {\n        el.find(\"p\").html(message);\n      } else {\n        el.find(\"p\").html(NOTIFICATION_MSG[type].message);\n      }\n      body = angular.element(\"body\");\n      body.find(\".notification-message .notification-light\").removeClass('active').addClass('inactive');\n      body.find(selector).removeClass('inactive').addClass('active');\n      if (this.tsem) {\n        cancelTimeout(this.tsem);\n      }\n      if (!time) {\n        time = type === 'error' || type === 'light-error' ? 3500 : 1500;\n      }\n      this.tsem = timeout(time, (function(_this) {\n        return function() {\n          body.find(selector).removeClass('active').addClass('inactive');\n          return delete _this.tsem;\n        };\n      })(this));\n      return el.on(\"click\", \".icon-delete\", (function(_this) {\n        return function(event) {\n          return body.find(selector).removeClass('active').addClass('inactive');\n        };\n      })(this));\n    };\n\n    return ConfirmService;\n\n  })(taiga.Service);\n\n  module = angular.module(\"taigaCommon\");\n\n  module.service(\"$tgConfirm\", ConfirmService);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/estimation.coffee\n */\n\n(function() {\n  var LbUsEstimationDirective, UsEstimationDirective, module, taiga;\n\n  taiga = this.taiga;\n\n  module = angular.module(\"taigaCommon\");\n\n  LbUsEstimationDirective = function($rootScope, $repo, $confirm, $template) {\n    var link, mainTemplate, pointsTemplate;\n    mainTemplate = $template.get(\"common/estimation/lb-us-estimation-points-per-role.html\", true);\n    pointsTemplate = $template.get(\"common/estimation/lb-us-estimation-points.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var calculateTotalPoints, render, renderPoints;\n      render = function(points) {\n        var computableRoles, ctx, html, roles, totalPoints;\n        totalPoints = calculateTotalPoints(points) || 0;\n        computableRoles = _.filter($scope.project.roles, \"computable\");\n        roles = _.map(computableRoles, function(role) {\n          var pointId, pointObj;\n          pointId = points[role.id];\n          pointObj = $scope.pointsById[pointId];\n          role = _.clone(role, true);\n          role.points = (pointObj != null) && (pointObj.name != null) ? pointObj.name : \"?\";\n          return role;\n        });\n        ctx = {\n          totalPoints: totalPoints,\n          roles: roles\n        };\n        html = mainTemplate(ctx);\n        return $el.html(html);\n      };\n      renderPoints = function(target, usPoints, roleId) {\n        var html, points;\n        points = _.map($scope.project.points, function(point) {\n          point = _.clone(point, true);\n          point.selected = usPoints[roleId] === point.id ? false : true;\n          return point;\n        });\n        html = pointsTemplate({\n          \"points\": points,\n          roleId: roleId\n        });\n        $el.find(\".popover\").popover().close();\n        $el.find(\".pop-points-open\").remove();\n        if ($el.find(\".pop-role:visible\").css(\"left\") == null) {\n          $el.find(\".pop-points-open\").css(\"left\", \"110px\");\n        }\n        $el.find(\".pop-points-open\").remove();\n        $el.find(target).append(html);\n        $el.find(\".pop-points-open\").popover().open(function() {\n          return $(this).removeClass(\"active\");\n        });\n        return $el.find(\".pop-points-open\").show();\n      };\n      calculateTotalPoints = function(points) {\n        var values;\n        values = _.map(points, function(v, k) {\n          var _ref;\n          return ((_ref = $scope.pointsById[v]) != null ? _ref.value : void 0) || 0;\n        });\n        if (values.length === 0) {\n          return \"0\";\n        }\n        return _.reduce(values, function(acc, num) {\n          return acc + num;\n        });\n      };\n      $el.on(\"click\", \".total.clickable\", function(event) {\n        var points, roleId, target;\n        event.preventDefault();\n        event.stopPropagation();\n        target = angular.element(event.currentTarget);\n        roleId = target.data(\"role-id\");\n        points = $model.$modelValue;\n        renderPoints(target, points, roleId);\n        target.siblings().removeClass('active');\n        return target.addClass('active');\n      });\n      $el.on(\"click\", \".point\", function(event) {\n        var pointId, points, roleId, target;\n        event.preventDefault();\n        event.stopPropagation();\n        target = angular.element(event.currentTarget);\n        roleId = target.data(\"role-id\");\n        pointId = target.data(\"point-id\");\n        $el.find(\".popover\").popover().close();\n        points = _.clone($model.$modelValue, true);\n        points[roleId] = pointId;\n        return $scope.$apply(function() {\n          return $model.$setViewValue(points);\n        });\n      });\n      $scope.$watch($attrs.ngModel, function(points) {\n        if (points) {\n          return render(points);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgLbUsEstimation\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgTemplate\", LbUsEstimationDirective]);\n\n  UsEstimationDirective = function($rootScope, $repo, $confirm, $qqueue, $template) {\n    var link, mainTemplate, pointsTemplate;\n    mainTemplate = $template.get(\"common/estimation/us-estimation-points-per-role.html\", true);\n    pointsTemplate = $template.get(\"common/estimation/us-estimation-points.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var calculateTotalPoints, isEditable, render, renderPoints, save;\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf(\"modify_us\") !== -1;\n      };\n      render = function(us) {\n        var computableRoles, ctx, html, roles, totalPoints;\n        totalPoints = calculateTotalPoints(us.points) || \"?\";\n        computableRoles = _.filter($scope.project.roles, \"computable\");\n        roles = _.map(computableRoles, function(role) {\n          var pointId, pointObj;\n          pointId = us.points[role.id];\n          pointObj = $scope.pointsById[pointId];\n          role = _.clone(role, true);\n          role.points = (pointObj != null) && (pointObj.name != null) ? pointObj.name : \"?\";\n          return role;\n        });\n        ctx = {\n          totalPoints: totalPoints,\n          roles: roles,\n          editable: isEditable()\n        };\n        html = mainTemplate(ctx);\n        return $el.html(html);\n      };\n      renderPoints = function(target, us, roleId) {\n        var html, points;\n        points = _.map($scope.project.points, function(point) {\n          point = _.clone(point, true);\n          point.selected = us.points[roleId] === point.id ? false : true;\n          return point;\n        });\n        html = pointsTemplate({\n          \"points\": points,\n          roleId: roleId\n        });\n        $el.find(\".popover\").popover().close();\n        $el.find(\".pop-points-open\").remove();\n        if ($el.find(\".pop-role:visible\").css(\"left\") == null) {\n          $el.find(\".pop-points-open\").css(\"left\", \"110px\");\n        }\n        $el.find(\".pop-points-open\").remove();\n        $el.find(target).append(html);\n        $el.find(\".pop-points-open\").popover().open(function() {\n          return $(this).removeClass(\"active\").closest(\"li\").removeClass(\"active\");\n        });\n        return $el.find(\".pop-points-open\").show();\n      };\n      calculateTotalPoints = function(points) {\n        var notNullValues, values;\n        values = _.map(points, function(v, k) {\n          var _ref;\n          return (_ref = $scope.pointsById[v]) != null ? _ref.value : void 0;\n        });\n        if (values.length === 0) {\n          return \"0\";\n        }\n        notNullValues = _.filter(values, function(v) {\n          return v != null;\n        });\n        if (notNullValues.length === 0) {\n          return \"?\";\n        }\n        return _.reduce(notNullValues, function(acc, num) {\n          return acc + num;\n        });\n      };\n      save = $qqueue.bindAdd((function(_this) {\n        return function(roleId, pointId) {\n          var onError, onSuccess, points, us;\n          $el.find(\".popover\").popover().close();\n          points = _.clone($model.$modelValue.points, true);\n          points[roleId] = pointId;\n          us = $model.$modelValue.clone();\n          us.points = points;\n          $model.$setViewValue(us);\n          onSuccess = function() {\n            $confirm.notify(\"success\");\n            return $rootScope.$broadcast(\"history:reload\");\n          };\n          onError = function() {\n            $confirm.notify(\"error\");\n            us.revert();\n            return $model.$setViewValue(us);\n          };\n          return $repo.save(us).then(onSuccess, onError);\n        };\n      })(this));\n      $el.on(\"click\", \".total.clickable\", function(event) {\n        var roleId, target, us;\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        target = angular.element(event.currentTarget);\n        roleId = target.data(\"role-id\");\n        us = $model.$modelValue;\n        renderPoints(target, us, roleId);\n        target.siblings().removeClass('active');\n        return target.addClass('active');\n      });\n      $el.on(\"click\", \".point\", function(event) {\n        var pointId, roleId, target;\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        target = angular.element(event.currentTarget);\n        roleId = target.data(\"role-id\");\n        pointId = target.data(\"point-id\");\n        return save(roleId, pointId);\n      });\n      $scope.$watch($attrs.ngModel, function(us) {\n        if (us) {\n          return render(us);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgUsEstimation\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgQqueue\", \"$tgTemplate\", UsEstimationDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/filters.coffee\n */\n\n(function() {\n  var defaultFilter, module, momentFormat, momentFromNow, taiga, unslugify, yesNoFilter;\n\n  taiga = this.taiga;\n\n  module = angular.module(\"taigaCommon\");\n\n  defaultFilter = function() {\n    return function(value, defaultValue) {\n      if (value === [null, void 0]) {\n        return defaultValue;\n      }\n      return value;\n    };\n  };\n\n  module.filter(\"default\", defaultFilter);\n\n  yesNoFilter = function() {\n    return function(value) {\n      if (value) {\n        return \"Yes\";\n      }\n      return \"No\";\n    };\n  };\n\n  module.filter(\"yesNo\", yesNoFilter);\n\n  unslugify = function() {\n    return taiga.unslugify;\n  };\n\n  module.filter(\"unslugify\", unslugify);\n\n  momentFormat = function() {\n    return function(input, format) {\n      if (input) {\n        return moment(input).format(format);\n      }\n      return \"\";\n    };\n  };\n\n  module.filter(\"momentFormat\", momentFormat);\n\n  momentFromNow = function() {\n    return function(input, without_suffix) {\n      if (input) {\n        return moment(input).fromNow(without_suffix || false);\n      }\n      return \"\";\n    };\n  };\n\n  module.filter(\"momentFromNow\", momentFromNow);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/history.coffee\n */\n\n(function() {\n  var HistoryController, HistoryDirective, bindOnce, debounce, module, taiga, trim,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  trim = this.taiga.trim;\n\n  bindOnce = this.taiga.bindOnce;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaCommon\");\n\n  HistoryController = (function(_super) {\n    __extends(HistoryController, _super);\n\n    HistoryController.$inject = [\"$scope\", \"$tgRepo\", \"$tgResources\"];\n\n    function HistoryController(_at_scope, _at_repo, _at_rs) {\n      this.scope = _at_scope;\n      this.repo = _at_repo;\n      this.rs = _at_rs;\n    }\n\n    HistoryController.prototype.initialize = function(type, objectId) {\n      this.type = type;\n      return this.objectId = objectId;\n    };\n\n    HistoryController.prototype.loadHistory = function(type, objectId) {\n      return this.rs.history.get(type, objectId).then((function(_this) {\n        return function(history) {\n          var historyResult, _i, _len;\n          for (_i = 0, _len = history.length; _i < _len; _i++) {\n            historyResult = history[_i];\n            if (historyResult.values_diff.description_diff != null) {\n              historyResult.values_diff.description = historyResult.values_diff.description_diff;\n            }\n            delete historyResult.values_diff.description_html;\n            delete historyResult.values_diff.description_diff;\n            if (historyResult.values_diff.blocked_note_diff != null) {\n              historyResult.values_diff.blocked_note = historyResult.values_diff.blocked_note_diff;\n            }\n            delete historyResult.values_diff.blocked_note_html;\n            delete historyResult.values_diff.blocked_note_diff;\n          }\n          _this.scope.history = history;\n          return _this.scope.comments = _.filter(history, function(item) {\n            return item.comment !== \"\";\n          });\n        };\n      })(this));\n    };\n\n    HistoryController.prototype.deleteComment = function(type, objectId, activityId) {\n      return this.rs.history.deleteComment(type, objectId, activityId).then((function(_this) {\n        return function() {\n          return _this.loadHistory(type, objectId);\n        };\n      })(this));\n    };\n\n    HistoryController.prototype.undeleteComment = function(type, objectId, activityId) {\n      return this.rs.history.undeleteComment(type, objectId, activityId).then((function(_this) {\n        return function() {\n          return _this.loadHistory(type, objectId);\n        };\n      })(this));\n    };\n\n    return HistoryController;\n\n  })(taiga.Controller);\n\n  HistoryDirective = function($log, $loading, $qqueue, $template, $confirm) {\n    var link, templateActivity, templateBase, templateBaseEntries, templateChangeAttachment, templateChangeDiff, templateChangeGeneric, templateChangeList, templateChangePoints, templateDeletedComment, templateFn;\n    templateChangeDiff = $template.get(\"common/history/history-change-diff.html\", true);\n    templateChangePoints = $template.get(\"common/history/history-change-points.html\", true);\n    templateChangeGeneric = $template.get(\"common/history/history-change-generic.html\", true);\n    templateChangeAttachment = $template.get(\"common/history/history-change-attachment.html\", true);\n    templateChangeList = $template.get(\"common/history/history-change-list.html\", true);\n    templateDeletedComment = $template.get(\"common/history/history-deleted-comment.html\", true);\n    templateActivity = $template.get(\"common/history/history-activity.html\", true);\n    templateBaseEntries = $template.get(\"common/history/history-base-entries.html\", true);\n    templateBase = $template.get(\"common/history/history-base.html\", true);\n    link = function($scope, $el, $attrs, $ctrl) {\n      var countChanges, formatChange, getHumanizedFieldName, getUserAvatar, getUserFullName, objectId, renderActivity, renderAttachmentEntry, renderChange, renderChangeEntries, renderChangeEntry, renderChangesHelperText, renderComment, renderComments, renderHistory, save, showAllActivity, showAllComments, type;\n      type = $attrs.type;\n      objectId = null;\n      showAllComments = false;\n      showAllActivity = false;\n      bindOnce($scope, $attrs.ngModel, function(model) {\n        type = $attrs.type;\n        objectId = model.id;\n        $ctrl.initialize(type, objectId);\n        return $ctrl.loadHistory(type, objectId);\n      });\n      getHumanizedFieldName = function(field) {\n        var humanizedFieldNames;\n        humanizedFieldNames = {\n          assigned_to: \"assigned to\",\n          is_closed: \"is closed\",\n          finish_date: \"finish date\",\n          client_requirement: \"client requirement\",\n          team_requirement: \"team requirement\",\n          milestone: \"sprint\",\n          user_story: \"user story\",\n          is_iocaine: \"is iocaine\",\n          is_deprecated: \"is deprecated\",\n          blocked_note: \"blocked note\",\n          is_blocked: \"is blocked\"\n        };\n        return humanizedFieldNames[field] || field;\n      };\n      getUserFullName = function(userId) {\n        var _ref;\n        return (_ref = $scope.usersById[userId]) != null ? _ref.full_name_display : void 0;\n      };\n      getUserAvatar = function(userId) {\n        if ($scope.usersById[userId] != null) {\n          return $scope.usersById[userId].photo;\n        } else {\n          return \"/images/unnamed.png\";\n        }\n      };\n      countChanges = function(comment) {\n        return _.keys(comment.values_diff).length;\n      };\n      formatChange = function(change) {\n        if (_.isArray(change)) {\n          if (change.length === 0) {\n            return \"empty\";\n          }\n          return change.join(\", \");\n        }\n        if (change === \"\") {\n          return \"empty\";\n        }\n        if ((change == null) || change === false) {\n          return \"no\";\n        }\n        if (change === true) {\n          return \"yes\";\n        }\n        return change;\n      };\n      renderAttachmentEntry = function(value) {\n        var attachments;\n        attachments = _.map(value, function(changes, type) {\n          if (type === \"new\") {\n            return _.map(changes, function(change) {\n              return templateChangeDiff({\n                name: \"new attachment\",\n                diff: change.filename\n              });\n            });\n          } else if (type === \"deleted\") {\n            return _.map(changes, function(change) {\n              return templateChangeDiff({\n                name: \"deleted attachment\",\n                diff: change.filename\n              });\n            });\n          } else {\n            return _.map(changes, function(change) {\n              var diff, name;\n              name = \"updated attachment \" + change.filename;\n              diff = _.map(change.changes, function(values, name) {\n                return {\n                  name: getHumanizedFieldName(name),\n                  from: formatChange(values[0]),\n                  to: formatChange(values[1])\n                };\n              });\n              return templateChangeAttachment({\n                name: name,\n                diff: diff\n              });\n            });\n          }\n        });\n        return _.flatten(attachments).join(\"\\n\");\n      };\n      renderChangeEntry = function(field, value) {\n        var added, from, name, removed, to;\n        if (field === \"description\") {\n          return templateChangeDiff({\n            name: getHumanizedFieldName(\"description\"),\n            diff: value[1]\n          });\n        } else if (field === \"blocked_note\") {\n          return templateChangeDiff({\n            name: getHumanizedFieldName(\"blocked_note\"),\n            diff: value[1]\n          });\n        } else if (field === \"points\") {\n          return templateChangePoints({\n            points: value\n          });\n        } else if (field === \"attachments\") {\n          return renderAttachmentEntry(value);\n        } else if (field === \"tags\" || field === \"watchers\") {\n          name = getHumanizedFieldName(field);\n          removed = _.difference(value[0], value[1]);\n          added = _.difference(value[1], value[0]);\n          return templateChangeList({\n            name: name,\n            removed: removed,\n            added: added\n          });\n        } else if (field === \"assigned_to\") {\n          name = getHumanizedFieldName(field);\n          from = formatChange(value[0] || \"Unassigned\");\n          to = formatChange(value[1] || \"Unassigned\");\n          return templateChangeGeneric({\n            name: name,\n            from: from,\n            to: to\n          });\n        } else {\n          name = getHumanizedFieldName(field);\n          from = formatChange(value[0]);\n          to = formatChange(value[1]);\n          return templateChangeGeneric({\n            name: name,\n            from: from,\n            to: to\n          });\n        }\n      };\n      renderChangeEntries = function(change) {\n        return _.map(change.values_diff, function(value, field) {\n          return renderChangeEntry(field, value);\n        });\n      };\n      renderChangesHelperText = function(change) {\n        var size;\n        size = countChanges(change);\n        if (size === 1) {\n          return \"Made \" + size + \" change\";\n        }\n        return \"Made \" + size + \" changes\";\n      };\n      renderComment = function(comment) {\n        var _ref, _ref1;\n        if (comment.delete_comment_date || ((_ref = comment.delete_comment_user) != null ? _ref.name : void 0)) {\n          return templateDeletedComment({\n            deleteCommentDate: comment.delete_comment_date ? moment(comment.delete_comment_date).format(\"DD MMM YYYY HH:mm\") : void 0,\n            deleteCommentUser: comment.delete_comment_user.name,\n            deleteComment: comment.comment_html,\n            activityId: comment.id,\n            canRestoreComment: comment.delete_comment_user.pk === $scope.user.id || $scope.project.my_permissions.indexOf(\"modify_project\") > -1\n          });\n        }\n        return templateActivity({\n          avatar: getUserAvatar(comment.user.pk),\n          userFullName: comment.user.name,\n          creationDate: moment(comment.created_at).format(\"DD MMM YYYY HH:mm\"),\n          comment: comment.comment_html,\n          changesText: renderChangesHelperText(comment),\n          changes: renderChangeEntries(comment),\n          mode: \"comment\",\n          deleteCommentDate: comment.delete_comment_date ? moment(comment.delete_comment_date).format(\"DD MMM YYYY HH:mm\") : void 0,\n          deleteCommentUser: ((_ref1 = comment.delete_comment_user) != null ? _ref1.name : void 0) ? comment.delete_comment_user.name : void 0,\n          activityId: comment.id,\n          canDeleteComment: comment.user.pk === $scope.user.id || $scope.project.my_permissions.indexOf(\"modify_project\") > -1\n        });\n      };\n      renderChange = function(change) {\n        var _ref;\n        return templateActivity({\n          avatar: getUserAvatar(change.user.pk),\n          userFullName: change.user.name,\n          creationDate: moment(change.created_at).format(\"DD MMM YYYY HH:mm\"),\n          comment: change.comment_html,\n          changes: renderChangeEntries(change),\n          changesText: \"\",\n          mode: \"activity\",\n          deleteCommentDate: change.delete_comment_date ? moment(change.delete_comment_date).format(\"DD MMM YYYY HH:mm\") : void 0,\n          deleteCommentUser: ((_ref = change.delete_comment_user) != null ? _ref.name : void 0) ? change.delete_comment_user.name : void 0,\n          activityId: change.id\n        });\n      };\n      renderHistory = function(entries, totalEntries) {\n        var showMore;\n        if (entries.length === totalEntries) {\n          showMore = 0;\n        } else {\n          showMore = totalEntries - entries.length;\n        }\n        return templateBaseEntries({\n          entries: entries,\n          showMore: showMore\n        });\n      };\n      renderComments = function() {\n        var comments, html, totalComments;\n        comments = $scope.comments || [];\n        totalComments = comments.length;\n        if (!showAllComments) {\n          comments = _.last(comments, 4);\n        }\n        comments = _.map(comments, function(x) {\n          return renderComment(x);\n        });\n        html = renderHistory(comments, totalComments);\n        return $el.find(\".comments-list\").html(html);\n      };\n      renderActivity = function() {\n        var changes, html, totalChanges;\n        changes = $scope.history || [];\n        totalChanges = changes.length;\n        if (!showAllActivity) {\n          changes = _.last(changes, 4);\n        }\n        changes = _.map(changes, function(x) {\n          return renderChange(x);\n        });\n        html = renderHistory(changes, totalChanges);\n        return $el.find(\".changes-list\").html(html);\n      };\n      save = $qqueue.bindAdd((function(_this) {\n        return function(target) {\n          var model, onError, onSuccess;\n          $scope.$broadcast(\"markdown-editor:submit\");\n          $el.find(\".comment-list\").addClass(\"activeanimation\");\n          onSuccess = function() {\n            return $ctrl.loadHistory(type, objectId)[\"finally\"](function() {\n              return $loading.finish(target);\n            });\n          };\n          onError = function() {\n            $loading.finish(target);\n            return $confirm.notify(\"error\");\n          };\n          model = $scope.$eval($attrs.ngModel);\n          $loading.start(target);\n          return $ctrl.repo.save(model).then(onSuccess, onError);\n        };\n      })(this));\n      $scope.$watch(\"comments\", renderComments);\n      $scope.$watch(\"history\", renderActivity);\n      $scope.$on(\"history:reload\", function() {\n        return $ctrl.loadHistory(type, objectId);\n      });\n      $el.on(\"click\", \".add-comment a.button-green\", debounce(2000, function(event) {\n        var target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        return save(target);\n      }));\n      $el.on(\"click\", \".show-more\", function(event) {\n        var target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        if (target.parent().is(\".changes-list\")) {\n          showAllActivity = !showAllActivity;\n          return renderActivity();\n        } else {\n          showAllComments = !showAllComments;\n          return renderComments();\n        }\n      });\n      $el.on(\"click\", \".show-deleted-comment\", function(event) {\n        var target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        target.parents('.activity-single').find('.hide-deleted-comment').show();\n        target.parents('.activity-single').find('.show-deleted-comment').hide();\n        return target.parents('.activity-single').find('.comment-body').show();\n      });\n      $el.on(\"click\", \".hide-deleted-comment\", function(event) {\n        var target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        target.parents('.activity-single').find('.hide-deleted-comment').hide();\n        target.parents('.activity-single').find('.show-deleted-comment').show();\n        return target.parents('.activity-single').find('.comment-body').hide();\n      });\n      $el.on(\"click\", \".changes-title\", function(event) {\n        var target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        return target.parent().find(\".change-entry\").toggleClass(\"active\");\n      });\n      $el.on(\"focus\", \".add-comment textarea\", function(event) {\n        return $(this).addClass('active');\n      });\n      $el.on(\"click\", \".history-tabs li a\", function(event) {\n        $el.find(\".history-tabs li a\").toggleClass(\"active\");\n        return $el.find(\".history section\").toggleClass(\"hidden\");\n      });\n      $el.on(\"click\", \".comment-delete\", debounce(2000, function(event) {\n        var activityId, target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        activityId = target.data('activity-id');\n        return $ctrl.deleteComment(type, objectId, activityId);\n      }));\n      $el.on(\"click\", \".comment-restore\", debounce(2000, function(event) {\n        var activityId, target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        activityId = target.data('activity-id');\n        return $ctrl.undeleteComment(type, objectId, activityId);\n      }));\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    templateFn = function($el, $attrs) {\n      return templateBase({\n        ngmodel: $attrs.ngModel,\n        type: $attrs.type,\n        mode: $attrs.mode\n      });\n    };\n    return {\n      controller: HistoryController,\n      template: templateFn,\n      restrict: \"AE\",\n      link: link\n    };\n  };\n\n  module.directive(\"tgHistory\", [\"$log\", \"$tgLoading\", \"$tgQqueue\", \"$tgTemplate\", \"$tgConfirm\", HistoryDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/importer.coffee\n */\n\n(function() {\n  var ImportProjectButtonDirective, module;\n\n  module = angular.module(\"taigaCommon\");\n\n  ImportProjectButtonDirective = function($rs, $confirm, $location, $navUrls) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      $el.on(\"click\", \".import-project-button\", function(event) {\n        event.preventDefault();\n        $el.find(\"input.import-file\").val(\"\");\n        return $el.find(\"input.import-file\").trigger(\"click\");\n      });\n      return $el.on(\"change\", \"input.import-file\", function(event) {\n        var file, loader, onError, onSuccess;\n        event.preventDefault();\n        file = event.target.files[0];\n        if (!file) {\n          return;\n        }\n        loader = $confirm.loader(\"Uploading dump file\");\n        onSuccess = function(result) {\n          var ctx, message, title;\n          loader.stop();\n          if (result.status === 202) {\n            title = \"Our Oompa Loompas are importing your project\";\n            message = \"This process could take a few minutes <br/> We will send you an email when ready\";\n            return $confirm.success(title, message);\n          } else {\n            ctx = {\n              project: result.data.slug\n            };\n            $location.path($navUrls.resolve(\"project-admin-project-profile-details\", ctx));\n            return $confirm.notify(\"success\", \"Your project has been imported successfuly.\");\n          }\n        };\n        onError = function(result) {\n          var errorMsg, _ref;\n          loader.stop();\n          console.log(\"Error\", result);\n          errorMsg = \"Our oompa loompas have some problems importing your dump data. Please try again. \";\n          if (result.status === 429) {\n            errorMsg = \"Sorry, our oompa loompas are very busy right now. Please try again in a few minutes. \";\n          } else if ((_ref = result.data) != null ? _ref._error_message : void 0) {\n            errorMsg = \"Our oompa loompas have some problems importing your dump data: \" + result.data._error_message;\n          }\n          return $confirm.notify(\"error\", errorMsg);\n        };\n        loader.start();\n        return $rs.projects[\"import\"](file, loader.update).then(onSuccess, onError);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgImportProjectButton\", [\"$tgResources\", \"$tgConfirm\", \"$location\", \"$tgNavUrls\", ImportProjectButtonDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/lightboxes.coffee\n */\n\n(function() {\n  var AssignedToLightboxDirective, BlockLightboxDirective, BlockingMessageInputDirective, CreateBulkUserstoriesDirective, CreateEditUserstoryDirective, LightboxDirective, LightboxKeyboardNavigationService, LightboxService, NotionButtonDirective, NotionLightboxDirective, WatchersLightboxDirective, bindOnce, debounce, module, timeout,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  module = angular.module(\"taigaCommon\");\n\n  bindOnce = this.taiga.bindOnce;\n\n  timeout = this.taiga.timeout;\n\n  debounce = this.taiga.debounce;\n\n  LightboxService = (function(_super) {\n    __extends(LightboxService, _super);\n\n    function LightboxService(_at_animationFrame, _at_q) {\n      this.animationFrame = _at_animationFrame;\n      this.q = _at_q;\n    }\n\n    LightboxService.prototype.open = function($el) {\n      var defered, docEl, lightboxContent;\n      defered = this.q.defer();\n      lightboxContent = $el.children().not(\".close\");\n      lightboxContent.hide();\n      $el.css('display', 'flex');\n      $el.find('input,textarea').first().focus();\n      this.animationFrame.add((function(_this) {\n        return function() {\n          $el.addClass(\"open\");\n          lightboxContent.show();\n          return defered.resolve();\n        };\n      })(this));\n      docEl = angular.element(document);\n      docEl.on(\"keydown.lightbox\", (function(_this) {\n        return function(e) {\n          var code;\n          code = e.keyCode ? e.keyCode : e.which;\n          if (code === 27) {\n            return _this.close($el);\n          }\n        };\n      })(this));\n      return defered.promise;\n    };\n\n    LightboxService.prototype.close = function($el) {\n      var docEl;\n      docEl = angular.element(document);\n      docEl.off(\".lightbox\");\n      docEl.off(\".keyboard-navigation\");\n      $el.one(\"transitionend\", (function(_this) {\n        return function() {\n          $el.removeAttr('style');\n          return $el.removeClass(\"open\").removeClass('close');\n        };\n      })(this));\n      return $el.addClass('close');\n    };\n\n    LightboxService.prototype.closeAll = function() {\n      var docEl, lightboxEl, _i, _len, _ref, _results;\n      docEl = angular.element(document);\n      _ref = docEl.find(\".lightbox.open\");\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        lightboxEl = _ref[_i];\n        _results.push(this.close($(lightboxEl)));\n      }\n      return _results;\n    };\n\n    return LightboxService;\n\n  })(taiga.Service);\n\n  module.service(\"lightboxService\", [\"animationFrame\", \"$q\", LightboxService]);\n\n  LightboxKeyboardNavigationService = (function(_super) {\n    __extends(LightboxKeyboardNavigationService, _super);\n\n    function LightboxKeyboardNavigationService() {\n      return LightboxKeyboardNavigationService.__super__.constructor.apply(this, arguments);\n    }\n\n    LightboxKeyboardNavigationService.prototype.stop = function() {\n      var docEl;\n      docEl = angular.element(document);\n      return docEl.off(\".keyboard-navigation\");\n    };\n\n    LightboxKeyboardNavigationService.prototype.dispatch = function($el, code) {\n      var activeElement, next, prev;\n      activeElement = $el.find(\".active\");\n      if (code === 13) {\n        return activeElement.trigger(\"click\");\n      } else if (code === 40) {\n        if (!activeElement.length) {\n          return $el.find('.watcher-single:first').addClass('active');\n        } else {\n          next = activeElement.next('.watcher-single');\n          if (next.length) {\n            activeElement.removeClass('active');\n            return next.addClass('active');\n          }\n        }\n      } else if (code === 38) {\n        if (!activeElement.length) {\n          return $el.find('.watcher-single:last').addClass('active');\n        } else {\n          prev = activeElement.prev('.watcher-single');\n          if (prev.length) {\n            activeElement.removeClass('active');\n            return prev.addClass('active');\n          }\n        }\n      }\n    };\n\n    LightboxKeyboardNavigationService.prototype.init = function($el) {\n      var docEl;\n      this.stop();\n      docEl = angular.element(document);\n      return docEl.on(\"keydown.keyboard-navigation\", (function(_this) {\n        return function(event) {\n          var code;\n          code = event.keyCode ? event.keyCode : event.which;\n          if (code === 40 || code === 38 || code === 13) {\n            event.preventDefault();\n            return _this.dispatch($el, code);\n          }\n        };\n      })(this));\n    };\n\n    return LightboxKeyboardNavigationService;\n\n  })(taiga.Service);\n\n  module.service(\"lightboxKeyboardNavigationService\", LightboxKeyboardNavigationService);\n\n  LightboxDirective = function(lightboxService) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return $el.on(\"click\", \".close\", function(event) {\n        event.preventDefault();\n        return lightboxService.close($el);\n      });\n    };\n    return {\n      restrict: \"C\",\n      link: link\n    };\n  };\n\n  module.directive(\"lightbox\", [\"lightboxService\", LightboxDirective]);\n\n  BlockLightboxDirective = function($rootscope, $tgrepo, $confirm, lightboxService, $loading, $qqueue) {\n    var link;\n    link = function($scope, $el, $attrs, $model) {\n      var block, unblock;\n      $el.find(\"h2.title\").text($attrs.title);\n      unblock = $qqueue.bindAdd((function(_this) {\n        return function(item, finishCallback) {\n          var promise;\n          promise = $tgrepo.save(item);\n          promise.then(function() {\n            $confirm.notify(\"success\");\n            $rootscope.$broadcast(\"history:reload\");\n            $model.$setViewValue(item);\n            return finishCallback();\n          });\n          promise.then(null, function() {\n            $confirm.notify(\"error\");\n            item.revert();\n            return $model.$setViewValue(item);\n          });\n          promise[\"finally\"](function() {\n            return finishCallback();\n          });\n          return promise;\n        };\n      })(this));\n      block = $qqueue.bindAdd((function(_this) {\n        return function(item) {\n          var promise;\n          $model.$setViewValue(item);\n          $loading.start($el.find(\".button-green\"));\n          promise = $tgrepo.save($model.$modelValue);\n          promise.then(function() {\n            $confirm.notify(\"success\");\n            return $rootscope.$broadcast(\"history:reload\");\n          });\n          promise.then(null, function() {\n            $confirm.notify(\"error\");\n            item.revert();\n            return $model.$setViewValue(item);\n          });\n          return promise[\"finally\"](function() {\n            $loading.finish($el.find(\".button-green\"));\n            return lightboxService.close($el);\n          });\n        };\n      })(this));\n      $scope.$on(\"block\", function() {\n        $el.find(\".reason\").val($model.$modelValue.blocked_note);\n        return lightboxService.open($el);\n      });\n      $scope.$on(\"unblock\", (function(_this) {\n        return function(event, model, finishCallback) {\n          var item;\n          item = $model.$modelValue.clone();\n          item.is_blocked = false;\n          item.blocked_note = \"\";\n          return unblock(item, finishCallback);\n        };\n      })(this));\n      $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n      return $el.on(\"click\", \".button-green\", function(event) {\n        var item;\n        event.preventDefault();\n        item = $model.$modelValue.clone();\n        item.is_blocked = true;\n        item.blocked_note = $el.find(\".reason\").val();\n        return block(item);\n      });\n    };\n    return {\n      templateUrl: \"common/lightbox/lightbox-block.html\",\n      link: link,\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgLbBlock\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"lightboxService\", \"$tgLoading\", \"$tgQqueue\", BlockLightboxDirective]);\n\n  BlockingMessageInputDirective = function($log, $template) {\n    var link, template, templateFn;\n    template = $template.get(\"common/lightbox/lightbox-blocking-message-input.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      if (!$attrs.watch) {\n        return $log.error(\"No watch attribute on tg-blocking-message-input directive\");\n      }\n      return $scope.$watch($attrs.watch, function(value) {\n        if (value === !void 0 && value === true) {\n          return $el.find(\".blocked-note\").removeClass(\"hidden\");\n        } else {\n          return $el.find(\".blocked-note\").addClass(\"hidden\");\n        }\n      });\n    };\n    templateFn = function($el, $attrs) {\n      return template({\n        ngmodel: $attrs.ngModel\n      });\n    };\n    return {\n      template: templateFn,\n      link: link,\n      require: \"ngModel\",\n      restrict: \"EA\"\n    };\n  };\n\n  module.directive(\"tgBlockingMessageInput\", [\"$log\", \"$tgTemplate\", BlockingMessageInputDirective]);\n\n  CreateEditUserstoryDirective = function($repo, $model, $rs, $rootScope, lightboxService, $loading) {\n    var link;\n    link = function($scope, $el, attrs) {\n      var submit, submitButton;\n      $scope.isNew = true;\n      $scope.$on(\"usform:new\", function(ctx, projectId, status, statusList) {\n        $scope.isNew = true;\n        $scope.usStatusList = statusList;\n        $scope.us = $model.make_model(\"userstories\", {\n          project: projectId,\n          points: {},\n          status: status,\n          is_archived: false,\n          tags: []\n        });\n        $el.find(\".button-green\").html(\"Create\");\n        $el.find(\".title\").html(\"New user story  \");\n        $el.find(\".tag-input\").val(\"\");\n        $el.find(\".blocked-note\").addClass(\"hidden\");\n        $el.find(\"label.blocked\").removeClass(\"selected\");\n        $el.find(\"label.team-requirement\").removeClass(\"selected\");\n        $el.find(\"label.client-requirement\").removeClass(\"selected\");\n        return lightboxService.open($el);\n      });\n      $scope.$on(\"usform:edit\", function(ctx, us) {\n        $scope.us = us;\n        $scope.isNew = false;\n        $el.find(\".button-green\").html(\"Save\");\n        $el.find(\".title\").html(\"Edit user story  \");\n        $el.find(\".tag-input\").val(\"\");\n        if (us.is_blocked) {\n          $el.find(\".blocked-note\").removeClass(\"hidden\");\n          $el.find(\"label.blocked\").addClass(\"selected\");\n        } else {\n          $el.find(\".blocked-note\").addClass(\"hidden\");\n          $el.find(\"label.blocked\").removeClass(\"selected\");\n        }\n        if (us.team_requirement) {\n          $el.find(\"label.team-requirement\").addClass(\"selected\");\n        } else {\n          $el.find(\"label.team-requirement\").removeClass(\"selected\");\n        }\n        if (us.client_requirement) {\n          $el.find(\"label.client-requirement\").addClass(\"selected\");\n        } else {\n          $el.find(\"label.client-requirement\").removeClass(\"selected\");\n        }\n        return lightboxService.open($el);\n      });\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var broadcastEvent, form, promise;\n          event.preventDefault();\n          form = $el.find(\"form\").checksley();\n          if (!form.validate()) {\n            return;\n          }\n          $loading.start(submitButton);\n          if ($scope.isNew) {\n            promise = $repo.create(\"userstories\", $scope.us);\n            broadcastEvent = \"usform:new:success\";\n          } else {\n            promise = $repo.save($scope.us);\n            broadcastEvent = \"usform:edit:success\";\n          }\n          promise.then(function(data) {\n            $loading.finish(submitButton);\n            lightboxService.close($el);\n            return $rootScope.$broadcast(broadcastEvent, data);\n          });\n          return promise.then(null, function(data) {\n            $loading.finish(submitButton);\n            form.setErrors(data);\n            if (data._error_message) {\n              return $confirm.notify(\"error\", data._error_message);\n            }\n          });\n        };\n      })(this));\n      submitButton = $el.find(\".submit-button\");\n      $el.on(\"submit\", \"form\", submit);\n      $el.on(\"click\", \".close\", function(event) {\n        event.preventDefault();\n        $scope.$apply(function() {\n          return $scope.us.revert();\n        });\n        return lightboxService.close($el);\n      });\n      $el.keydown(function(event) {\n        var code;\n        code = event.keyCode ? event.keyCode : event.which;\n        if (code === 27) {\n          lightboxService.close($el);\n          return $scope.$apply(function() {\n            return $scope.us.revert();\n          });\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLbCreateEditUserstory\", [\"$tgRepo\", \"$tgModel\", \"$tgResources\", \"$rootScope\", \"lightboxService\", \"$tgLoading\", CreateEditUserstoryDirective]);\n\n  CreateBulkUserstoriesDirective = function($repo, $rs, $rootscope, lightboxService, $loading) {\n    var link;\n    link = function($scope, $el, attrs) {\n      var submit, submitButton;\n      $scope.$on(\"usform:bulk\", function(ctx, projectId, status) {\n        $scope[\"new\"] = {\n          projectId: projectId,\n          statusId: status,\n          bulk: \"\"\n        };\n        return lightboxService.open($el);\n      });\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var form, promise;\n          event.preventDefault();\n          form = $el.find(\"form\").checksley({\n            onlyOneErrorElement: true\n          });\n          if (!form.validate()) {\n            return;\n          }\n          $loading.start(submitButton);\n          promise = $rs.userstories.bulkCreate($scope[\"new\"].projectId, $scope[\"new\"].statusId, $scope[\"new\"].bulk);\n          promise.then(function(result) {\n            $loading.finish(submitButton);\n            $rootscope.$broadcast(\"usform:bulk:success\", result);\n            return lightboxService.close($el);\n          });\n          return promise.then(null, function(data) {\n            $loading.finish(submitButton);\n            form.setErrors(data);\n            if (data._error_message) {\n              return $confirm.notify(\"error\", data._error_message);\n            }\n          });\n        };\n      })(this));\n      submitButton = $el.find(\".submit-button\");\n      $el.on(\"submit\", \"form\", submit);\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLbCreateBulkUserstories\", [\"$tgRepo\", \"$tgResources\", \"$rootScope\", \"lightboxService\", \"$tgLoading\", CreateBulkUserstoriesDirective]);\n\n  AssignedToLightboxDirective = function(lightboxService, lightboxKeyboardNavigationService, $template) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var closeLightbox, filterUsers, normalizeString, render, selectedItem, selectedUser, usersTemplate;\n      selectedUser = null;\n      selectedItem = null;\n      usersTemplate = $template.get(\"common/lightbox/lightbox-assigned-to-users.html\", true);\n      normalizeString = function(string) {\n        var normalizedString;\n        normalizedString = string;\n        normalizedString = normalizedString.replace(\"Á\", \"A\").replace(\"Ä\", \"A\").replace(\"À\", \"A\");\n        normalizedString = normalizedString.replace(\"É\", \"E\").replace(\"Ë\", \"E\").replace(\"È\", \"E\");\n        normalizedString = normalizedString.replace(\"Í\", \"I\").replace(\"Ï\", \"I\").replace(\"Ì\", \"I\");\n        normalizedString = normalizedString.replace(\"Ó\", \"O\").replace(\"Ö\", \"O\").replace(\"Ò\", \"O\");\n        normalizedString = normalizedString.replace(\"Ú\", \"U\").replace(\"Ü\", \"U\").replace(\"Ù\", \"U\");\n        return normalizedString;\n      };\n      filterUsers = function(text, user) {\n        var username;\n        username = user.full_name_display.toUpperCase();\n        username = normalizeString(username);\n        text = text.toUpperCase();\n        text = normalizeString(text);\n        return _.contains(username, text);\n      };\n      render = function(selected, text) {\n        var ctx, html, users;\n        users = _.clone($scope.activeUsers, true);\n        if (selected != null) {\n          users = _.reject(users, {\n            \"id\": selected.id\n          });\n        }\n        if (text != null) {\n          users = _.filter(users, _.partial(filterUsers, text));\n        }\n        ctx = {\n          selected: selected,\n          users: _.first(users, 5),\n          showMore: users.length > 5\n        };\n        html = usersTemplate(ctx);\n        $el.find(\"div.watchers\").html(html);\n        return lightboxKeyboardNavigationService.init($el);\n      };\n      closeLightbox = function() {\n        lightboxKeyboardNavigationService.stop();\n        return lightboxService.close($el);\n      };\n      $scope.$on(\"assigned-to:add\", function(ctx, item) {\n        var assignedToId;\n        selectedItem = item;\n        assignedToId = item.assigned_to;\n        selectedUser = $scope.usersById[assignedToId];\n        render(selectedUser);\n        return lightboxService.open($el).then(function() {\n          return $el.find('input').focus();\n        });\n      });\n      $scope.$watch(\"usersSearch\", function(searchingText) {\n        if (searchingText != null) {\n          render(selectedUser, searchingText);\n          return $el.find('input').focus();\n        }\n      });\n      $el.on(\"click\", \".watcher-single\", function(event) {\n        var target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        closeLightbox();\n        return $scope.$apply(function() {\n          $scope.$broadcast(\"assigned-to:added\", target.data(\"user-id\"), selectedItem);\n          return $scope.usersSearch = null;\n        });\n      });\n      $el.on(\"click\", \".remove-assigned-to\", function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        closeLightbox();\n        return $scope.$apply(function() {\n          $scope.usersSearch = null;\n          return $scope.$broadcast(\"assigned-to:added\", null, selectedItem);\n        });\n      });\n      $el.on(\"click\", \".close\", function(event) {\n        event.preventDefault();\n        closeLightbox();\n        return $scope.$apply(function() {\n          return $scope.usersSearch = null;\n        });\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      templateUrl: \"common/lightbox/lightbox-assigned-to.html\",\n      link: link\n    };\n  };\n\n  module.directive(\"tgLbAssignedto\", [\"lightboxService\", \"lightboxKeyboardNavigationService\", \"$tgTemplate\", AssignedToLightboxDirective]);\n\n  WatchersLightboxDirective = function($repo, lightboxService, lightboxKeyboardNavigationService, $template) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var closeLightbox, getFilteredUsers, render, selectedItem, usersTemplate;\n      selectedItem = null;\n      usersTemplate = $template.get(\"common/lightbox/lightbox-assigned-to-users.html\", true);\n      getFilteredUsers = function(text) {\n        var users, _filterUsers;\n        if (text == null) {\n          text = \"\";\n        }\n        _filterUsers = function(text, user) {\n          var username;\n          if (selectedItem && _.find(selectedItem.watchers, function(x) {\n            return x === user.id;\n          })) {\n            return false;\n          }\n          username = user.full_name_display.toUpperCase();\n          text = text.toUpperCase();\n          return _.contains(username, text);\n        };\n        users = _.clone($scope.activeUsers, true);\n        users = _.filter(users, _.partial(_filterUsers, text));\n        return users;\n      };\n      render = function(users) {\n        var ctx, html;\n        ctx = {\n          selected: false,\n          users: _.first(users, 5),\n          showMore: users.length > 5\n        };\n        html = usersTemplate(ctx);\n        return $el.find(\"div.watchers\").html(html);\n      };\n      closeLightbox = function() {\n        lightboxKeyboardNavigationService.stop();\n        return lightboxService.close($el);\n      };\n      $scope.$on(\"watcher:add\", function(ctx, item) {\n        var users;\n        selectedItem = item;\n        users = getFilteredUsers();\n        render(users);\n        lightboxService.open($el).then(function() {\n          return $el.find(\"input\").focus();\n        });\n        return lightboxKeyboardNavigationService.init($el);\n      });\n      $scope.$watch(\"usersSearch\", function(searchingText) {\n        var users;\n        if (searchingText == null) {\n          return;\n        }\n        users = getFilteredUsers(searchingText);\n        render(users);\n        return $el.find(\"input\").focus();\n      });\n      $el.on(\"click\", \".watcher-single\", debounce(2000, function(event) {\n        var target;\n        closeLightbox();\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        return $scope.$apply(function() {\n          $scope.usersSearch = null;\n          return $scope.$broadcast(\"watcher:added\", target.data(\"user-id\"));\n        });\n      }));\n      $el.on(\"click\", \".close\", function(event) {\n        event.preventDefault();\n        closeLightbox();\n        return $scope.$apply(function() {\n          return $scope.usersSearch = null;\n        });\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      templateUrl: \"common/lightbox/lightbox-users.html\",\n      link: link\n    };\n  };\n\n  module.directive(\"tgLbWatchers\", [\"$tgRepo\", \"lightboxService\", \"lightboxKeyboardNavigationService\", \"$tgTemplate\", WatchersLightboxDirective]);\n\n  NotionLightboxDirective = function(lightboxService) {\n    var link;\n    link = function($scope, $el, $attrs, $model) {\n      $scope.$on(\"notion:open\", function(event, lightboxId) {\n        if ($el.attr(\"id\") === lightboxId) {\n          return lightboxService.open($el);\n        }\n      });\n      $el.on(\"click\", \".button-green\", function(event) {\n        return lightboxService.close($el);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLbNotion\", [\"lightboxService\", NotionLightboxDirective]);\n\n  NotionButtonDirective = function($log, $rootScope) {\n    var link;\n    link = function($scope, $el, $attrs, $model) {\n      if ($attrs.tgLbNotionButton == null) {\n        return $log.error(\"NotionButtonDirective: the directive need the id of the notion lightbox\");\n      }\n      $el.on(\"click\", function() {\n        return $rootScope.$broadcast(\"notion:open\", $attrs.tgLbNotionButton);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLbNotionButton\", [\"$log\", \"$rootScope\", NotionButtonDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n * Copyright (C) 2014 Juan Francisco Alcántara <juanfran.alcantara@kaleidos.net>\n * Copyright (C) 2014 Alejandro Alonso <alejandro.alonso@kaleidos.net>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/loader.coffee\n */\n\n(function() {\n  var Loader, LoaderDirective, module, sizeFormat, taiga, timeout;\n\n  taiga = this.taiga;\n\n  sizeFormat = this.taiga.sizeFormat;\n\n  timeout = this.taiga.timeout;\n\n  module = angular.module(\"taigaCommon\");\n\n  LoaderDirective = function(tgLoader, $rootscope) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      tgLoader.onStart(function() {\n        $(document.body).addClass(\"loader-active\");\n        return $el.addClass(\"active\");\n      });\n      tgLoader.onEnd(function() {\n        $(document.body).removeClass(\"loader-active\");\n        return $el.removeClass(\"active\");\n      });\n      $rootscope.$on(\"$routeChangeSuccess\", function(e) {\n        return tgLoader.startCurrentPageLoader();\n      });\n      return $rootscope.$on(\"$locationChangeSuccess\", function(e) {\n        return tgLoader.reset();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLoader\", [\"tgLoader\", \"$rootScope\", LoaderDirective]);\n\n  Loader = function() {\n    var config, defaultConfig, forceDisabled;\n    forceDisabled = false;\n    defaultConfig = {\n      enabled: false,\n      minTime: 300\n    };\n    config = _.merge({}, defaultConfig);\n    this.add = function() {\n      return function() {\n        if (!forceDisabled) {\n          return config.enabled = true;\n        }\n      };\n    };\n    this.$get = [\n      \"$rootScope\", function($rootscope) {\n        var pageLoaded, reset, start, startLoadTime;\n        startLoadTime = 0;\n        reset = function() {\n          return config = _.merge({}, defaultConfig);\n        };\n        pageLoaded = function(force) {\n          var diff, endTime, timeoutValue;\n          if (force == null) {\n            force = false;\n          }\n          if (startLoadTime) {\n            timeoutValue = 0;\n            if (!force) {\n              endTime = new Date().getTime();\n              diff = endTime - startLoadTime;\n              if (diff < config.minTime) {\n                timeoutValue = config.minTime - diff;\n              }\n            }\n            return timeout(timeoutValue, function() {\n              return $rootscope.$broadcast(\"loader:end\");\n            });\n          }\n        };\n        start = function() {\n          startLoadTime = new Date().getTime();\n          return $rootscope.$broadcast(\"loader:start\");\n        };\n        return {\n          reset: reset,\n          pageLoaded: pageLoaded,\n          start: start,\n          startCurrentPageLoader: function() {\n            if (config.enabled) {\n              return start();\n            }\n          },\n          onStart: function(fn) {\n            return $rootscope.$on(\"loader:start\", fn);\n          },\n          onEnd: function(fn) {\n            return $rootscope.$on(\"loader:end\", fn);\n          },\n          preventLoading: function() {\n            return forceDisabled = true;\n          },\n          disablePreventLoading: function() {\n            return forceDisabled = false;\n          }\n        };\n      }\n    ];\n  };\n\n  module.provider(\"tgLoader\", [Loader]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/lightboxes.coffee\n */\n\n(function() {\n  var TgLoadingService, module,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  module = angular.module(\"taigaCommon\");\n\n  TgLoadingService = (function(_super) {\n    __extends(TgLoadingService, _super);\n\n    function TgLoadingService() {\n      return TgLoadingService.__super__.constructor.apply(this, arguments);\n    }\n\n    TgLoadingService.prototype.start = function(target) {\n      if (!target.hasClass('loading')) {\n        target.data('loading-old-content', target.html());\n        target.addClass('loading');\n        return target.html(\"<img class='loading-spinner' src='/svg/spinner-circle.svg' alt='loading...' />\");\n      }\n    };\n\n    TgLoadingService.prototype.finish = function(target) {\n      var oldContent;\n      if (target.hasClass('loading')) {\n        oldContent = target.data('loading-old-content');\n        target.data('loading-old-content', null);\n        target.html(oldContent);\n        return target.removeClass('loading');\n      }\n    };\n\n    return TgLoadingService;\n\n  })(taiga.Service);\n\n  module.service(\"$tgLoading\", TgLoadingService);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/popovers.coffee\n */\n\n(function() {\n  var RelatedTaskStatusDirective, UsStatusDirective, bindOnce, debounce, module, taiga;\n\n  taiga = this.taiga;\n\n  bindOnce = this.taiga.bindOnce;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaCommon\");\n\n  UsStatusDirective = function($repo, $template) {\n\n    /*\n    Print the status of a US and a popover to change it.\n    - tg-us-status: The user story\n    - on-update: Method call after US is updated\n    \n    Example:\n    \n      div.status(tg-us-status=\"us\" on-update=\"ctrl.loadSprintState()\")\n        a.us-status(href=\"\", title=\"Status Name\")\n    \n    NOTE: This directive need 'usStatusById' and 'project'.\n     */\n    var link, template;\n    template = $template.get(\"common/popover/popover-us-status.html\", true);\n    link = function($scope, $el, $attrs) {\n      var $ctrl, render, us;\n      $ctrl = $el.controller();\n      render = function(us) {\n        var usStatusById, usStatusDom, usStatusDomParent;\n        usStatusDomParent = $el.find(\".us-status\");\n        usStatusDom = $el.find(\".us-status .us-status-bind\");\n        usStatusById = $scope.usStatusById;\n        if (usStatusById[us.status]) {\n          usStatusDom.text(usStatusById[us.status].name);\n          return usStatusDomParent.css(\"color\", usStatusById[us.status].color);\n        }\n      };\n      $el.on(\"click\", \".us-status\", function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        return $el.find(\".pop-status\").popover().open();\n      });\n      $el.on(\"click\", \".status\", debounce(2000, function(event) {\n        var target, us;\n        event.preventDefault();\n        event.stopPropagation();\n        target = angular.element(event.currentTarget);\n        us = $scope.$eval($attrs.tgUsStatus);\n        us.status = target.data(\"status-id\");\n        render(us);\n        $el.find(\".pop-status\").popover().close();\n        return $scope.$apply(function() {\n          return $repo.save(us).then(function() {\n            return $scope.$eval($attrs.onUpdate);\n          });\n        });\n      }));\n      $scope.$on(\"userstories:loaded\", function() {\n        return render($scope.$eval($attrs.tgUsStatus));\n      });\n      $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n      us = $scope.$eval($attrs.tgUsStatus);\n      render(us);\n      return bindOnce($scope, \"project\", function(project) {\n        var html;\n        html = template({\n          \"statuses\": project.us_statuses\n        });\n        $el.append(html);\n        if ($scope.project.my_permissions.indexOf(\"modify_us\") === -1) {\n          $el.unbind(\"click\");\n          return $el.find(\"a\").addClass(\"not-clickable\");\n        }\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgUsStatus\", [\"$tgRepo\", \"$tgTemplate\", UsStatusDirective]);\n\n  RelatedTaskStatusDirective = function($repo, $template) {\n\n    /*\n    Print the status of a related task and a popover to change it.\n    - tg-related-task-status: The related task\n    - on-update: Method call after US is updated\n    \n    Example:\n    \n      div.status(tg-related-task-status=\"task\" on-update=\"ctrl.loadSprintState()\")\n        a.task-status(href=\"\", title=\"Status Name\")\n    \n    NOTE: This directive need 'taskStatusById' and 'project'.\n     */\n    var link, selectionTemplate, updateTaskStatus;\n    selectionTemplate = $template.get(\"common/popover/popover-related-task-status.html\", true);\n    updateTaskStatus = function($el, task, taskStatusById) {\n      var taskStatusDom, taskStatusDomParent;\n      taskStatusDomParent = $el.find(\".us-status\");\n      taskStatusDom = $el.find(\".task-status .task-status-bind\");\n      if (taskStatusById[task.status]) {\n        taskStatusDom.text(taskStatusById[task.status].name);\n        return taskStatusDomParent.css('color', taskStatusById[task.status].color);\n      }\n    };\n    link = function($scope, $el, $attrs) {\n      var $ctrl, autoSave, notAutoSave, task;\n      $ctrl = $el.controller();\n      task = $scope.$eval($attrs.tgRelatedTaskStatus);\n      notAutoSave = $scope.$eval($attrs.notAutoSave);\n      autoSave = !notAutoSave;\n      $el.on(\"click\", \".task-status\", function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        return $el.find(\".pop-status\").popover().open();\n      });\n      $el.on(\"click\", \".status\", debounce(2000, function(event) {\n        var target;\n        event.preventDefault();\n        event.stopPropagation();\n        target = angular.element(event.currentTarget);\n        task.status = target.data(\"status-id\");\n        $el.find(\".pop-status\").popover().close();\n        updateTaskStatus($el, task, $scope.taskStatusById);\n        if (autoSave) {\n          return $scope.$apply(function() {\n            return $repo.save(task).then(function() {\n              $scope.$eval($attrs.onUpdate);\n              return $scope.$emit(\"related-tasks:status-changed\");\n            });\n          });\n        }\n      }));\n      taiga.bindOnce($scope, \"project\", function(project) {\n        $el.append(selectionTemplate({\n          'statuses': project.task_statuses\n        }));\n        updateTaskStatus($el, task, $scope.taskStatusById);\n        if (project.my_permissions.indexOf(\"modify_task\") === -1) {\n          $el.unbind(\"click\");\n          return $el.find(\"a\").addClass(\"not-clickable\");\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgRelatedTaskStatus\", [\"$tgRepo\", \"$tgTemplate\", RelatedTaskStatusDirective]);\n\n  $.fn.popover = function() {\n    var $el, close, closeAll, closePopover, isVisible, open;\n    $el = this;\n    isVisible = (function(_this) {\n      return function() {\n        var docViewBottom, docViewLeft, docViewRight, docViewTop, docViewWidth, elemBottom, elemLeft, elemRight, elemTop, elemWidth;\n        $el.css({\n          \"display\": \"block\",\n          \"visibility\": \"hidden\"\n        });\n        docViewTop = $(window).scrollTop();\n        docViewBottom = docViewTop + $(window).height();\n        docViewWidth = $(window).width();\n        docViewRight = docViewWidth;\n        docViewLeft = 0;\n        elemTop = $el.offset().top;\n        elemBottom = elemTop + $el.height();\n        elemWidth = $el.width();\n        elemLeft = $el.offset().left;\n        elemRight = $el.offset().left + elemWidth;\n        $el.css({\n          \"display\": \"none\",\n          \"visibility\": \"visible\"\n        });\n        return (elemBottom <= docViewBottom) && (elemTop >= docViewTop) && (elemLeft >= docViewLeft) && (elemRight <= docViewRight);\n      };\n    })(this);\n    closePopover = (function(_this) {\n      return function(onClose) {\n        if (onClose) {\n          onClose.call($el);\n        }\n        $el.fadeOut(function() {\n          return $el.removeClass(\"active\").removeClass(\"fix\");\n        });\n        return $el.off(\"popup:close\");\n      };\n    })(this);\n    closeAll = (function(_this) {\n      return function() {\n        return $(\".popover.active\").each(function() {\n          return $(this).trigger(\"popup:close\");\n        });\n      };\n    })(this);\n    open = (function(_this) {\n      return function(onClose) {\n        if ($el.hasClass(\"active\")) {\n          return close();\n        } else {\n          closeAll();\n          if (!isVisible()) {\n            $el.addClass(\"fix\");\n          }\n          $el.fadeIn(function() {\n            $el.addClass(\"active\");\n            $(document.body).off(\"popover\");\n            return $(document.body).one(\"click.popover\", function() {\n              return closeAll();\n            });\n          });\n          return $el.on(\"popup:close\", function(e) {\n            return closePopover(onClose);\n          });\n        }\n      };\n    })(this);\n    close = (function(_this) {\n      return function() {\n        return $el.trigger(\"popup:close\");\n      };\n    })(this);\n    return {\n      open: open,\n      close: close,\n      closeAll: closeAll\n    };\n  };\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/raven-logger.coffee\n */\n\n(function() {\n  var ExceptionHandlerFactory, module, taiga;\n\n  taiga = this.taiga;\n\n  module = angular.module(\"taigaCommon\");\n\n  ExceptionHandlerFactory = function($log, _at_config) {\n    var ravenConfig;\n    this.config = _at_config;\n    ravenConfig = this.config.get(\"ravenConfig\", null);\n    if (ravenConfig) {\n      $log.debug(\"Using the RavenJS exception handler.\");\n      Raven.config(ravenConfig).install();\n      return function(exception, cause) {\n        $log.error.apply($log, arguments);\n        return Raven.captureException(exception);\n      };\n    } else {\n      $log.debug(\"Using the default logging exception handler.\");\n      return function(exception, cause) {\n        return $log.error.apply($log, arguments);\n      };\n    }\n  };\n\n  module.factory(\"$exceptionHandler\", [\"$log\", \"$tgConfig\", ExceptionHandlerFactory]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/tags.coffee\n */\n\n(function() {\n  var ColorizeTagsDirective, LbTagLineDirective, TagLineDirective, TagsDirective, bindOnce, module, taiga, trim,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  taiga = this.taiga;\n\n  trim = this.taiga.trim;\n\n  bindOnce = this.taiga.bindOnce;\n\n  module = angular.module(\"taigaCommon\");\n\n  TagsDirective = function() {\n    var formatter, link, parser;\n    formatter = function(v) {\n      if (_.isArray(v)) {\n        return v.join(\", \");\n      }\n      return \"\";\n    };\n    parser = function(v) {\n      var result;\n      if (!v) {\n        return [];\n      }\n      result = _(v.split(\",\")).map(function(x) {\n        return _.str.trim(x);\n      });\n      return result.value();\n    };\n    link = function($scope, $el, $attrs, $ctrl) {\n      $ctrl.$formatters.push(formatter);\n      $ctrl.$parsers.push(parser);\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      require: \"ngModel\",\n      link: link\n    };\n  };\n\n  module.directive(\"tgTags\", TagsDirective);\n\n  ColorizeTagsDirective = function() {\n    var link, templates;\n    templates = {\n      backlog: _.template(\"<% _.each(tags, function(tag) { %>\\n    <span class=\\\"tag\\\" style=\\\"border-left: 5px solid <%- tag.color %>\\\"><%- tag.name %></span>\\n<% }) %>\"),\n      kanban: _.template(\"<% _.each(tags, function(tag) { %>\\n    <a class=\\\"kanban-tag\\\" href=\\\"\\\" style=\\\"border-color: <%- tag.color %>\\\" title=\\\"<%- tag.name %>\\\" />\\n<% }) %>\"),\n      taskboard: _.template(\"<% _.each(tags, function(tag) { %>\\n    <a class=\\\"taskboard-tag\\\" href=\\\"\\\" style=\\\"border-color: <%- tag.color %>\\\" title=\\\"<%- tag.name %>\\\" />\\n<% }) %>\")\n    };\n    link = function($scope, $el, $attrs, $ctrl) {\n      var render;\n      render = function(srcTags) {\n        var html, tags, template;\n        template = templates[$attrs.tgColorizeTagsType];\n        srcTags.sort();\n        tags = _.map(srcTags, function(tag) {\n          var color;\n          color = $scope.project.tags_colors[tag];\n          return {\n            name: tag,\n            color: color\n          };\n        });\n        html = template({\n          tags: tags\n        });\n        return $el.html(html);\n      };\n      $scope.$watch($attrs.tgColorizeTags, function(tags) {\n        if (tags != null) {\n          return render(tags);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgColorizeTags\", ColorizeTagsDirective);\n\n  LbTagLineDirective = function($rs, $template) {\n    var COMMA_KEY, ENTER_KEY, link, templateTags;\n    ENTER_KEY = 13;\n    COMMA_KEY = 188;\n    templateTags = $template.get(\"common/tag/lb-tag-line-tags.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var addValue, deleteValue, hideSaveButton, removeInputLastCharacter, renderTags, resetInput, saveInputTag, showSaveButton;\n      renderTags = function(tags, tagsColors) {\n        var ctx, html;\n        ctx = {\n          tags: _.map(tags, function(t) {\n            return {\n              name: t,\n              color: tagsColors[t]\n            };\n          })\n        };\n        _.map(ctx.tags, (function(_this) {\n          return function(tag) {\n            if (tag.color) {\n              return tag.style = \"border-left: 5px solid \" + tag.color;\n            }\n          };\n        })(this));\n        html = templateTags(ctx);\n        return $el.find(\"div.tags-container\").html(html);\n      };\n      showSaveButton = function() {\n        return $el.find(\".save\").removeClass(\"hidden\");\n      };\n      hideSaveButton = function() {\n        return $el.find(\".save\").addClass(\"hidden\");\n      };\n      resetInput = function() {\n        $el.find(\"input\").val(\"\");\n        return $el.find(\"input\").autocomplete(\"close\");\n      };\n      addValue = function(value) {\n        var tags;\n        value = trim(value.toLowerCase());\n        if (value.length === 0) {\n          return;\n        }\n        tags = _.clone($model.$modelValue, false);\n        if (tags == null) {\n          tags = [];\n        }\n        if (__indexOf.call(tags, value) < 0) {\n          tags.push(value);\n        }\n        $scope.$apply(function() {\n          return $model.$setViewValue(tags);\n        });\n        return hideSaveButton();\n      };\n      deleteValue = function(value) {\n        var tags;\n        value = trim(value.toLowerCase());\n        if (value.length === 0) {\n          return;\n        }\n        tags = _.clone($model.$modelValue, false);\n        tags = _.pull(tags, value);\n        return $scope.$apply(function() {\n          return $model.$setViewValue(tags);\n        });\n      };\n      saveInputTag = function() {\n        var value;\n        value = $el.find(\"input\").val();\n        addValue(value);\n        return resetInput();\n      };\n      removeInputLastCharacter = (function(_this) {\n        return function(input) {\n          var inputValue;\n          inputValue = input.val();\n          return input.val(inputValue.substring(0, inputValue.length - 1));\n        };\n      })(this);\n      $el.on(\"keypress\", \"input\", function(event) {\n        if (event.keyCode !== ENTER_KEY) {\n          return;\n        }\n        return event.preventDefault();\n      });\n      $el.on(\"keyup\", \"input\", function(event) {\n        var target;\n        target = angular.element(event.currentTarget);\n        if (event.keyCode === ENTER_KEY) {\n          return saveInputTag();\n        } else if (event.keyCode === COMMA_KEY) {\n          removeInputLastCharacter(target);\n          return saveInputTag();\n        } else {\n          if (target.val().length) {\n            return showSaveButton();\n          } else {\n            return hideSaveButton();\n          }\n        }\n      });\n      $el.on(\"click\", \".save\", function(event) {\n        event.preventDefault();\n        return saveInputTag();\n      });\n      $el.on(\"click\", \".icon-delete\", function(event) {\n        var target, value;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        value = target.siblings(\".tag-name\").text();\n        return deleteValue(value);\n      });\n      bindOnce($scope, \"project\", function(project) {\n        var positioningFunction;\n        positioningFunction = function(position, elements) {\n          var menu;\n          menu = elements.element.element;\n          menu.css(\"width\", elements.target.width);\n          menu.css(\"top\", position.top);\n          return menu.css(\"left\", position.left);\n        };\n        return $el.find(\"input\").autocomplete({\n          source: _.keys(project.tags_colors),\n          position: {\n            my: \"left top\",\n            using: positioningFunction\n          },\n          select: function(event, ui) {\n            addValue(ui.item.value);\n            return ui.item.value = \"\";\n          }\n        });\n      });\n      $scope.$watch($attrs.ngModel, function(tags) {\n        var tagsColors, _ref;\n        tagsColors = ((_ref = $scope.project) != null ? _ref.tags_colors : void 0) || [];\n        return renderTags(tags, tagsColors);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      require: \"ngModel\",\n      templateUrl: \"common/tag/lb-tag-line.html\"\n    };\n  };\n\n  module.directive(\"tgLbTagLine\", [\"$tgResources\", \"$tgTemplate\", LbTagLineDirective]);\n\n  TagLineDirective = function($rootScope, $repo, $rs, $confirm, $qqueue, $template) {\n    var COMMA_KEY, ENTER_KEY, ESC_KEY, link, templateTags;\n    ENTER_KEY = 13;\n    ESC_KEY = 27;\n    COMMA_KEY = 188;\n    templateTags = $template.get(\"common/tag/tags-line-tags.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var addValue, deleteValue, hideAddTagButton, hideAddTagButtonText, hideInput, hideSaveButton, isEditable, removeInputLastCharacter, renderInReadModeOnly, renderTags, resetInput, saveInputTag, showAddTagButton, showAddTagButtonText, showInput, showSaveButton;\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf($attrs.requiredPerm) !== -1;\n      };\n      renderTags = function(tags, tagsColors) {\n        var ctx, html;\n        ctx = {\n          tags: _.map(tags, function(t) {\n            return {\n              name: t,\n              color: tagsColors[t]\n            };\n          }),\n          isEditable: isEditable()\n        };\n        html = templateTags(ctx);\n        return $el.find(\"div.tags-container\").html(html);\n      };\n      renderInReadModeOnly = function() {\n        $el.find(\".add-tag\").remove();\n        $el.find(\"input\").remove();\n        return $el.find(\".save\").remove();\n      };\n      showAddTagButton = function() {\n        return $el.find(\".add-tag\").removeClass(\"hidden\");\n      };\n      hideAddTagButton = function() {\n        return $el.find(\".add-tag\").addClass(\"hidden\");\n      };\n      showAddTagButtonText = function() {\n        return $el.find(\".add-tag-text\").removeClass(\"hidden\");\n      };\n      hideAddTagButtonText = function() {\n        return $el.find(\".add-tag-text\").addClass(\"hidden\");\n      };\n      showSaveButton = function() {\n        return $el.find(\".save\").removeClass(\"hidden\");\n      };\n      hideSaveButton = function() {\n        return $el.find(\".save\").addClass(\"hidden\");\n      };\n      showInput = function() {\n        return $el.find(\"input\").removeClass(\"hidden\").focus();\n      };\n      hideInput = function() {\n        return $el.find(\"input\").addClass(\"hidden\").blur();\n      };\n      resetInput = function() {\n        $el.find(\"input\").val(\"\");\n        return $el.find(\"input\").autocomplete(\"close\");\n      };\n      addValue = $qqueue.bindAdd(function(value) {\n        var model, onError, onSuccess, tags;\n        value = trim(value.toLowerCase());\n        if (value.length === 0) {\n          return;\n        }\n        tags = _.clone($model.$modelValue.tags, false);\n        if (tags == null) {\n          tags = [];\n        }\n        if (__indexOf.call(tags, value) < 0) {\n          tags.push(value);\n        }\n        model = $model.$modelValue.clone();\n        model.tags = tags;\n        $model.$setViewValue(model);\n        onSuccess = function() {\n          return $rootScope.$broadcast(\"history:reload\");\n        };\n        onError = function() {\n          $confirm.notify(\"error\");\n          model.revert();\n          return $model.$setViewValue(model);\n        };\n        $repo.save(model).then(onSuccess, onError);\n        return hideSaveButton();\n      });\n      deleteValue = $qqueue.bindAdd(function(value) {\n        var model, onError, onSuccess, tags;\n        value = trim(value.toLowerCase());\n        if (value.length === 0) {\n          return;\n        }\n        tags = _.clone($model.$modelValue.tags, false);\n        tags = _.pull(tags, value);\n        model = $model.$modelValue.clone();\n        model.tags = tags;\n        $model.$setViewValue(model);\n        onSuccess = function() {\n          return $rootScope.$broadcast(\"history:reload\");\n        };\n        onError = function() {\n          $confirm.notify(\"error\");\n          model.revert();\n          return $model.$setViewValue(model);\n        };\n        return $repo.save(model).then(onSuccess, onError);\n      });\n      saveInputTag = function() {\n        var value;\n        value = $el.find(\"input\").val();\n        addValue(value);\n        return resetInput();\n      };\n      removeInputLastCharacter = (function(_this) {\n        return function(input) {\n          var inputValue;\n          inputValue = input.val();\n          return input.val(inputValue.substring(0, inputValue.length - 1));\n        };\n      })(this);\n      $el.on(\"keypress\", \"input\", function(event) {\n        var _ref;\n        if ((_ref = event.keyCode) !== ENTER_KEY && _ref !== ESC_KEY) {\n          return;\n        }\n        return event.preventDefault();\n      });\n      $el.on(\"keyup\", \"input\", function(event) {\n        var target;\n        target = angular.element(event.currentTarget);\n        if (event.keyCode === ENTER_KEY) {\n          return saveInputTag();\n        } else if (event.keyCode === COMMA_KEY) {\n          removeInputLastCharacter(target);\n          return saveInputTag();\n        } else if (event.keyCode === ESC_KEY) {\n          resetInput();\n          hideInput();\n          hideSaveButton();\n          return showAddTagButton();\n        } else {\n          if (target.val().length) {\n            return showSaveButton();\n          } else {\n            return hideSaveButton();\n          }\n        }\n      });\n      $el.on(\"click\", \".save\", function(event) {\n        event.preventDefault();\n        return saveInputTag();\n      });\n      $el.on(\"click\", \".add-tag\", function(event) {\n        event.preventDefault();\n        hideAddTagButton();\n        return showInput();\n      });\n      $el.on(\"click\", \".icon-delete\", function(event) {\n        var target, value;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        value = target.siblings(\".tag-name\").text();\n        return deleteValue(value);\n      });\n      bindOnce($scope, \"project\", function(project) {\n        var positioningFunction;\n        if (!isEditable()) {\n          renderInReadModeOnly();\n          return;\n        }\n        showAddTagButton();\n        positioningFunction = function(position, elements) {\n          var menu;\n          menu = elements.element.element;\n          menu.css(\"width\", elements.target.width);\n          menu.css(\"top\", position.top);\n          return menu.css(\"left\", position.left);\n        };\n        return $el.find(\"input\").autocomplete({\n          source: _.keys(project.tags_colors),\n          position: {\n            my: \"left top\",\n            using: positioningFunction\n          },\n          select: function(event, ui) {\n            addValue(ui.item.value);\n            return ui.item.value = \"\";\n          }\n        });\n      });\n      $scope.$watch($attrs.ngModel, function(model) {\n        var tagsColors, _ref, _ref1;\n        if (!model) {\n          return;\n        }\n        if ((_ref = model.tags) != null ? _ref.length : void 0) {\n          hideAddTagButtonText();\n        } else {\n          showAddTagButtonText();\n        }\n        tagsColors = ((_ref1 = $scope.project) != null ? _ref1.tags_colors : void 0) || [];\n        return renderTags(model.tags, tagsColors);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      require: \"ngModel\",\n      templateUrl: \"common/tag/tag-line.html\"\n    };\n  };\n\n  module.directive(\"tgTagLine\", [\"$rootScope\", \"$tgRepo\", \"$tgResources\", \"$tgConfirm\", \"$tgQqueue\", \"$tgTemplate\", TagLineDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/wisiwyg.coffee\n */\n\n(function() {\n  var bindOnce, module, taiga, tgMarkitupDirective;\n\n  taiga = this.taiga;\n\n  bindOnce = this.taiga.bindOnce;\n\n  module = angular.module(\"taigaCommon\");\n\n  tgMarkitupDirective = function($rootscope, $rs, $tr, $selectedText, $template) {\n    var link, previewTemplate;\n    previewTemplate = $template.get(\"common/wysiwyg/wysiwyg-markitup-preview.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var closePreviewMode, element, markdownCaretPositon, markdownSettings, markdownTitle, preview, previewDomNode, removeEmptyLine, setCaretPosition;\n      element = angular.element($el);\n      previewDomNode = $(\"<div/>\", {\n        \"class\": \"preview\"\n      });\n      closePreviewMode = function() {\n        element.parents(\".markdown\").find(\".preview\").remove();\n        return element.parents(\".markItUp\").show();\n      };\n      $scope.$on(\"markdown-editor:submit\", function() {\n        return closePreviewMode();\n      });\n      preview = function() {\n        var markItUpDomNode, markdownDomNode;\n        markdownDomNode = element.parents(\".markdown\");\n        markItUpDomNode = element.parents(\".markItUp\");\n        return $rs.mdrender.render($scope.projectId, $model.$modelValue).then(function(data) {\n          var markdown;\n          markdownDomNode.append(previewTemplate({\n            data: data.data\n          }));\n          markItUpDomNode.hide();\n          markdown = element.closest(\".markdown\");\n          return markdown.on(\"mouseup.preview\", \".preview\", function(event) {\n            var target;\n            event.preventDefault();\n            target = angular.element(event.target);\n            if (!target.is('a') && $selectedText.get().length) {\n              return;\n            }\n            markdown.off(\".preview\");\n            return closePreviewMode();\n          });\n        });\n      };\n      markdownCaretPositon = false;\n      setCaretPosition = function(elm, caretPos) {\n        var range;\n        if (elm.createTextRange) {\n          range = elm.createTextRange();\n          range.move(\"character\", caretPos);\n          return range.select();\n        } else if (elm.selectionStart) {\n          elm.focus();\n          return elm.setSelectionRange(caretPos, caretPos);\n        }\n      };\n      removeEmptyLine = function(textarea, line, currentCaretPosition) {\n        var lines, removedLineLength;\n        lines = textarea.value.split(\"\\n\");\n        removedLineLength = lines[line].length;\n        lines[line] = \"\";\n        textarea.value = lines.join(\"\\n\");\n        return currentCaretPosition - removedLineLength + 1;\n      };\n      markdownSettings = {\n        nameSpace: \"markdown\",\n        onShiftEnter: {\n          keepDefault: false,\n          openWith: \"\\n\\n\"\n        },\n        onEnter: {\n          keepDefault: false,\n          replaceWith: (function(_this) {\n            return function(data) {\n              var breakLineAtBeginning, cursorLine, emptyListItem, lastLine, lines, match, newLineContent;\n              lines = data.textarea.value.split(\"\\n\");\n              cursorLine = data.textarea.value.slice(0, +(data.caretPosition - 1) + 1 || 9e9).split(\"\\n\").length;\n              newLineContent = data.textarea.value.slice(data.caretPosition).split(\"\\n\")[0];\n              lastLine = lines[cursorLine - 1];\n              match = lastLine.match(/^(\\s*- ).*/);\n              if (match) {\n                emptyListItem = lastLine.match(/^(\\s*)\\-\\s$/);\n                if (emptyListItem) {\n                  markdownCaretPositon = removeEmptyLine(data.textarea, lines.length - 1, data.caretPosition);\n                } else {\n                  breakLineAtBeginning = newLineContent.match(/^(\\s*)\\-\\s/);\n                  if (!breakLineAtBeginning) {\n                    if (match) {\n                      return \"\\n\" + match[1];\n                    }\n                  }\n                }\n              }\n              match = lastLine.match(/^(\\s*\\* ).*/);\n              if (match) {\n                emptyListItem = lastLine.match(/^(\\s*\\* )$/);\n                if (emptyListItem) {\n                  markdownCaretPositon = removeEmptyLine(data.textarea, lines.length - 1, data.caretPosition);\n                } else {\n                  breakLineAtBeginning = newLineContent.match(/^(\\s*)\\*\\s/);\n                  if (!breakLineAtBeginning) {\n                    if (match) {\n                      return \"\\n\" + match[1];\n                    }\n                  }\n                }\n              }\n              match = lastLine.match(/^(\\s*)(\\d+)\\.\\s/);\n              if (match) {\n                emptyListItem = lastLine.match(/^(\\s*)(\\d+)\\.\\s$/);\n                if (emptyListItem) {\n                  markdownCaretPositon = removeEmptyLine(data.textarea, lines.length - 1, data.caretPosition);\n                } else {\n                  breakLineAtBeginning = newLineContent.match(/^(\\s*)(\\d+)\\.\\s/);\n                  if (!breakLineAtBeginning) {\n                    return \"\\n\" + (match[1] + (parseInt(match[2], 10) + 1)) + \". \";\n                  }\n                }\n              }\n              return \"\\n\";\n            };\n          })(this),\n          afterInsert: function(data) {\n            var caretPosition, line, scrollRelation, totalLines;\n            if (markdownCaretPositon) {\n              setCaretPosition(data.textarea, markdownCaretPositon);\n              caretPosition = markdownCaretPositon;\n              markdownCaretPositon = false;\n            } else {\n              caretPosition = data.caretPosition;\n            }\n            totalLines = data.textarea.value.split(\"\\n\").length;\n            line = data.textarea.value.slice(0, +(caretPosition - 1) + 1 || 9e9).split(\"\\n\").length;\n            scrollRelation = line / totalLines;\n            return $el.scrollTop((scrollRelation * $el[0].scrollHeight) - ($el.height() / 2));\n          }\n        },\n        markupSet: [\n          {\n            name: $tr.t(\"markdown-editor.heading-1\"),\n            key: \"1\",\n            placeHolder: $tr.t(\"markdown-editor.placeholder\"),\n            closeWith: function(markItUp) {\n              return markdownTitle(markItUp, \"=\");\n            }\n          }, {\n            name: $tr.t(\"markdown-editor.heading-2\"),\n            key: \"2\",\n            placeHolder: $tr.t(\"markdown-editor.placeholder\"),\n            closeWith: function(markItUp) {\n              return markdownTitle(markItUp, \"-\");\n            }\n          }, {\n            name: $tr.t(\"markdown-editor.heading-3\"),\n            key: \"3\",\n            openWith: \"### \",\n            placeHolder: $tr.t(\"markdown-editor.placeholder\")\n          }, {\n            separator: \"---------------\"\n          }, {\n            name: $tr.t(\"markdown-editor.bold\"),\n            key: \"B\",\n            openWith: \"**\",\n            closeWith: \"**\"\n          }, {\n            name: $tr.t(\"markdown-editor.italic\"),\n            key: \"I\",\n            openWith: \"_\",\n            closeWith: \"_\"\n          }, {\n            name: $tr.t(\"markdown-editor.strike\"),\n            key: \"S\",\n            openWith: \"~~\",\n            closeWith: \"~~\"\n          }, {\n            separator: \"---------------\"\n          }, {\n            name: $tr.t(\"markdown-editor.bulleted-list\"),\n            openWith: \"- \"\n          }, {\n            name: $tr.t(\"markdown-editor.numeric-list\"),\n            openWith: function(markItUp) {\n              return markItUp.line + \". \";\n            }\n          }, {\n            separator: \"---------------\"\n          }, {\n            name: $tr.t(\"markdown-editor.picture\"),\n            key: \"P\",\n            replaceWith: '![[![Alternative text]!]]([![Url:!:http://]!] \"[![Title]!]\")'\n          }, {\n            name: $tr.t(\"markdown-editor.link\"),\n            key: \"L\",\n            openWith: \"[\",\n            closeWith: ']([![Url:!:http://]!] \"[![Title]!]\")',\n            placeHolder: $tr.t(\"markdown-editor.link-placeholder\")\n          }, {\n            separator: \"---------------\"\n          }, {\n            name: $tr.t(\"markdown-editor.quotes\"),\n            openWith: \"> \"\n          }, {\n            name: $tr.t(\"markdown-editor.code-block\"),\n            openWith: \"```\\n\",\n            closeWith: \"\\n```\"\n          }, {\n            separator: \"---------------\"\n          }, {\n            name: $tr.t(\"markdown-editor.preview\"),\n            call: preview,\n            className: \"preview-icon\"\n          }\n        ],\n        afterInsert: function(event) {\n          var target;\n          target = angular.element(event.textarea);\n          return $model.$setViewValue(target.val());\n        }\n      };\n      markdownTitle = function(markItUp, char) {\n        var heading, i, n, _i, _ref;\n        heading = \"\";\n        n = $.trim(markItUp.selection || markItUp.placeHolder).length;\n        for (i = _i = 0, _ref = n - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          heading += char;\n        }\n        return \"\\n\" + heading + \"\\n\";\n      };\n      element.markItUp(markdownSettings);\n      element.on(\"keypress\", function(event) {\n        return $scope.$apply();\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgMarkitup\", [\"$rootScope\", \"$tgResources\", \"$tgI18n\", \"$selectedText\", \"$tgTemplate\", tgMarkitupDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/backlog/main.coffee\n */\n\n(function() {\n  var BacklogFiltersDirective, bindOnce, debounceLeading, groupBy, mixOf, module, scopeDefer, taiga, toggleText;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  toggleText = this.taiga.toggleText;\n\n  scopeDefer = this.taiga.scopeDefer;\n\n  bindOnce = this.taiga.bindOnce;\n\n  groupBy = this.taiga.groupBy;\n\n  debounceLeading = this.taiga.debounceLeading;\n\n  module = angular.module(\"taigaBacklog\");\n\n  BacklogFiltersDirective = function($log, $location, $templates) {\n    var link, template, templateSelected;\n    template = $templates.get(\"backlog/filters.html\", true);\n    templateSelected = $templates.get(\"backlog/filter-selected.html\", true);\n    link = function($scope, $el, $attrs) {\n      var $ctrl, initializeSelectedFilters, renderFilters, renderSelectedFilters, selectQFilter, selectedFilters, showCategories, showFilters, toggleFilterSelection;\n      $ctrl = $el.closest(\".wrapper\").controller();\n      selectedFilters = [];\n      showFilters = function(title, type) {\n        $el.find(\".filters-cats\").hide();\n        $el.find(\".filter-list\").removeClass(\"hidden\");\n        $el.find(\"h2.breadcrumb\").removeClass(\"hidden\");\n        $el.find(\"h2 a.subfilter span.title\").html(title);\n        return $el.find(\"h2 a.subfilter span.title\").prop(\"data-type\", type);\n      };\n      showCategories = function() {\n        $el.find(\".filters-cats\").show();\n        $el.find(\".filter-list\").addClass(\"hidden\");\n        return $el.find(\"h2.breadcrumb\").addClass(\"hidden\");\n      };\n      initializeSelectedFilters = function(filters) {\n        var name, val, values, _i, _len;\n        showCategories();\n        selectedFilters = [];\n        for (name in filters) {\n          values = filters[name];\n          for (_i = 0, _len = values.length; _i < _len; _i++) {\n            val = values[_i];\n            if (val.selected) {\n              selectedFilters.push(val);\n            }\n          }\n        }\n        return renderSelectedFilters();\n      };\n      renderSelectedFilters = function() {\n        var html;\n        _.map(selectedFilters, (function(_this) {\n          return function(f) {\n            if (f.color) {\n              return f.style = \"border-left: 3px solid \" + f.color;\n            }\n          };\n        })(this));\n        html = templateSelected({\n          filters: selectedFilters\n        });\n        return $el.find(\".filters-applied\").html(html);\n      };\n      renderFilters = function(filters) {\n        var html;\n        _.map(filters, (function(_this) {\n          return function(f) {\n            if (f.color) {\n              return f.style = \"border-left: 3px solid \" + f.color;\n            }\n          };\n        })(this));\n        html = template({\n          filters: filters\n        });\n        return $el.find(\".filter-list\").html(html);\n      };\n      toggleFilterSelection = function(type, id) {\n        var currentFiltersType, filter, filters;\n        filters = $scope.filters[type];\n        filter = _.find(filters, {\n          id: taiga.toString(id)\n        });\n        filter.selected = !filter.selected;\n        if (filter.selected) {\n          selectedFilters.push(filter);\n          $scope.$apply(function() {\n            $ctrl.selectFilter(type, id);\n            return $ctrl.filterVisibleUserstories();\n          });\n        } else {\n          selectedFilters = _.reject(selectedFilters, filter);\n          $scope.$apply(function() {\n            $ctrl.unselectFilter(type, id);\n            return $ctrl.filterVisibleUserstories();\n          });\n        }\n        renderSelectedFilters(selectedFilters);\n        currentFiltersType = $el.find(\"h2 a.subfilter span.title\").prop('data-type');\n        if (type === currentFiltersType) {\n          renderFilters(_.reject(filters, \"selected\"));\n        }\n        return $ctrl.loadUserstories();\n      };\n      selectQFilter = debounceLeading(100, function(value) {\n        if (value === void 0) {\n          return;\n        }\n        if (value.length === 0) {\n          $ctrl.replaceFilter(\"q\", null);\n        } else {\n          $ctrl.replaceFilter(\"q\", value);\n        }\n        return $ctrl.loadUserstories();\n      });\n      $scope.$watch(\"filtersQ\", selectQFilter);\n      $scope.$on(\"filters:loaded\", function(ctx, filters) {\n        return initializeSelectedFilters(filters);\n      });\n      $el.on(\"click\", \".filters-cats > ul > li > a\", function(event) {\n        var tags, target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        tags = $scope.filters[target.data(\"type\")];\n        renderFilters(_.reject(tags, \"selected\"));\n        return showFilters(target.attr(\"title\"), target.data(\"type\"));\n      });\n      $el.on(\"click\", \".filters-inner > .filters-step-cat > .breadcrumb > .back\", function(event) {\n        event.preventDefault();\n        return showCategories();\n      });\n      $el.on(\"click\", \".filters-applied a\", function(event) {\n        var id, target, type;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        id = target.data(\"id\");\n        type = target.data(\"type\");\n        return toggleFilterSelection(type, id);\n      });\n      return $el.on(\"click\", \".filter-list .single-filter\", function(event) {\n        var id, target, type;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        if (target.hasClass(\"active\")) {\n          target.removeClass(\"active\");\n        } else {\n          target.addClass(\"active\");\n        }\n        id = target.data(\"id\");\n        type = target.data(\"type\");\n        return toggleFilterSelection(type, id);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgBacklogFilters\", [\"$log\", \"$tgLocation\", \"$tgTemplate\", BacklogFiltersDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/backlog/lightboxes.coffee\n */\n\n(function() {\n  var CreateEditSprint, bindOnce, debounce, module, taiga;\n\n  taiga = this.taiga;\n\n  bindOnce = this.taiga.bindOnce;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaBacklog\");\n\n  CreateEditSprint = function($repo, $confirm, $rs, $rootscope, lightboxService, $loading) {\n    var link;\n    link = function($scope, $el, attrs) {\n      var createSprint, hasErrors, remove, submit, submitButton;\n      hasErrors = false;\n      createSprint = true;\n      $scope.sprint = {\n        project: null,\n        name: null,\n        estimated_start: null,\n        estimated_finish: null\n      };\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var broadcastEvent, form, newSprint, promise, target;\n          event.preventDefault();\n          target = angular.element(event.currentTarget);\n          form = $el.find(\"form\").checksley();\n          if (!form.validate()) {\n            hasErrors = true;\n            $el.find(\".last-sprint-name\").addClass(\"disappear\");\n            return;\n          }\n          hasErrors = false;\n          newSprint = angular.copy($scope.sprint);\n          broadcastEvent = null;\n          if (createSprint) {\n            newSprint.estimated_start = moment(newSprint.estimated_start).format(\"YYYY-MM-DD\");\n            newSprint.estimated_finish = moment(newSprint.estimated_finish).format(\"YYYY-MM-DD\");\n            promise = $repo.create(\"milestones\", newSprint);\n            broadcastEvent = \"sprintform:create:success\";\n          } else {\n            newSprint.setAttr(\"estimated_start\", moment(newSprint.estimated_start).format(\"YYYY-MM-DD\"));\n            newSprint.setAttr(\"estimated_finish\", moment(newSprint.estimated_finish).format(\"YYYY-MM-DD\"));\n            promise = $repo.save(newSprint);\n            broadcastEvent = \"sprintform:edit:success\";\n          }\n          $loading.start(submitButton);\n          promise.then(function(data) {\n            $loading.finish(submitButton);\n            if (createSprint) {\n              $scope.sprintsCounter += 1;\n            }\n            $rootscope.$broadcast(broadcastEvent, data);\n            return lightboxService.close($el);\n          });\n          return promise.then(null, function(data) {\n            $loading.finish(submitButton);\n            form.setErrors(data);\n            if (data._error_message) {\n              return $confirm.notify(\"light-error\", data._error_message);\n            } else if (data.__all__) {\n              return $confirm.notify(\"light-error\", data.__all__[0]);\n            }\n          });\n        };\n      })(this));\n      remove = function() {\n        var message, title;\n        title = \"Delete sprint\";\n        message = $scope.sprint.name;\n        return $confirm.askOnDelete(title, message).then((function(_this) {\n          return function(finish) {\n            var onError, onSuccess;\n            onSuccess = function() {\n              finish();\n              $scope.milestonesCounter -= 1;\n              lightboxService.close($el);\n              return $rootscope.$broadcast(\"sprintform:remove:success\");\n            };\n            onError = function() {\n              finish(false);\n              return $confirm.notify(\"error\");\n            };\n            return $repo.remove($scope.sprint).then(onSuccess, onError);\n          };\n        })(this));\n      };\n      $scope.$on(\"sprintform:create\", function(event, projectId) {\n        var estimatedFinish, estimatedStart, lastSprint, lastSprintNameDom;\n        createSprint = true;\n        $scope.sprint.project = projectId;\n        $scope.sprint.name = null;\n        $scope.sprint.slug = null;\n        lastSprint = $scope.sprints[0];\n        estimatedStart = moment();\n        if ($scope.sprint.estimated_start) {\n          estimatedStart = moment($scope.sprint.estimated_start);\n        } else if (lastSprint != null) {\n          estimatedStart = moment(lastSprint.estimated_finish);\n        }\n        $scope.sprint.estimated_start = estimatedStart.format(\"DD MMM YYYY\");\n        estimatedFinish = moment().add(2, \"weeks\");\n        if ($scope.sprint.estimated_finish) {\n          estimatedFinish = moment($scope.sprint.estimated_finish);\n        } else if (lastSprint != null) {\n          estimatedFinish = moment(lastSprint.estimated_finish).add(2, \"weeks\");\n        }\n        $scope.sprint.estimated_finish = estimatedFinish.format(\"DD MMM YYYY\");\n        lastSprintNameDom = $el.find(\".last-sprint-name\");\n        if ((lastSprint != null ? lastSprint.name : void 0) != null) {\n          lastSprintNameDom.html(\" last sprint is <strong> \" + lastSprint.name + \" ;-) </strong>\");\n        }\n        $el.find(\".delete-sprint\").addClass(\"hidden\");\n        $el.find(\".title\").text(\"New sprint\");\n        $el.find(\".button-green\").text(\"Create\");\n        lightboxService.open($el);\n        $el.find(\".sprint-name\").focus();\n        return $el.find(\".last-sprint-name\").removeClass(\"disappear\");\n      });\n      $scope.$on(\"sprintform:edit\", function(ctx, sprint) {\n        createSprint = false;\n        $scope.$apply(function() {\n          $scope.sprint = sprint;\n          $scope.sprint.estimated_start = moment($scope.sprint.estimated_start).format(\"DD MMM YYYY\");\n          return $scope.sprint.estimated_finish = moment($scope.sprint.estimated_finish).format(\"DD MMM YYYY\");\n        });\n        $el.find(\".delete-sprint\").removeClass(\"hidden\");\n        $el.find(\".title\").text(\"Edit sprint\");\n        $el.find(\".button-green\").text(\"Save\");\n        lightboxService.open($el);\n        $el.find(\".sprint-name\").focus().select();\n        return $el.find(\".last-sprint-name\").addClass(\"disappear\");\n      });\n      $el.on(\"keyup\", \".sprint-name\", function(event) {\n        if ($el.find(\".sprint-name\").val().length > 0 || hasErrors) {\n          return $el.find(\".last-sprint-name\").addClass(\"disappear\");\n        } else {\n          return $el.find(\".last-sprint-name\").removeClass(\"disappear\");\n        }\n      });\n      submitButton = $el.find(\".submit-button\");\n      $el.on(\"submit\", \"form\", submit);\n      $el.on(\"click\", \".delete-sprint .icon-delete\", function(event) {\n        event.preventDefault();\n        return remove();\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLbCreateEditSprint\", [\"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$rootScope\", \"lightboxService\", \"$tgLoading\", CreateEditSprint]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/backlog/main.coffee\n */\n\n(function() {\n  var BacklogController, BacklogDirective, TgBacklogProgressBarDirective, UsPointsDirective, UsRolePointsSelectorDirective, bindMethods, bindOnce, groupBy, mixOf, module, scopeDefer, taiga, tgBacklogGraphDirective, timeout, toggleText,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  toggleText = this.taiga.toggleText;\n\n  scopeDefer = this.taiga.scopeDefer;\n\n  bindOnce = this.taiga.bindOnce;\n\n  groupBy = this.taiga.groupBy;\n\n  timeout = this.taiga.timeout;\n\n  bindMethods = this.taiga.bindMethods;\n\n  module = angular.module(\"taigaBacklog\");\n\n  BacklogController = (function(_super) {\n    __extends(BacklogController, _super);\n\n    BacklogController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$appTitle\", \"$tgNavUrls\", \"$tgEvents\", \"$tgAnalytics\", \"tgLoader\"];\n\n    function BacklogController(_at_scope, _at_rootscope, _at_repo, _at_confirm, _at_rs, _at_params, _at_q, _at_location, _at_appTitle, _at_navUrls, _at_events, _at_analytics, tgLoader) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.appTitle = _at_appTitle;\n      this.navUrls = _at_navUrls;\n      this.events = _at_events;\n      this.analytics = _at_analytics;\n      bindMethods(this);\n      this.scope.sectionName = \"Backlog\";\n      this.showTags = false;\n      this.activeFilters = false;\n      this.initializeEventHandlers();\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          _this.appTitle.set(\"Backlog - \" + _this.scope.project.name);\n          if (_this.rs.userstories.getShowTags(_this.scope.projectId)) {\n            _this.showTags = true;\n            return _this.scope.$broadcast(\"showTags\", _this.showTags);\n          }\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      promise[\"finally\"](tgLoader.pageLoaded);\n    }\n\n    BacklogController.prototype.initializeEventHandlers = function() {\n      this.scope.$on(\"usform:bulk:success\", (function(_this) {\n        return function() {\n          _this.loadUserstories();\n          _this.loadProjectStats();\n          return _this.analytics.trackEvent(\"userstory\", \"create\", \"bulk create userstory on backlog\", 1);\n        };\n      })(this));\n      this.scope.$on(\"sprintform:create:success\", (function(_this) {\n        return function() {\n          _this.loadSprints();\n          _this.loadProjectStats();\n          return _this.analytics.trackEvent(\"sprint\", \"create\", \"create sprint on backlog\", 1);\n        };\n      })(this));\n      this.scope.$on(\"usform:new:success\", (function(_this) {\n        return function() {\n          _this.loadUserstories();\n          _this.loadProjectStats();\n          return _this.analytics.trackEvent(\"userstory\", \"create\", \"create userstory on backlog\", 1);\n        };\n      })(this));\n      this.scope.$on(\"sprintform:edit:success\", (function(_this) {\n        return function() {\n          return _this.loadProjectStats();\n        };\n      })(this));\n      this.scope.$on(\"sprintform:remove:success\", (function(_this) {\n        return function() {\n          _this.loadSprints();\n          _this.loadProjectStats();\n          return _this.loadUserstories();\n        };\n      })(this));\n      this.scope.$on(\"usform:edit:success\", (function(_this) {\n        return function() {\n          return _this.loadUserstories();\n        };\n      })(this));\n      this.scope.$on(\"sprint:us:move\", this.moveUs);\n      this.scope.$on(\"sprint:us:moved\", this.loadSprints);\n      this.scope.$on(\"sprint:us:moved\", this.loadProjectStats);\n      this.scope.$on(\"backlog:load-closed-sprints\", this.loadClosedSprints);\n      return this.scope.$on(\"backlog:unload-closed-sprints\", this.unloadClosedSprints);\n    };\n\n    BacklogController.prototype.initializeSubscription = function() {\n      var routingKey1, routingKey2;\n      routingKey1 = \"changes.project.\" + this.scope.projectId + \".userstories\";\n      this.events.subscribe(this.scope, routingKey1, (function(_this) {\n        return function(message) {\n          _this.loadUserstories();\n          return _this.loadSprints();\n        };\n      })(this));\n      routingKey2 = \"changes.project.\" + this.scope.projectId + \".milestones\";\n      return this.events.subscribe(this.scope, routingKey2, (function(_this) {\n        return function(message) {\n          return _this.loadSprints();\n        };\n      })(this));\n    };\n\n    BacklogController.prototype.toggleShowTags = function() {\n      return this.scope.$apply((function(_this) {\n        return function() {\n          _this.showTags = !_this.showTags;\n          return _this.rs.userstories.storeShowTags(_this.scope.projectId, _this.showTags);\n        };\n      })(this));\n    };\n\n    BacklogController.prototype.toggleActiveFilters = function() {\n      return this.activeFilters = !this.activeFilters;\n    };\n\n    BacklogController.prototype.loadProjectStats = function() {\n      return this.rs.projects.stats(this.scope.projectId).then((function(_this) {\n        return function(stats) {\n          _this.scope.stats = stats;\n          if (stats.total_points) {\n            _this.scope.stats.completedPercentage = Math.round(100 * stats.closed_points / stats.total_points);\n          } else {\n            _this.scope.stats.completedPercentage = 0;\n          }\n          return stats;\n        };\n      })(this));\n    };\n\n    BacklogController.prototype.refreshTagsColors = function() {\n      return this.rs.projects.tagsColors(this.scope.projectId).then((function(_this) {\n        return function(tags_colors) {\n          return _this.scope.project.tags_colors = tags_colors;\n        };\n      })(this));\n    };\n\n    BacklogController.prototype.unloadClosedSprints = function() {\n      return this.scope.$apply((function(_this) {\n        return function() {\n          _this.scope.closedSprints = [];\n          return _this.rootscope.$broadcast(\"closed-sprints:reloaded\", []);\n        };\n      })(this));\n    };\n\n    BacklogController.prototype.loadClosedSprints = function() {\n      var params;\n      params = {\n        closed: true\n      };\n      return this.rs.sprints.list(this.scope.projectId, params).then((function(_this) {\n        return function(sprints) {\n          var sprint, _i, _len;\n          for (_i = 0, _len = sprints.length; _i < _len; _i++) {\n            sprint = sprints[_i];\n            sprint.user_stories = _.sortBy(sprint.user_stories, \"sprint_order\");\n          }\n          _this.scope.closedSprints = sprints;\n          _this.rootscope.$broadcast(\"closed-sprints:reloaded\", sprints);\n          return sprints;\n        };\n      })(this));\n    };\n\n    BacklogController.prototype.loadSprints = function() {\n      var params;\n      params = {\n        closed: false\n      };\n      return this.rs.sprints.list(this.scope.projectId, params).then((function(_this) {\n        return function(sprints) {\n          var sprint, _i, _len;\n          for (_i = 0, _len = sprints.length; _i < _len; _i++) {\n            sprint = sprints[_i];\n            sprint.user_stories = _.sortBy(sprint.user_stories, \"sprint_order\");\n          }\n          _this.scope.sprints = sprints;\n          _this.scope.openSprints = _.filter(sprints, function(sprint) {\n            return !sprint.closed;\n          }).reverse();\n          _this.scope.closedSprints = [];\n          _this.scope.sprintsCounter = sprints.length;\n          _this.scope.sprintsById = groupBy(sprints, function(x) {\n            return x.id;\n          });\n          _this.rootscope.$broadcast(\"sprints:loaded\", sprints);\n          return sprints;\n        };\n      })(this));\n    };\n\n    BacklogController.prototype.resetFilters = function() {\n      var selectedStatuses, selectedTags;\n      selectedTags = _.filter(this.scope.filters.tags, \"selected\");\n      selectedStatuses = _.filter(this.scope.filters.statuses, \"selected\");\n      this.scope.filtersQ = \"\";\n      _.each([selectedTags, selectedStatuses], (function(_this) {\n        return function(filterGrp) {\n          return _.each(filterGrp, function(item) {\n            var filter, filters;\n            filters = _this.scope.filters[item.type];\n            filter = _.find(filters, {\n              id: taiga.toString(item.id)\n            });\n            filter.selected = false;\n            return _this.unselectFilter(item.type, item.id);\n          });\n        };\n      })(this));\n      return this.loadUserstories();\n    };\n\n    BacklogController.prototype.loadUserstories = function() {\n      var promise;\n      this.scope.httpParams = this.getUrlFilters();\n      this.rs.userstories.storeQueryParams(this.scope.projectId, this.scope.httpParams);\n      promise = this.q.all([this.refreshTagsColors(), this.rs.userstories.listUnassigned(this.scope.projectId, this.scope.httpParams)]);\n      return promise.then((function(_this) {\n        return function(data) {\n          var userstories;\n          userstories = data[1];\n          _this.scope.userstories = _.sortBy(userstories, \"backlog_order\");\n          _this.generateFilters();\n          _this.filterVisibleUserstories();\n          _this.rootscope.$broadcast(\"filters:loaded\", _this.scope.filters);\n          scopeDefer(_this.scope, function() {\n            return _this.scope.$broadcast(\"userstories:loaded\");\n          });\n          return userstories;\n        };\n      })(this));\n    };\n\n    BacklogController.prototype.loadBacklog = function() {\n      return this.q.all([this.loadProjectStats(), this.loadSprints(), this.loadUserstories()]);\n    };\n\n    BacklogController.prototype.loadProject = function() {\n      return this.rs.projects.getBySlug(this.params.pslug).then((function(_this) {\n        return function(project) {\n          _this.scope.projectId = project.id;\n          _this.scope.project = project;\n          _this.scope.totalClosedMilestones = project.total_closed_milestones;\n          _this.scope.$emit('project:loaded', project);\n          _this.scope.points = _.sortBy(project.points, \"order\");\n          _this.scope.pointsById = groupBy(project.points, function(x) {\n            return x.id;\n          });\n          _this.scope.usStatusById = groupBy(project.us_statuses, function(x) {\n            return x.id;\n          });\n          _this.scope.usStatusList = _.sortBy(project.us_statuses, \"id\");\n          return project;\n        };\n      })(this));\n    };\n\n    BacklogController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.loadProject();\n      promise.then((function(_this) {\n        return function(project) {\n          _this.fillUsersAndRoles(project.users, project.roles);\n          return _this.initializeSubscription();\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadBacklog();\n        };\n      })(this));\n    };\n\n    BacklogController.prototype.filterVisibleUserstories = function() {\n      var selectedStatuses, selectedTags;\n      this.scope.visibleUserstories = [];\n      selectedTags = _.filter(this.scope.filters.tags, \"selected\");\n      selectedTags = _.map(selectedTags, \"name\");\n      if (selectedTags.length === 0) {\n        this.scope.visibleUserstories = _.clone(this.scope.userstories, false);\n      } else {\n        this.scope.visibleUserstories = _.reject(this.scope.userstories, (function(_this) {\n          return function(us) {\n            if (_.intersection(selectedTags, us.tags).length === 0) {\n              return true;\n            }\n            return false;\n          };\n        })(this));\n      }\n      selectedStatuses = _.filter(this.scope.filters.statuses, \"selected\");\n      selectedStatuses = _.map(selectedStatuses, \"id\");\n      if (selectedStatuses.length > 0) {\n        this.scope.visibleUserstories = _.reject(this.scope.visibleUserstories, (function(_this) {\n          return function(us) {\n            var res;\n            res = _.find(selectedStatuses, function(x) {\n              return x === taiga.toString(us.status);\n            });\n            return !res;\n          };\n        })(this));\n      }\n      return this.rs.userstories.storeQueryParams(this.scope.projectId, {\n        \"status\": selectedStatuses,\n        \"tags\": selectedTags,\n        \"project\": this.scope.projectId,\n        \"milestone\": null\n      });\n    };\n\n    BacklogController.prototype.prepareBulkUpdateData = function(uses, field) {\n      if (field == null) {\n        field = \"backlog_order\";\n      }\n      return _.map(uses, function(x) {\n        return {\n          \"us_id\": x.id,\n          \"order\": x[field]\n        };\n      });\n    };\n\n    BacklogController.prototype.resortUserStories = function(uses, field) {\n      var index, item, items, _i, _len;\n      if (field == null) {\n        field = \"backlog_order\";\n      }\n      items = [];\n      for (index = _i = 0, _len = uses.length; _i < _len; index = ++_i) {\n        item = uses[index];\n        item[field] = index;\n        if (item.isModified()) {\n          items.push(item);\n        }\n      }\n      return items;\n    };\n\n    BacklogController.prototype.moveUs = function(ctx, usList, newUsIndex, newSprintId) {\n      var data, items, newSprint, oldSprintId, project, promise, promises, us, userstories, _i, _j, _k, _len, _len1, _len2;\n      oldSprintId = usList[0].milestone;\n      project = usList[0].project;\n      if (newSprintId === oldSprintId) {\n        items = null;\n        userstories = null;\n        if (newSprintId === null) {\n          userstories = this.scope.userstories;\n        } else {\n          userstories = this.scope.sprintsById[newSprintId].user_stories;\n        }\n        this.scope.$apply(function() {\n          var args, key, r, us, _i, _len;\n          for (key = _i = 0, _len = usList.length; _i < _len; key = ++_i) {\n            us = usList[key];\n            r = userstories.indexOf(us);\n            userstories.splice(r, 1);\n          }\n          args = [newUsIndex, 0].concat(usList);\n          return Array.prototype.splice.apply(userstories, args);\n        });\n        if (newSprintId === null) {\n          items = this.resortUserStories(userstories, \"backlog_order\");\n          data = this.prepareBulkUpdateData(items, \"backlog_order\");\n          this.rs.userstories.bulkUpdateBacklogOrder(project, data).then((function(_this) {\n            return function() {\n              var us, _i, _len, _results;\n              _results = [];\n              for (_i = 0, _len = usList.length; _i < _len; _i++) {\n                us = usList[_i];\n                _results.push(_this.rootscope.$broadcast(\"sprint:us:moved\", us, oldSprintId, newSprintId));\n              }\n              return _results;\n            };\n          })(this));\n        } else {\n          items = this.resortUserStories(userstories, \"sprint_order\");\n          data = this.prepareBulkUpdateData(items, \"sprint_order\");\n          this.rs.userstories.bulkUpdateSprintOrder(project, data).then((function(_this) {\n            return function() {\n              var us, _i, _len, _results;\n              _results = [];\n              for (_i = 0, _len = usList.length; _i < _len; _i++) {\n                us = usList[_i];\n                _results.push(_this.rootscope.$broadcast(\"sprint:us:moved\", us, oldSprintId, newSprintId));\n              }\n              return _results;\n            };\n          })(this));\n        }\n        return promise;\n      }\n      if (newSprintId === null) {\n        for (_i = 0, _len = usList.length; _i < _len; _i++) {\n          us = usList[_i];\n          us.milestone = null;\n        }\n        this.scope.$apply((function(_this) {\n          return function() {\n            var args, key, r, sprint, _j, _len1, _results;\n            args = [newUsIndex, 0].concat(usList);\n            Array.prototype.splice.apply(_this.scope.userstories, args);\n            Array.prototype.splice.apply(_this.scope.visibleUserstories, args);\n            _this.filterVisibleUserstories();\n            sprint = _this.scope.sprintsById[oldSprintId];\n            _results = [];\n            for (key = _j = 0, _len1 = usList.length; _j < _len1; key = ++_j) {\n              us = usList[key];\n              r = sprint.user_stories.indexOf(us);\n              _results.push(sprint.user_stories.splice(r, 1));\n            }\n            return _results;\n          };\n        })(this));\n        promise = this.repo.save(us);\n        promise = promise.then((function(_this) {\n          return function() {\n            items = _this.resortUserStories(_this.scope.userstories, \"backlog_order\");\n            data = _this.prepareBulkUpdateData(items, \"backlog_order\");\n            return _this.rs.userstories.bulkUpdateBacklogOrder(us.project, data).then(function() {\n              return _this.rootscope.$broadcast(\"sprint:us:moved\", us, oldSprintId, newSprintId);\n            });\n          };\n        })(this));\n        promise.then(null, function() {\n          return console.log(\"FAIL\");\n        });\n        return promise;\n      }\n      newSprint = this.scope.sprintsById[newSprintId];\n      if (oldSprintId === null) {\n        for (_j = 0, _len1 = usList.length; _j < _len1; _j++) {\n          us = usList[_j];\n          us.milestone = newSprintId;\n        }\n        this.scope.$apply((function(_this) {\n          return function() {\n            var args, key, r, _k, _len2, _results;\n            args = [newUsIndex, 0].concat(usList);\n            Array.prototype.splice.apply(newSprint.user_stories, args);\n            _results = [];\n            for (key = _k = 0, _len2 = usList.length; _k < _len2; key = ++_k) {\n              us = usList[key];\n              r = _this.scope.visibleUserstories.indexOf(us);\n              _this.scope.visibleUserstories.splice(r, 1);\n              r = _this.scope.userstories.indexOf(us);\n              _results.push(_this.scope.userstories.splice(r, 1));\n            }\n            return _results;\n          };\n        })(this));\n      } else {\n        for (_k = 0, _len2 = usList.length; _k < _len2; _k++) {\n          us = usList[_k];\n          us.milestone = newSprintId;\n        }\n        this.scope.$apply((function(_this) {\n          return function() {\n            var args, oldSprint, r, _l, _len3, _results;\n            args = [newUsIndex, 0].concat(usList);\n            Array.prototype.splice.apply(newSprint.user_stories, args);\n            _results = [];\n            for (_l = 0, _len3 = usList.length; _l < _len3; _l++) {\n              us = usList[_l];\n              oldSprint = _this.scope.sprintsById[oldSprintId];\n              r = oldSprint.user_stories.indexOf(us);\n              _results.push(oldSprint.user_stories.splice(r, 1));\n            }\n            return _results;\n          };\n        })(this));\n      }\n      promises = _.map(usList, (function(_this) {\n        return function(us) {\n          return _this.repo.save(us);\n        };\n      })(this));\n      promise = this.q.all(promises).then((function(_this) {\n        return function() {\n          items = _this.resortUserStories(newSprint.user_stories, \"sprint_order\");\n          data = _this.prepareBulkUpdateData(items, \"sprint_order\");\n          _this.rs.userstories.bulkUpdateSprintOrder(project, data).then(function() {\n            return _this.rootscope.$broadcast(\"sprint:us:moved\", us, oldSprintId, newSprintId);\n          });\n          return _this.rs.userstories.bulkUpdateBacklogOrder(project, data).then(function() {\n            var _l, _len3, _results;\n            _results = [];\n            for (_l = 0, _len3 = usList.length; _l < _len3; _l++) {\n              us = usList[_l];\n              _results.push(_this.rootscope.$broadcast(\"sprint:us:moved\", us, oldSprintId, newSprintId));\n            }\n            return _results;\n          });\n        };\n      })(this));\n      promise.then(null, function() {\n        return console.log(\"FAIL\");\n      });\n      return promise;\n    };\n\n    BacklogController.prototype.getUrlFilters = function() {\n      return _.pick(this.location.search(), \"statuses\", \"tags\", \"q\");\n    };\n\n    BacklogController.prototype.generateFilters = function() {\n      var isSelected, name, plainStatuses, plainTags, searchdata, urlfilters, val, value, _i, _len, _ref;\n      urlfilters = this.getUrlFilters();\n      if (urlfilters.q) {\n        this.scope.filtersQ = this.scope.filtersQ || urlfilters.q;\n      }\n      searchdata = {};\n      for (name in urlfilters) {\n        value = urlfilters[name];\n        if (searchdata[name] == null) {\n          searchdata[name] = {};\n        }\n        _ref = taiga.toString(value).split(\",\");\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          val = _ref[_i];\n          searchdata[name][val] = true;\n        }\n      }\n      isSelected = function(type, id) {\n        if ((searchdata[type] != null) && searchdata[type][id]) {\n          return true;\n        }\n        return false;\n      };\n      this.scope.filters = {};\n      plainTags = _.flatten(_.filter(_.map(this.scope.userstories, \"tags\")));\n      plainTags.sort();\n      this.scope.filters.tags = _.map(_.countBy(plainTags), (function(_this) {\n        return function(v, k) {\n          var obj;\n          obj = {\n            id: k,\n            type: \"tags\",\n            name: k,\n            color: _this.scope.project.tags_colors[k],\n            count: v\n          };\n          if (isSelected(\"tags\", obj.id)) {\n            obj.selected = true;\n          }\n          return obj;\n        };\n      })(this));\n      plainStatuses = _.map(this.scope.userstories, \"status\");\n      plainStatuses = _.filter(plainStatuses, (function(_this) {\n        return function(status) {\n          if (status) {\n            return status;\n          }\n        };\n      })(this));\n      this.scope.filters.statuses = _.map(_.countBy(plainStatuses), (function(_this) {\n        return function(v, k) {\n          var obj;\n          obj = {\n            id: k,\n            type: \"statuses\",\n            name: _this.scope.usStatusById[k].name,\n            color: _this.scope.usStatusById[k].color,\n            count: v\n          };\n          if (isSelected(\"statuses\", obj.id)) {\n            obj.selected = true;\n          }\n          return obj;\n        };\n      })(this));\n      return this.scope.filters;\n    };\n\n    BacklogController.prototype.editUserStory = function(us) {\n      return this.rootscope.$broadcast(\"usform:edit\", us);\n    };\n\n    BacklogController.prototype.deleteUserStory = function(us) {\n      var message, title;\n      title = \"Delete User Story\";\n      message = us.subject;\n      return this.confirm.askOnDelete(title, message).then((function(_this) {\n        return function(finish) {\n          var promise;\n          _this.scope.userstories = _.without(_this.scope.userstories, us);\n          _this.filterVisibleUserstories();\n          promise = _this.repo.remove(us);\n          promise.then(function() {\n            finish();\n            return _this.loadBacklog();\n          });\n          return promise.then(null, function() {\n            finish(false);\n            return _this.confirm.notify(\"error\");\n          });\n        };\n      })(this));\n    };\n\n    BacklogController.prototype.addNewUs = function(type) {\n      switch (type) {\n        case \"standard\":\n          return this.rootscope.$broadcast(\"usform:new\", this.scope.projectId, this.scope.project.default_us_status, this.scope.usStatusList);\n        case \"bulk\":\n          return this.rootscope.$broadcast(\"usform:bulk\", this.scope.projectId, this.scope.project.default_us_status);\n      }\n    };\n\n    BacklogController.prototype.addNewSprint = function() {\n      return this.rootscope.$broadcast(\"sprintform:create\", this.scope.projectId);\n    };\n\n    return BacklogController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin, taiga.FiltersMixin));\n\n  module.controller(\"BacklogController\", BacklogController);\n\n  BacklogDirective = function($repo, $rootscope) {\n    var doomLineTemplate, link, linkDoomLine, linkFilters, linkToolbar, showHideFilter, showHideTags;\n    doomLineTemplate = _.template(\"<div class=\\\"doom-line\\\"><span>Project Scope [Doomline]</span></div>\");\n    linkDoomLine = function($scope, $el, $attrs, $ctrl) {\n      var addDoomLineDom, getUsItems, reloadDoomLine, removeDoomlineDom;\n      reloadDoomLine = function() {\n        var current_sum, element, elements, scope, stats, total_points, _i, _len, _results;\n        if ($scope.stats != null) {\n          removeDoomlineDom();\n          elements = getUsItems();\n          stats = $scope.stats;\n          total_points = stats.total_points;\n          current_sum = stats.assigned_points;\n          _results = [];\n          for (_i = 0, _len = elements.length; _i < _len; _i++) {\n            element = elements[_i];\n            scope = element.scope();\n            if (scope.us == null) {\n              continue;\n            }\n            current_sum += scope.us.total_points;\n            if (current_sum > total_points) {\n              addDoomLineDom(element);\n              break;\n            } else {\n              _results.push(void 0);\n            }\n          }\n          return _results;\n        }\n      };\n      removeDoomlineDom = function() {\n        return $el.find(\".doom-line\").remove();\n      };\n      addDoomLineDom = function(element) {\n        return element != null ? element.before(doomLineTemplate({})) : void 0;\n      };\n      getUsItems = function() {\n        var rowElements;\n        rowElements = $el.find('.backlog-table-body .us-item-row');\n        return _.map(rowElements, function(x) {\n          return angular.element(x);\n        });\n      };\n      $scope.$on(\"userstories:loaded\", reloadDoomLine);\n      return $scope.$watch(\"stats\", reloadDoomLine);\n    };\n    linkToolbar = function($scope, $el, $attrs, $ctrl) {\n      var moveToCurrentSprint;\n      moveToCurrentSprint = function(selectedUss) {\n        var extraPoints, totalExtraPoints, ussCurrent;\n        ussCurrent = _($scope.userstories);\n        $scope.userstories = ussCurrent.without.apply(ussCurrent, selectedUss).value();\n        extraPoints = _.map(selectedUss, function(v, k) {\n          return v.total_points;\n        });\n        totalExtraPoints = _.reduce(extraPoints, function(acc, num) {\n          return acc + num;\n        });\n        $scope.sprints[0].user_stories = _.union($scope.sprints[0].user_stories, selectedUss);\n        $scope.sprints[0].total_points += totalExtraPoints;\n        $ctrl.filterVisibleUserstories();\n        return $repo.saveAll(selectedUss).then(function() {\n          $ctrl.loadSprints();\n          return $ctrl.loadProjectStats();\n        });\n      };\n      $el.on(\"change\", \".backlog-table-body .user-stories input:checkbox\", function(event) {\n        var moveToCurrentSprintDom, selectedUsDom, target;\n        target = angular.element(event.currentTarget);\n        moveToCurrentSprintDom = $el.find(\"#move-to-current-sprint\");\n        selectedUsDom = $el.find(\".backlog-table-body .user-stories input:checkbox:checked\");\n        if (selectedUsDom.length > 0 && $scope.sprints.length > 0) {\n          moveToCurrentSprintDom.show();\n        } else {\n          moveToCurrentSprintDom.hide();\n        }\n        return target.closest('.us-item-row').toggleClass('ui-multisortable-multiple');\n      });\n      $el.on(\"click\", \"#move-to-current-sprint\", (function(_this) {\n        return function(event) {\n          var ussDom, ussToMove;\n          ussDom = $el.find(\".backlog-table-body .user-stories input:checkbox:checked\");\n          ussToMove = _.map(ussDom, function(item) {\n            var itemScope;\n            itemScope = angular.element(item).scope();\n            itemScope.us.milestone = $scope.sprints[0].id;\n            return itemScope.us;\n          });\n          return $scope.$apply(_.partial(moveToCurrentSprint, ussToMove));\n        };\n      })(this));\n      return $el.on(\"click\", \"#show-tags\", function(event) {\n        event.preventDefault();\n        $ctrl.toggleShowTags();\n        return showHideTags($ctrl);\n      });\n    };\n    showHideTags = function($ctrl) {\n      var elm;\n      elm = angular.element(\"#show-tags\");\n      if ($ctrl.showTags) {\n        elm.addClass(\"active\");\n        return elm.find(\".text\").text(\"Hide Tags\");\n      } else {\n        elm.removeClass(\"active\");\n        return elm.find(\".text\").text(\"Show Tags\");\n      }\n    };\n    showHideFilter = function($scope, $el, $ctrl) {\n      var sidebar, target;\n      sidebar = $el.find(\"sidebar.filters-bar\");\n      sidebar.one(\"transitionend\", function() {\n        return timeout(150, function() {\n          $rootscope.$broadcast(\"resize\");\n          return $('.burndown').css(\"visibility\", \"visible\");\n        });\n      });\n      target = angular.element(\"#show-filters-button\");\n      $('.burndown').css(\"visibility\", \"hidden\");\n      sidebar.toggleClass(\"active\");\n      target.toggleClass(\"active\");\n      toggleText(target.find(\".text\"), [\"Remove Filters\", \"Show Filters\"]);\n      if (!sidebar.hasClass(\"active\")) {\n        $ctrl.resetFilters();\n      }\n      return $ctrl.toggleActiveFilters();\n    };\n    linkFilters = function($scope, $el, $attrs, $ctrl) {\n      $scope.filtersSearch = {};\n      return $el.on(\"click\", \"#show-filters-button\", function(event) {\n        event.preventDefault();\n        return $scope.$apply(function() {\n          return showHideFilter($scope, $el, $ctrl);\n        });\n      });\n    };\n    link = function($scope, $el, $attrs, $rootscope) {\n      var $ctrl, filters;\n      $ctrl = $el.controller();\n      linkToolbar($scope, $el, $attrs, $ctrl);\n      linkFilters($scope, $el, $attrs, $ctrl);\n      linkDoomLine($scope, $el, $attrs, $ctrl);\n      $el.find(\".backlog-table-body\").disableSelection();\n      filters = $ctrl.getUrlFilters();\n      if (filters.statuses || filters.tags || filters.q) {\n        showHideFilter($scope, $el, $ctrl);\n      }\n      $scope.$on(\"showTags\", function() {\n        return showHideTags($ctrl);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgBacklog\", [\"$tgRepo\", \"$rootScope\", BacklogDirective]);\n\n  UsRolePointsSelectorDirective = function($rootscope, $template) {\n    var link, selectionTemplate;\n    selectionTemplate = $template.get(\"backlog/us-role-points-popover.html\", true);\n    link = function($scope, $el, $attrs) {\n      bindOnce($scope, \"project\", function(project) {\n        var numberOfRoles, roles;\n        roles = _.filter(project.roles, \"computable\");\n        numberOfRoles = _.size(roles);\n        if (numberOfRoles > 1) {\n          return $el.append(selectionTemplate({\n            \"roles\": roles\n          }));\n        } else {\n          $el.find(\".icon-arrow-bottom\").remove();\n          return $el.find(\".header-points\").addClass(\"not-clickable\");\n        }\n      });\n      $scope.$on(\"uspoints:select\", function(ctx, roleId, roleName) {\n        $el.find(\".popover\").popover().close();\n        return $el.find(\".header-points\").html(roleName + \"/<span>Total</span>\");\n      });\n      $scope.$on(\"uspoints:clear-selection\", function(ctx, roleId) {\n        $el.find(\".popover\").popover().close();\n        return $el.find(\".header-points\").text(\"Points\");\n      });\n      $el.on(\"click\", function(event) {\n        var target;\n        target = angular.element(event.target);\n        if (target.is(\"span\") || target.is(\"div\")) {\n          event.stopPropagation();\n        }\n        return $el.find(\".popover\").popover().open();\n      });\n      $el.on(\"click\", \".clear-selection\", function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        return $rootscope.$broadcast(\"uspoints:clear-selection\");\n      });\n      $el.on(\"click\", \".role\", function(event) {\n        var rolScope, target;\n        event.preventDefault();\n        event.stopPropagation();\n        target = angular.element(event.currentTarget);\n        rolScope = target.scope();\n        return $rootscope.$broadcast(\"uspoints:select\", target.data(\"role-id\"), target.text());\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgUsRolePointsSelector\", [\"$rootScope\", \"$tgTemplate\", UsRolePointsSelectorDirective]);\n\n  UsPointsDirective = function($repo, $tgTemplate) {\n    var link, pointsTemplate, rolesTemplate;\n    rolesTemplate = $tgTemplate.get(\"backlog/us-points-roles-popover.html\", true);\n    pointsTemplate = $tgTemplate.get(\"backlog/us-points-popover.html\", true);\n    link = function($scope, $el, $attrs) {\n      var $ctrl, calculateTotalPoints, computableRoles, numberOfRoles, renderPoints, renderPointsSelector, renderRolesSelector, roles, selectedRoleId, updatePointsRoles, updatingSelectedRoleId, us;\n      $ctrl = $el.controller();\n      us = $scope.$eval($attrs.tgBacklogUsPoints);\n      updatingSelectedRoleId = null;\n      selectedRoleId = null;\n      numberOfRoles = _.size(us.points);\n      if (numberOfRoles === 1) {\n        selectedRoleId = _.keys(us.points)[0];\n      }\n      roles = [];\n      updatePointsRoles = function() {\n        return roles = _.map(computableRoles, function(role) {\n          var pointId, pointObj;\n          pointId = us.points[role.id];\n          pointObj = $scope.pointsById[pointId];\n          role = _.clone(role, true);\n          role.points = pointObj.value != null ? pointObj.value : \"?\";\n          return role;\n        });\n      };\n      computableRoles = _.filter($scope.project.roles, \"computable\");\n      updatePointsRoles();\n      if (roles.length === 0) {\n        $el.find(\".icon-arrow-bottom\").remove();\n        $el.find(\"a.us-points\").addClass(\"not-clickable\");\n      }\n      renderPointsSelector = function(us, roleId) {\n        var html, points;\n        points = _.map($scope.project.points, function(point) {\n          point = _.clone(point, true);\n          point.selected = us.points[roleId] === point.id ? false : true;\n          return point;\n        });\n        html = pointsTemplate({\n          \"points\": points\n        });\n        $el.find(\".popover\").popover().close();\n        $el.find(\".pop-points-open\").remove();\n        $el.append(html);\n        if ($el.find(\".pop-role:visible\").css(\"left\") == null) {\n          $el.find(\".pop-points-open\").css(\"left\", \"110px\");\n        }\n        return $el.find(\".pop-points-open\").popover().open();\n      };\n      renderRolesSelector = function(us) {\n        var html;\n        updatePointsRoles();\n        html = rolesTemplate({\n          \"roles\": roles\n        });\n        $el.append(html);\n        return $el.find(\".pop-role\").popover().open(function() {\n          return $(this).remove();\n        });\n      };\n      renderPoints = function(us, roleId) {\n        var dom, pointId, pointObj, totalPoints;\n        dom = $el.find(\"a > span.points-value\");\n        if (roleId === null || numberOfRoles === 1) {\n          totalPoints = us.total_points != null ? us.total_points : \"?\";\n          dom.text(totalPoints);\n          return dom.parent().prop(\"title\", totalPoints);\n        } else {\n          pointId = us.points[roleId];\n          pointObj = $scope.pointsById[pointId];\n          dom.html(pointObj.name + \" / <span>\" + us.total_points + \"</span>\");\n          return dom.parent().prop(\"title\", pointObj.name + \" / \" + us.total_points);\n        }\n      };\n      calculateTotalPoints = function() {\n        var values;\n        values = _.map(us.points, function(v, k) {\n          return $scope.pointsById[v].value;\n        });\n        values = _.filter(values, function(num) {\n          return num != null;\n        });\n        if (values.length === 0) {\n          return \"?\";\n        }\n        return _.reduce(values, function(acc, num) {\n          return acc + num;\n        });\n      };\n      $scope.$watch($attrs.tgBacklogUsPoints, function(us) {\n        if (us) {\n          return renderPoints(us, selectedRoleId);\n        }\n      });\n      $scope.$on(\"uspoints:select\", function(ctx, roleId, roleName) {\n        us = $scope.$eval($attrs.tgBacklogUsPoints);\n        renderPoints(us, roleId);\n        return selectedRoleId = roleId;\n      });\n      $scope.$on(\"uspoints:clear-selection\", function(ctx) {\n        us = $scope.$eval($attrs.tgBacklogUsPoints);\n        renderPoints(us, null);\n        return selectedRoleId = null;\n      });\n      if (roles.length > 0) {\n        $el.on(\"click\", \"a.us-points span\", function(event) {\n          event.preventDefault();\n          event.stopPropagation();\n          us = $scope.$eval($attrs.tgBacklogUsPoints);\n          updatingSelectedRoleId = selectedRoleId;\n          if (selectedRoleId != null) {\n            return renderPointsSelector(us, selectedRoleId);\n          } else {\n            return renderRolesSelector(us);\n          }\n        });\n        $el.on(\"click\", \".role\", function(event) {\n          var popRolesDom, target;\n          event.preventDefault();\n          event.stopPropagation();\n          target = angular.element(event.currentTarget);\n          us = $scope.$eval($attrs.tgBacklogUsPoints);\n          updatingSelectedRoleId = target.data(\"role-id\");\n          popRolesDom = $el.find(\".pop-role\");\n          popRolesDom.find(\"a\").removeClass(\"active\");\n          popRolesDom.find(\"a[data-role-id='\" + updatingSelectedRoleId + \"']\").addClass(\"active\");\n          return renderPointsSelector(us, updatingSelectedRoleId);\n        });\n        $el.on(\"click\", \".point\", function(event) {\n          var points, target;\n          event.preventDefault();\n          event.stopPropagation();\n          target = angular.element(event.currentTarget);\n          $el.find(\".pop-points-open\").hide();\n          $el.find(\".pop-role\").hide();\n          us = $scope.$eval($attrs.tgBacklogUsPoints);\n          points = _.clone(us.points, true);\n          points[updatingSelectedRoleId] = target.data(\"point-id\");\n          return $scope.$apply(function() {\n            us.points = points;\n            us.total_points = calculateTotalPoints(us);\n            renderPoints(us, selectedRoleId);\n            return $repo.save(us).then(function() {\n              return $repo.refresh(us).then(function() {\n                return $ctrl.loadProjectStats();\n              });\n            });\n          });\n        });\n      }\n      bindOnce($scope, \"project\", function(project) {\n        if (project.my_permissions.indexOf(\"modify_us\") === -1) {\n          $el.unbind(\"click\");\n          return $el.find(\"a\").addClass(\"not-clickable\");\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgBacklogUsPoints\", [\"$tgRepo\", \"$tgTemplate\", UsPointsDirective]);\n\n  tgBacklogGraphDirective = function() {\n    var link, redrawChart;\n    redrawChart = function(element, dataToDraw) {\n      var client_increment_line, colors, data, evolution_line, milestonesRange, optimal_line, options, team_increment_line, width, zero_line, _i, _ref, _results;\n      width = element.width();\n      element.height(width / 6);\n      milestonesRange = (function() {\n        _results = [];\n        for (var _i = 0, _ref = dataToDraw.milestones.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n        return _results;\n      }).apply(this);\n      data = [];\n      zero_line = _.map(dataToDraw.milestones, function(ml) {\n        return 0;\n      });\n      data.push({\n        data: _.zip(milestonesRange, zero_line),\n        lines: {\n          fillColor: \"rgba(0,0,0,0)\"\n        },\n        points: {\n          show: false\n        }\n      });\n      optimal_line = _.map(dataToDraw.milestones, function(ml) {\n        return ml.optimal;\n      });\n      data.push({\n        data: _.zip(milestonesRange, optimal_line),\n        lines: {\n          fillColor: \"rgba(120,120,120,0.2)\"\n        }\n      });\n      evolution_line = _.filter(_.map(dataToDraw.milestones, function(ml) {\n        return ml.evolution;\n      }), function(evolution) {\n        return evolution != null;\n      });\n      data.push({\n        data: _.zip(milestonesRange, evolution_line),\n        lines: {\n          fillColor: \"rgba(102,153,51,0.3)\"\n        }\n      });\n      team_increment_line = _.map(dataToDraw.milestones, function(ml) {\n        return -ml[\"team-increment\"];\n      });\n      data.push({\n        data: _.zip(milestonesRange, team_increment_line),\n        lines: {\n          fillColor: \"rgba(153,51,51,0.3)\"\n        }\n      });\n      client_increment_line = _.map(dataToDraw.milestones, function(ml) {\n        return -ml[\"team-increment\"] - ml[\"client-increment\"];\n      });\n      data.push({\n        data: _.zip(milestonesRange, client_increment_line),\n        lines: {\n          fillColor: \"rgba(255,51,51,0.3)\"\n        }\n      });\n      colors = [\"rgba(0,0,0,1)\", \"rgba(120,120,120,0.2)\", \"rgba(102,153,51,1)\", \"rgba(153,51,51,1)\", \"rgba(255,51,51,1)\"];\n      options = {\n        grid: {\n          borderWidth: {\n            top: 0,\n            right: 1,\n            left: 0,\n            bottom: 0\n          },\n          borderColor: \"#ccc\",\n          hoverable: true\n        },\n        xaxis: {\n          ticks: dataToDraw.milestones.length,\n          axisLabel: \"Sprints\",\n          axisLabelUseCanvas: true,\n          axisLabelFontSizePixels: 14,\n          axisLabelFontFamily: \"Verdana, Arial, Helvetica, Tahoma, sans-serif\",\n          axisLabelPadding: 15,\n          tickFormatter: function(val, axis) {\n            return \"\";\n          }\n        },\n        series: {\n          shadowSize: 0,\n          lines: {\n            show: true,\n            fill: true\n          },\n          points: {\n            show: true,\n            fill: true,\n            radius: 4,\n            lineWidth: 2\n          }\n        },\n        colors: colors,\n        tooltip: true,\n        tooltipOpts: {\n          content: function(label, xval, yval, flotItem) {\n            if (flotItem.seriesIndex === 1) {\n              return \"Optimal pending points for sprint \" + xval + \" should be \" + yval;\n            } else if (flotItem.seriesIndex === 2) {\n              return \"Real pending points for sprint \" + xval + \" is \" + yval;\n            } else if (flotItem.seriesIndex === 3) {\n              return \"Incremented points by team requirements for sprint \" + xval + \" is \" + (Math.abs(yval));\n            } else {\n              return \"Incremented points by client requirements for sprint \" + xval + \" is \" + (Math.abs(yval));\n            }\n          }\n        }\n      };\n      element.empty();\n      return element.plot(data, options).data(\"plot\");\n    };\n    link = function($scope, $el, $attrs) {\n      var element;\n      element = angular.element($el);\n      $scope.$watch(\"stats\", function(value) {\n        if ($scope.stats != null) {\n          redrawChart(element, $scope.stats);\n          return $scope.$on(\"resize\", function() {\n            return redrawChart(element, $scope.stats);\n          });\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgGmBacklogGraph\", tgBacklogGraphDirective);\n\n  TgBacklogProgressBarDirective = function($template) {\n    var adjustPercentaje, link, render, template;\n    template = $template.get(\"backlog/progress-bar.html\", true);\n    render = function(el, projectPointsPercentaje, closedPointsPercentaje) {\n      return el.html(template({\n        projectPointsPercentaje: projectPointsPercentaje,\n        closedPointsPercentaje: closedPointsPercentaje\n      }));\n    };\n    adjustPercentaje = function(percentage) {\n      var adjusted;\n      adjusted = _.max([0, percentage]);\n      adjusted = _.min([100, adjusted]);\n      return Math.round(adjusted);\n    };\n    link = function($scope, $el, $attrs) {\n      var element;\n      element = angular.element($el);\n      $scope.$watch($attrs.tgBacklogProgressBar, function(stats) {\n        var closedPoints, closedPointsPercentaje, definedPoints, projectPointsPercentaje, totalPoints;\n        if (stats != null) {\n          totalPoints = stats.total_points;\n          definedPoints = stats.defined_points;\n          closedPoints = stats.closed_points;\n          if (definedPoints > totalPoints) {\n            projectPointsPercentaje = totalPoints * 100 / definedPoints;\n            closedPointsPercentaje = closedPoints * 100 / definedPoints;\n          } else {\n            projectPointsPercentaje = 100;\n            closedPointsPercentaje = closedPoints * 100 / totalPoints;\n          }\n          projectPointsPercentaje = adjustPercentaje(projectPointsPercentaje - 3);\n          closedPointsPercentaje = adjustPercentaje(closedPointsPercentaje - 3);\n          return render($el, projectPointsPercentaje, closedPointsPercentaje);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgBacklogProgressBar\", [\"$tgTemplate\", TgBacklogProgressBarDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/backlog/sortable.coffee\n */\n\n(function() {\n  var BacklogEmptySortableDirective, BacklogSortableDirective, SprintSortableDirective, bindOnce, deleteElement, groupBy, mixOf, module, scopeDefer, taiga, toggleText;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  toggleText = this.taiga.toggleText;\n\n  scopeDefer = this.taiga.scopeDefer;\n\n  bindOnce = this.taiga.bindOnce;\n\n  groupBy = this.taiga.groupBy;\n\n  module = angular.module(\"taigaBacklog\");\n\n  deleteElement = function(el) {\n    el.scope().$destroy();\n    el.off();\n    return el.remove();\n  };\n\n  BacklogSortableDirective = function($repo, $rs, $rootscope, $tgConfirm) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var getUsIndex;\n      getUsIndex = (function(_this) {\n        return function(us) {\n          return $(us).index(\".backlog-table-body .row\");\n        };\n      })(this);\n      bindOnce($scope, \"project\", function(project) {\n        var filterError;\n        if (!(project.my_permissions.indexOf(\"modify_us\") > -1)) {\n          return;\n        }\n        filterError = function() {\n          return $tgConfirm.notify(\"error\", \"You can't drop on backlog when filters are open\");\n        };\n        $el.sortable({\n          items: \".us-item-row\",\n          connectWith: \".sprint\",\n          containment: \".wrapper\",\n          dropOnEmpty: true,\n          placeholder: \"row us-item-row us-item-drag sortable-placeholder\",\n          scroll: true,\n          tolerance: \"pointer\",\n          revert: false,\n          cursorAt: {\n            right: 15\n          },\n          stop: function() {\n            if ($el.hasClass(\"active-filters\")) {\n              $el.sortable(\"cancel\");\n              return filterError();\n            }\n          }\n        });\n        $el.on(\"multiplesortreceive\", function(event, ui) {\n          var itemIndex, itemUs;\n          if ($el.hasClass(\"active-filters\")) {\n            ui.source.sortable(\"cancel\");\n            filterError();\n            return;\n          }\n          itemUs = ui.item.scope().us;\n          itemIndex = getUsIndex(ui.item);\n          deleteElement(ui.item);\n          $scope.$emit(\"sprint:us:move\", [itemUs], itemIndex, null);\n          return ui.item.find('a').removeClass('noclick');\n        });\n        $el.on(\"multiplesortstop\", function(event, ui) {\n          var index, items, us;\n          if ($(ui.items[0]).parent().length === 0) {\n            return;\n          }\n          items = _.sortBy(ui.items, function(item) {\n            return $(item).index();\n          });\n          index = _.min(_.map(items, function(item) {\n            return getUsIndex(item);\n          }));\n          us = _.map(items, function(item) {\n            var itemUs;\n            item = $(item);\n            itemUs = item.scope().us;\n            setTimeout(((function(_this) {\n              return function() {\n                return item.find('a').removeClass('noclick');\n              };\n            })(this)), 300);\n            return itemUs;\n          });\n          return $scope.$emit(\"sprint:us:move\", us, index, null);\n        });\n        return $el.on(\"sortstart\", function(event, ui) {\n          return ui.item.find('a').addClass('noclick');\n        });\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  BacklogEmptySortableDirective = function($repo, $rs, $rootscope) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      bindOnce($scope, \"project\", function(project) {\n        if (project.my_permissions.indexOf(\"modify_us\") > -1) {\n          $el.sortable({\n            dropOnEmpty: true\n          });\n          return $el.on(\"sortreceive\", function(event, ui) {\n            var itemIndex, itemUs;\n            itemUs = ui.item.scope().us;\n            itemIndex = ui.item.index();\n            deleteElement(ui.item);\n            $scope.$emit(\"sprint:us:move\", [itemUs], itemIndex, null);\n            return ui.item.find('a').removeClass('noclick');\n          });\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  SprintSortableDirective = function($repo, $rs, $rootscope) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return bindOnce($scope, \"project\", function(project) {\n        if (project.my_permissions.indexOf(\"modify_us\") > -1) {\n          $el.sortable({\n            scroll: true,\n            dropOnEmpty: true,\n            items: \".sprint-table .milestone-us-item-row\",\n            connectWith: \".sprint,.backlog-table-body,.empty-backlog\"\n          });\n          $el.on(\"multiplesortreceive\", function(event, ui) {\n            var index, items, us;\n            items = _.sortBy(ui.items, function(item) {\n              return $(item).index();\n            });\n            index = _.min(_.map(items, function(item) {\n              return $(item).index();\n            }));\n            us = _.map(items, function(item) {\n              var itemUs;\n              item = $(item);\n              itemUs = item.scope().us;\n              deleteElement(item);\n              return itemUs;\n            });\n            return $scope.$emit(\"sprint:us:move\", us, index, $scope.sprint.id);\n          });\n          $el.on(\"multiplesortstop\", function(event, ui) {\n            var itemIndex, itemUs;\n            if (ui.item.parent().length === 0) {\n              return;\n            }\n            itemUs = ui.item.scope().us;\n            itemIndex = ui.item.index();\n            setTimeout(((function(_this) {\n              return function() {\n                return ui.item.find('a').removeClass('noclick');\n              };\n            })(this)), 300);\n            return $scope.$emit(\"sprint:us:move\", [itemUs], itemIndex, $scope.sprint.id);\n          });\n          return $el.on(\"sortstart\", function(event, ui) {\n            return ui.item.find('a').addClass('noclick');\n          });\n        }\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgBacklogSortable\", [\"$tgRepo\", \"$tgResources\", \"$rootScope\", \"$tgConfirm\", BacklogSortableDirective]);\n\n  module.directive(\"tgBacklogEmptySortable\", [\"$tgRepo\", \"$tgResources\", \"$rootScope\", BacklogEmptySortableDirective]);\n\n  module.directive(\"tgSprintSortable\", [\"$tgRepo\", \"$tgResources\", \"$rootScope\", SprintSortableDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/backlog/sprints.coffee\n */\n\n(function() {\n  var BacklogSprintDirective, BacklogSprintHeaderDirective, ToggleExcludeClosedSprintsVisualization, module, taiga;\n\n  taiga = this.taiga;\n\n  module = angular.module(\"taigaBacklog\");\n\n  BacklogSprintDirective = function($repo, $rootscope) {\n    var link, refreshSprintTableHeight, slideOptions, sprintTableMinHeight, toggleSprint;\n    sprintTableMinHeight = 50;\n    slideOptions = {\n      duration: 500,\n      easing: 'linear'\n    };\n    refreshSprintTableHeight = (function(_this) {\n      return function(sprintTable) {\n        if (!sprintTable.find(\".row\").length) {\n          return sprintTable.css(\"height\", sprintTableMinHeight);\n        } else {\n          return sprintTable.css(\"height\", \"auto\");\n        }\n      };\n    })(this);\n    toggleSprint = (function(_this) {\n      return function($el) {\n        var sprintArrow, sprintTable;\n        sprintTable = $el.find(\".sprint-table\");\n        sprintArrow = $el.find(\".icon-arrow-up\");\n        sprintArrow.toggleClass('active');\n        sprintTable.toggleClass('open');\n        return refreshSprintTableHeight(sprintTable);\n      };\n    })(this);\n    link = function($scope, $el, $attrs) {\n      $scope.$watch($attrs.tgBacklogSprint, function(sprint) {\n        sprint = $scope.$eval($attrs.tgBacklogSprint);\n        if (sprint.closed) {\n          return $el.addClass(\"sprint-closed\");\n        } else {\n          return toggleSprint($el);\n        }\n      });\n      $el.on(\"click\", \".sprint-name > .icon-arrow-up\", function(event) {\n        toggleSprint($el);\n        return $el.find(\".sprint-table\").slideToggle(slideOptions);\n      });\n      $el.on(\"click\", \".sprint-name > .icon-edit\", function(event) {\n        var sprint;\n        event.preventDefault();\n        sprint = $scope.$eval($attrs.tgBacklogSprint);\n        return $rootscope.$broadcast(\"sprintform:edit\", sprint);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgBacklogSprint\", [\"$tgRepo\", \"$rootScope\", BacklogSprintDirective]);\n\n  BacklogSprintHeaderDirective = function($navUrls, $template) {\n    var link, template;\n    template = $template.get(\"backlog/sprint-header.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var isEditable, isVisible, render;\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf(\"modify_milestone\") !== -1;\n      };\n      isVisible = function() {\n        return $scope.project.my_permissions.indexOf(\"view_milestones\") !== -1;\n      };\n      render = function(sprint) {\n        var ctx, estimatedDateRange, finish, start, taskboardUrl;\n        taskboardUrl = $navUrls.resolve(\"project-taskboard\", {\n          project: $scope.project.slug,\n          sprint: sprint.slug\n        });\n        start = moment(sprint.estimated_start).format(\"DD MMM YYYY\");\n        finish = moment(sprint.estimated_finish).format(\"DD MMM YYYY\");\n        estimatedDateRange = start + \"-\" + finish;\n        ctx = {\n          name: sprint.name,\n          taskboardUrl: taskboardUrl,\n          estimatedDateRange: estimatedDateRange,\n          closedPoints: sprint.closed_points || 0,\n          totalPoints: sprint.total_points || 0,\n          isVisible: isVisible(),\n          isEditable: isEditable()\n        };\n        return $el.html(template(ctx));\n      };\n      $scope.$watch($attrs.ngModel, function(sprint) {\n        return render(sprint);\n      });\n      $scope.$on(\"sprintform:edit:success\", function() {\n        return render($model.$modelValue);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgBacklogSprintHeader\", [\"$tgNavUrls\", \"$tgTemplate\", BacklogSprintHeaderDirective]);\n\n  ToggleExcludeClosedSprintsVisualization = function($rootscope, $loading) {\n    var excludeClosedSprints, link;\n    excludeClosedSprints = true;\n    link = function($scope, $el, $attrs) {\n      var loadingElm;\n      loadingElm = $(\"<div>\");\n      $el.after(loadingElm);\n      $el.on(\"click\", function(event) {\n        event.preventDefault();\n        excludeClosedSprints = !excludeClosedSprints;\n        $loading.start(loadingElm);\n        if (excludeClosedSprints) {\n          return $rootscope.$broadcast(\"backlog:unload-closed-sprints\");\n        } else {\n          return $rootscope.$broadcast(\"backlog:load-closed-sprints\");\n        }\n      });\n      $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n      return $scope.$on(\"closed-sprints:reloaded\", (function(_this) {\n        return function(ctx, sprints) {\n          var text;\n          $loading.finish(loadingElm);\n          if (sprints.length > 0) {\n            text = \"Hide closed sprints\";\n          } else {\n            text = \"Show closed sprints\";\n          }\n          return $el.find(\".text\").text(text);\n        };\n      })(this));\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgBacklogToggleClosedSprintsVisualization\", [\"$rootScope\", \"$tgLoading\", ToggleExcludeClosedSprintsVisualization]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/taskboard/charts.coffee\n */\n\n(function() {\n  var SprintGraphDirective, bindOnce, groupBy, mixOf, module, scopeDefer, taiga, timeout, toggleText;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  toggleText = this.taiga.toggleText;\n\n  scopeDefer = this.taiga.scopeDefer;\n\n  bindOnce = this.taiga.bindOnce;\n\n  groupBy = this.taiga.groupBy;\n\n  timeout = this.taiga.timeout;\n\n  module = angular.module(\"taigaTaskboard\");\n\n  SprintGraphDirective = function() {\n    var link, redrawChart;\n    redrawChart = function(element, dataToDraw) {\n      var data, days, options, width;\n      width = element.width();\n      element.height(240);\n      days = _.map(dataToDraw, function(x) {\n        return moment(x.day);\n      });\n      data = [];\n      data.unshift({\n        data: _.zip(days, _.map(dataToDraw, function(d) {\n          return d.optimal_points;\n        })),\n        lines: {\n          fillColor: \"rgba(120,120,120,0.2)\"\n        }\n      });\n      data.unshift({\n        data: _.zip(days, _.map(dataToDraw, function(d) {\n          return d.open_points;\n        })),\n        lines: {\n          fillColor: \"rgba(102,153,51,0.3)\"\n        }\n      });\n      options = {\n        grid: {\n          borderWidth: {\n            top: 0,\n            right: 1,\n            left: 0,\n            bottom: 0\n          },\n          borderColor: '#ccc',\n          hoverable: true\n        },\n        xaxis: {\n          tickSize: [1, \"day\"],\n          min: days[0],\n          max: _.last(days),\n          mode: \"time\",\n          daysNames: days,\n          axisLabel: 'Day',\n          axisLabelUseCanvas: true,\n          axisLabelFontSizePixels: 12,\n          axisLabelFontFamily: 'Verdana, Arial, Helvetica, Tahoma, sans-serif',\n          axisLabelPadding: 5\n        },\n        yaxis: {\n          min: 0\n        },\n        series: {\n          shadowSize: 0,\n          lines: {\n            show: true,\n            fill: true\n          },\n          points: {\n            show: true,\n            fill: true,\n            radius: 4,\n            lineWidth: 2\n          }\n        },\n        colors: [\"rgba(102,153,51,1)\", \"rgba(120,120,120,0.2)\"],\n        tooltip: true,\n        tooltipOpts: {\n          content: function(label, xval, yval, flotItem) {\n            var formattedDate, roundedValue;\n            formattedDate = moment(xval).format(\"DD MMM\");\n            roundedValue = Math.round(yval);\n            if (flotItem.seriesIndex === 1) {\n              return \"Optimal pending points for day \" + formattedDate + \" should be \" + roundedValue;\n            } else {\n              return \"Real pending points for day \" + formattedDate + \" is \" + roundedValue;\n            }\n          }\n        }\n      };\n      element.empty();\n      return element.plot(data, options).data(\"plot\");\n    };\n    link = function($scope, $el, $attrs) {\n      var element;\n      element = angular.element($el);\n      $scope.$on(\"resize\", function() {\n        if ($scope.stats) {\n          return redrawChart(element, $scope.stats.days);\n        }\n      });\n      $scope.$on(\"taskboard:graph:toggle-visibility\", function() {\n        $el.parent().toggleClass('open');\n        return timeout(100, function() {\n          if ($scope.stats) {\n            return redrawChart(element, $scope.stats.days);\n          }\n        });\n      });\n      $scope.$watch('stats', function(value) {\n        if ($scope.stats == null) {\n          return;\n        }\n        return redrawChart(element, $scope.stats.days);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgSprintGraph\", SprintGraphDirective);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/taskboard/lightboxes.coffee\n */\n\n(function() {\n  var CreateBulkTasksDirective, CreateEditTaskDirective, bindOnce, debounce, module, taiga;\n\n  taiga = this.taiga;\n\n  bindOnce = this.taiga.bindOnce;\n\n  debounce = this.taiga.debounce;\n\n  CreateEditTaskDirective = function($repo, $model, $rs, $rootscope, $loading, lightboxService) {\n    var link;\n    link = function($scope, $el, attrs) {\n      var submit, submitButton;\n      $scope.isNew = true;\n      $scope.$on(\"taskform:new\", function(ctx, sprintId, usId) {\n        $scope.task = {\n          project: $scope.projectId,\n          milestone: sprintId,\n          user_story: usId,\n          is_archived: false,\n          status: $scope.project.default_task_status,\n          assigned_to: null,\n          tags: []\n        };\n        $scope.isNew = true;\n        $el.find(\".button-green span\").html(\"Create\");\n        $el.find(\".title\").html(\"New task  \");\n        $el.find(\".tag-input\").val(\"\");\n        return lightboxService.open($el);\n      });\n      $scope.$on(\"taskform:edit\", function(ctx, task) {\n        $scope.task = task;\n        $scope.isNew = false;\n        $el.find(\".button-green span\").html(\"Save\");\n        $el.find(\".title\").html(\"Edit task  \");\n        $el.find(\".tag-input\").val(\"\");\n        return lightboxService.open($el);\n      });\n      submitButton = $el.find(\".submit-button\");\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var broadcastEvent, form, promise;\n          event.preventDefault();\n          form = $el.find(\"form\").checksley();\n          if (!form.validate()) {\n            return;\n          }\n          if ($scope.isNew) {\n            promise = $repo.create(\"tasks\", $scope.task);\n            broadcastEvent = \"taskform:new:success\";\n          } else {\n            promise = $repo.save($scope.task);\n            broadcastEvent = \"taskform:edit:success\";\n          }\n          $loading.start(submitButton);\n          return promise.then(function(data) {\n            $loading.finish(submitButton);\n            lightboxService.close($el);\n            return $rootscope.$broadcast(broadcastEvent, data);\n          });\n        };\n      })(this));\n      $el.on(\"submit\", \"form\", submit);\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  CreateBulkTasksDirective = function($repo, $rs, $rootscope, $loading, lightboxService) {\n    var link;\n    link = function($scope, $el, attrs) {\n      var submit, submitButton;\n      $scope.form = {\n        data: \"\",\n        usId: null\n      };\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var data, form, projectId, promise, sprintId, usId;\n          event.preventDefault();\n          form = $el.find(\"form\").checksley();\n          if (!form.validate()) {\n            return;\n          }\n          $loading.start(submitButton);\n          data = $scope.form.data;\n          projectId = $scope.projectId;\n          sprintId = $scope.form.sprintId;\n          usId = $scope.form.usId;\n          promise = $rs.tasks.bulkCreate(projectId, sprintId, usId, data);\n          promise.then(function(result) {\n            $loading.finish(submitButton);\n            $rootscope.$broadcast(\"taskform:bulk:success\", result);\n            return lightboxService.close($el);\n          });\n          return promise.then(null, function() {\n            $loading.finish(submitButton);\n            return console.log(\"FAIL\");\n          });\n        };\n      })(this));\n      $scope.$on(\"taskform:bulk\", function(ctx, sprintId, usId) {\n        lightboxService.open($el);\n        return $scope.form = {\n          data: \"\",\n          sprintId: sprintId,\n          usId: usId\n        };\n      });\n      submitButton = $el.find(\".submit-button\");\n      $el.on(\"submit\", \"form\", submit);\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module = angular.module(\"taigaTaskboard\");\n\n  module.directive(\"tgLbCreateEditTask\", [\"$tgRepo\", \"$tgModel\", \"$tgResources\", \"$rootScope\", \"$tgLoading\", \"lightboxService\", CreateEditTaskDirective]);\n\n  module.directive(\"tgLbCreateBulkTasks\", [\"$tgRepo\", \"$tgResources\", \"$rootScope\", \"$tgLoading\", \"lightboxService\", CreateBulkTasksDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/taskboard.coffee\n */\n\n(function() {\n  var TaskboardController, TaskboardDirective, TaskboardSquishColumnDirective, TaskboardTaskDirective, TaskboardUserDirective, bindMethods, bindOnce, groupBy, mixOf, module, scopeDefer, taiga, timeout, toggleText,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  toggleText = this.taiga.toggleText;\n\n  mixOf = this.taiga.mixOf;\n\n  groupBy = this.taiga.groupBy;\n\n  bindOnce = this.taiga.bindOnce;\n\n  scopeDefer = this.taiga.scopeDefer;\n\n  timeout = this.taiga.timeout;\n\n  bindMethods = this.taiga.bindMethods;\n\n  module = angular.module(\"taigaTaskboard\");\n\n  TaskboardController = (function(_super) {\n    __extends(TaskboardController, _super);\n\n    TaskboardController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$appTitle\", \"$tgLocation\", \"$tgNavUrls\", \"$tgEvents\", \"$tgAnalytics\", \"tgLoader\"];\n\n    function TaskboardController(_at_scope, _at_rootscope, _at_repo, _at_confirm, _at_rs, _at_params, _at_q, _at_appTitle, _at_location, _at_navUrls, _at_events, _at_analytics, tgLoader) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.appTitle = _at_appTitle;\n      this.location = _at_location;\n      this.navUrls = _at_navUrls;\n      this.events = _at_events;\n      this.analytics = _at_analytics;\n      bindMethods(this);\n      this.scope.sectionName = \"Taskboard\";\n      this.initializeEventHandlers();\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Taskboard - \" + _this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      promise[\"finally\"](tgLoader.pageLoaded);\n    }\n\n    TaskboardController.prototype.initializeEventHandlers = function() {\n      this.scope.$on(\"taskform:bulk:success\", (function(_this) {\n        return function() {\n          _this.loadTaskboard();\n          return _this.analytics.trackEvent(\"task\", \"create\", \"bulk create task on taskboard\", 1);\n        };\n      })(this));\n      this.scope.$on(\"taskform:new:success\", (function(_this) {\n        return function() {\n          _this.loadTaskboard();\n          return _this.analytics.trackEvent(\"task\", \"create\", \"create task on taskboard\", 1);\n        };\n      })(this));\n      this.scope.$on(\"taskform:edit:success\", (function(_this) {\n        return function() {\n          return _this.loadTaskboard();\n        };\n      })(this));\n      this.scope.$on(\"taskboard:task:move\", this.taskMove);\n      return this.scope.$on(\"assigned-to:added\", (function(_this) {\n        return function(ctx, userId, task) {\n          var promise;\n          task.assigned_to = userId;\n          promise = _this.repo.save(task);\n          return promise.then(null, function() {\n            return console.log(\"FAIL\");\n          });\n        };\n      })(this));\n    };\n\n    TaskboardController.prototype.initializeSubscription = function() {\n      var routingKey, routingKey1;\n      routingKey = \"changes.project.\" + this.scope.projectId + \".tasks\";\n      this.events.subscribe(this.scope, routingKey, (function(_this) {\n        return function(message) {\n          return _this.loadTaskboard();\n        };\n      })(this));\n      routingKey1 = \"changes.project.\" + this.scope.projectId + \".userstories\";\n      return this.events.subscribe(this.scope, routingKey1, (function(_this) {\n        return function(message) {\n          _this.refreshTagsColors();\n          _this.loadSprintStats();\n          return _this.loadSprint();\n        };\n      })(this));\n    };\n\n    TaskboardController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.pointsList = _.sortBy(project.points, \"order\");\n          _this.scope.pointsById = groupBy(project.points, function(e) {\n            return e.id;\n          });\n          _this.scope.roleById = groupBy(project.roles, function(e) {\n            return e.id;\n          });\n          _this.scope.taskStatusList = _.sortBy(project.task_statuses, \"order\");\n          _this.scope.usStatusList = _.sortBy(project.us_statuses, \"order\");\n          _this.scope.usStatusById = groupBy(project.us_statuses, function(e) {\n            return e.id;\n          });\n          _this.scope.$emit('project:loaded', project);\n          return project;\n        };\n      })(this));\n    };\n\n    TaskboardController.prototype.loadSprintStats = function() {\n      return this.rs.sprints.stats(this.scope.projectId, this.scope.sprintId).then((function(_this) {\n        return function(stats) {\n          var completedPointsSum, remainingPointsSum, remainingTasks, totalPointsSum;\n          totalPointsSum = _.reduce(_.values(stats.total_points), (function(res, n) {\n            return res + n;\n          }), 0);\n          completedPointsSum = _.reduce(_.values(stats.completed_points), (function(res, n) {\n            return res + n;\n          }), 0);\n          remainingPointsSum = totalPointsSum - completedPointsSum;\n          remainingTasks = stats.total_tasks - stats.completed_tasks;\n          _this.scope.stats = stats;\n          _this.scope.stats.totalPointsSum = totalPointsSum;\n          _this.scope.stats.completedPointsSum = completedPointsSum;\n          _this.scope.stats.remainingPointsSum = remainingPointsSum;\n          _this.scope.stats.remainingTasks = remainingTasks;\n          if (stats.totalPointsSum) {\n            _this.scope.stats.completedPercentage = Math.round(100 * stats.completedPointsSum / stats.totalPointsSum);\n          } else {\n            _this.scope.stats.completedPercentage = 0;\n          }\n          _this.scope.stats.openTasks = stats.total_tasks - stats.completed_tasks;\n          return stats;\n        };\n      })(this));\n    };\n\n    TaskboardController.prototype.refreshTagsColors = function() {\n      return this.rs.projects.tagsColors(this.scope.projectId).then((function(_this) {\n        return function(tags_colors) {\n          return _this.scope.project.tags_colors = tags_colors;\n        };\n      })(this));\n    };\n\n    TaskboardController.prototype.loadSprint = function() {\n      return this.rs.sprints.get(this.scope.projectId, this.scope.sprintId).then((function(_this) {\n        return function(sprint) {\n          _this.scope.sprint = sprint;\n          _this.scope.userstories = _.sortBy(sprint.user_stories, \"sprint_order\");\n          return sprint;\n        };\n      })(this));\n    };\n\n    TaskboardController.prototype.loadTasks = function() {\n      return this.rs.tasks.list(this.scope.projectId, this.scope.sprintId).then((function(_this) {\n        return function(tasks) {\n          var status, task, us, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;\n          _this.scope.tasks = _.sortBy(tasks, 'taskboard_order');\n          _this.scope.usTasks = {};\n          _ref = _.union(_this.scope.userstories, [\n            {\n              id: null\n            }\n          ]);\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            us = _ref[_i];\n            _this.scope.usTasks[us.id] = {};\n            _ref1 = _this.scope.taskStatusList;\n            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n              status = _ref1[_j];\n              _this.scope.usTasks[us.id][status.id] = [];\n            }\n          }\n          _ref2 = _this.scope.tasks;\n          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n            task = _ref2[_k];\n            if ((_this.scope.usTasks[task.user_story] != null) && (_this.scope.usTasks[task.user_story][task.status] != null)) {\n              _this.scope.usTasks[task.user_story][task.status].push(task);\n            }\n          }\n          return tasks;\n        };\n      })(this));\n    };\n\n    TaskboardController.prototype.loadTaskboard = function() {\n      return this.q.all([\n        this.refreshTagsColors(), this.loadSprintStats(), this.loadSprint().then((function(_this) {\n          return function() {\n            return _this.loadTasks();\n          };\n        })(this))\n      ]);\n    };\n\n    TaskboardController.prototype.loadInitialData = function() {\n      var params, promise;\n      params = {\n        pslug: this.params.pslug,\n        sslug: this.params.sslug\n      };\n      promise = this.repo.resolve(params).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          _this.scope.sprintId = data.milestone;\n          _this.initializeSubscription();\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadProject();\n        };\n      })(this)).then((function(_this) {\n        return function() {\n          return _this.loadUsersAndRoles();\n        };\n      })(this)).then((function(_this) {\n        return function() {\n          return _this.loadTaskboard();\n        };\n      })(this));\n    };\n\n    TaskboardController.prototype.refreshTasksOrder = function(tasks) {\n      var data, items;\n      items = this.resortTasks(tasks);\n      data = this.prepareBulkUpdateData(items);\n      return this.rs.tasks.bulkUpdateTaskTaskboardOrder(this.scope.project.id, data);\n    };\n\n    TaskboardController.prototype.resortTasks = function(tasks) {\n      var index, item, items, _i, _len;\n      items = [];\n      for (index = _i = 0, _len = tasks.length; _i < _len; index = ++_i) {\n        item = tasks[index];\n        item[\"taskboard_order\"] = index;\n        if (item.isModified()) {\n          items.push(item);\n        }\n      }\n      return items;\n    };\n\n    TaskboardController.prototype.prepareBulkUpdateData = function(uses) {\n      return _.map(uses, function(x) {\n        return {\n          \"task_id\": x.id,\n          \"order\": x[\"taskboard_order\"]\n        };\n      });\n    };\n\n    TaskboardController.prototype.taskMove = function(ctx, task, usId, statusId, order) {\n      var promise, r, tasks;\n      r = this.scope.usTasks[task.user_story][task.status].indexOf(task);\n      this.scope.usTasks[task.user_story][task.status].splice(r, 1);\n      tasks = this.scope.usTasks[usId][statusId];\n      tasks.splice(order, 0, task);\n      task.user_story = usId;\n      task.status = statusId;\n      task.taskboard_order = order;\n      promise = this.repo.save(task);\n      this.rootscope.$broadcast(\"sprint:task:moved\", task);\n      promise.then((function(_this) {\n        return function() {\n          _this.refreshTasksOrder(tasks);\n          return _this.loadSprintStats();\n        };\n      })(this));\n      return promise.then(null, (function(_this) {\n        return function() {\n          return console.log(\"FAIL TASK SAVE\");\n        };\n      })(this));\n    };\n\n    TaskboardController.prototype.addNewTask = function(type, us) {\n      switch (type) {\n        case \"standard\":\n          return this.rootscope.$broadcast(\"taskform:new\", this.scope.sprintId, us != null ? us.id : void 0);\n        case \"bulk\":\n          return this.rootscope.$broadcast(\"taskform:bulk\", this.scope.sprintId, us != null ? us.id : void 0);\n      }\n    };\n\n    TaskboardController.prototype.editTaskAssignedTo = function(task) {\n      return this.rootscope.$broadcast(\"assigned-to:add\", task);\n    };\n\n    return TaskboardController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin));\n\n  module.controller(\"TaskboardController\", TaskboardController);\n\n  TaskboardDirective = function($rootscope) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var $ctrl, tableBodyDom;\n      $ctrl = $el.controller();\n      $el.on(\"click\", \".toggle-analytics-visibility\", function(event) {\n        var target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        target.toggleClass('active');\n        return $rootscope.$broadcast(\"taskboard:graph:toggle-visibility\");\n      });\n      tableBodyDom = $el.find(\".taskboard-table-body\");\n      tableBodyDom.on(\"scroll\", function(event) {\n        var tableHeaderDom, target;\n        target = angular.element(event.currentTarget);\n        tableHeaderDom = $el.find(\".taskboard-table-header .taskboard-table-inner\");\n        return tableHeaderDom.css(\"left\", -1 * target.scrollLeft());\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgTaskboard\", [\"$rootScope\", TaskboardDirective]);\n\n  TaskboardTaskDirective = function($rootscope) {\n    var link;\n    link = function($scope, $el, $attrs, $model) {\n      $el.disableSelection();\n      $scope.$watch(\"task\", function(task) {\n        if (task.is_blocked && !$el.hasClass(\"blocked\")) {\n          return $el.addClass(\"blocked\");\n        } else if (!task.is_blocked && $el.hasClass(\"blocked\")) {\n          return $el.removeClass(\"blocked\");\n        }\n      });\n      return $el.find(\".icon-edit\").on(\"click\", function(event) {\n        if ($el.find('.icon-edit').hasClass('noclick')) {\n          return;\n        }\n        return $scope.$apply(function() {\n          return $rootscope.$broadcast(\"taskform:edit\", $scope.task);\n        });\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgTaskboardTask\", [\"$rootScope\", TaskboardTaskDirective]);\n\n  TaskboardSquishColumnDirective = function(rs) {\n    var avatarWidth, link, maxColumnWidth;\n    avatarWidth = 40;\n    maxColumnWidth = 300;\n    link = function($scope, $el, $attrs) {\n      var getCeilWidth, recalculateStatusColumnWidth, recalculateTaskboardWidth, refreshTaskboardTableWidth, setStatusColumnWidth;\n      $scope.$on(\"sprint:task:moved\", (function(_this) {\n        return function() {\n          return recalculateTaskboardWidth();\n        };\n      })(this));\n      bindOnce($scope, \"usTasks\", function(project) {\n        $scope.statusesFolded = rs.tasks.getStatusColumnModes($scope.project.id);\n        $scope.usFolded = rs.tasks.getUsRowModes($scope.project.id, $scope.sprintId);\n        return recalculateTaskboardWidth();\n      });\n      $scope.foldStatus = function(status) {\n        $scope.statusesFolded[status.id] = !!!$scope.statusesFolded[status.id];\n        rs.tasks.storeStatusColumnModes($scope.projectId, $scope.statusesFolded);\n        return recalculateTaskboardWidth();\n      };\n      $scope.foldUs = function(us) {\n        if (!us) {\n          $scope.usFolded[null] = !!!$scope.usFolded[null];\n        } else {\n          $scope.usFolded[us.id] = !!!$scope.usFolded[us.id];\n        }\n        rs.tasks.storeUsRowModes($scope.projectId, $scope.sprintId, $scope.usFolded);\n        return recalculateTaskboardWidth();\n      };\n      getCeilWidth = (function(_this) {\n        return function(usId, statusId) {\n          var tasks, tasksMatrixSize, width;\n          tasks = $scope.usTasks[usId][statusId].length;\n          if ($scope.statusesFolded[statusId]) {\n            if (tasks && $scope.usFolded[usId]) {\n              tasksMatrixSize = Math.round(Math.sqrt(tasks));\n              width = avatarWidth * tasksMatrixSize;\n            } else {\n              width = avatarWidth;\n            }\n            return width;\n          }\n          return 0;\n        };\n      })(this);\n      setStatusColumnWidth = (function(_this) {\n        return function(statusId, width) {\n          var column;\n          column = $el.find(\".squish-status-\" + statusId);\n          if (width) {\n            return column.css('max-width', width);\n          } else {\n            return column.css(\"max-width\", maxColumnWidth);\n          }\n        };\n      })(this);\n      refreshTaskboardTableWidth = (function(_this) {\n        return function() {\n          var columnWidths, columns, totalWidth;\n          columnWidths = [];\n          columns = $el.find(\".task-colum-name\");\n          columnWidths = _.map(columns, function(column) {\n            return $(column).outerWidth(true);\n          });\n          totalWidth = _.reduce(columnWidths, function(total, width) {\n            return total + width;\n          });\n          return $el.find('.taskboard-table-inner').css(\"width\", totalWidth);\n        };\n      })(this);\n      recalculateStatusColumnWidth = (function(_this) {\n        return function(statusId) {\n          var statusFoldedWidth;\n          statusFoldedWidth = getCeilWidth(null, statusId);\n          _.forEach($scope.userstories, function(us) {\n            var width;\n            width = getCeilWidth(us.id, statusId);\n            if (width > statusFoldedWidth) {\n              return statusFoldedWidth = width;\n            }\n          });\n          return setStatusColumnWidth(statusId, statusFoldedWidth);\n        };\n      })(this);\n      return recalculateTaskboardWidth = (function(_this) {\n        return function() {\n          _.forEach($scope.taskStatusList, function(status) {\n            return recalculateStatusColumnWidth(status.id);\n          });\n          refreshTaskboardTableWidth();\n        };\n      })(this);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgTaskboardSquishColumn\", [\"$tgResources\", TaskboardSquishColumnDirective]);\n\n  TaskboardUserDirective = function($log) {\n    var clickable, link;\n    clickable = false;\n    link = function($scope, $el, $attrs) {\n      var username_label;\n      username_label = $el.parent().find(\"a.task-assigned\");\n      username_label.on(\"click\", function(event) {\n        var $ctrl;\n        if ($el.find('a').hasClass('noclick')) {\n          return;\n        }\n        $ctrl = $el.controller();\n        return $ctrl.editTaskAssignedTo($scope.task);\n      });\n      $scope.$watch('task.assigned_to', function(assigned_to) {\n        var user;\n        user = $scope.usersById[assigned_to];\n        if (user === void 0) {\n          _.assign($scope, {\n            name: \"Unassigned\",\n            imgurl: \"/images/unnamed.png\",\n            clickable: clickable\n          });\n        } else {\n          _.assign($scope, {\n            name: user.full_name_display,\n            imgurl: user.photo,\n            clickable: clickable\n          });\n        }\n        return username_label.text($scope.name);\n      });\n      return bindOnce($scope, \"project\", function(project) {\n        if (project.my_permissions.indexOf(\"modify_task\") > -1) {\n          clickable = true;\n          return $el.find(\".avatar-assigned-to\").on(\"click\", (function(_this) {\n            return function(event) {\n              var $ctrl;\n              if ($el.find('a').hasClass('noclick')) {\n                return;\n              }\n              $ctrl = $el.controller();\n              return $ctrl.editTaskAssignedTo($scope.task);\n            };\n          })(this));\n        }\n      });\n    };\n    return {\n      link: link,\n      templateUrl: \"taskboard/taskboard-user.html\",\n      scope: {\n        \"usersById\": \"=users\",\n        \"project\": \"=\",\n        \"task\": \"=\"\n      }\n    };\n  };\n\n  module.directive(\"tgTaskboardUserAvatar\", [\"$log\", TaskboardUserDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/taskboard/sortable.coffee\n */\n\n(function() {\n  var TaskboardSortableDirective, bindOnce, groupBy, mixOf, module, scopeDefer, taiga, toggleText;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  toggleText = this.taiga.toggleText;\n\n  scopeDefer = this.taiga.scopeDefer;\n\n  bindOnce = this.taiga.bindOnce;\n\n  groupBy = this.taiga.groupBy;\n\n  module = angular.module(\"taigaBacklog\");\n\n  TaskboardSortableDirective = function($repo, $rs, $rootscope) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var deleteElement, itemEl, newParentScope, oldParentScope, tdom;\n      oldParentScope = null;\n      newParentScope = null;\n      itemEl = null;\n      tdom = $el;\n      deleteElement = function(itemEl) {\n        itemEl.scope().$destroy();\n        itemEl.off();\n        return itemEl.remove();\n      };\n      tdom.sortable({\n        handle: \".taskboard-task-inner\",\n        dropOnEmpty: true,\n        connectWith: \".taskboard-tasks-box\",\n        revert: 400\n      });\n      tdom.on(\"sortstop\", function(event, ui) {\n        var itemIndex, itemTask, newStatusId, newUsId, oldStatusId, oldUsId, parentEl;\n        parentEl = ui.item.parent();\n        itemEl = ui.item;\n        itemTask = itemEl.scope().task;\n        itemIndex = itemEl.index();\n        newParentScope = parentEl.scope();\n        oldUsId = oldParentScope.us ? oldParentScope.us.id : null;\n        oldStatusId = oldParentScope.st.id;\n        newUsId = newParentScope.us ? newParentScope.us.id : null;\n        newStatusId = newParentScope.st.id;\n        if (newStatusId !== oldStatusId || newUsId !== oldUsId) {\n          deleteElement(itemEl);\n        }\n        $scope.$apply(function() {\n          return $rootscope.$broadcast(\"taskboard:task:move\", itemTask, newUsId, newStatusId, itemIndex);\n        });\n        return ui.item.find('a').removeClass('noclick');\n      });\n      tdom.on(\"sortstart\", function(event, ui) {\n        oldParentScope = ui.item.parent().scope();\n        return ui.item.find('a').addClass('noclick');\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgTaskboardSortable\", [\"$tgRepo\", \"$tgResources\", \"$rootScope\", TaskboardSortableDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/kanban/main.coffee\n */\n\n(function() {\n  var KanbanArchivedStatusHeaderDirective, KanbanArchivedStatusIntroDirective, KanbanController, KanbanDirective, KanbanSquishColumnDirective, KanbanUserDirective, KanbanUserstoryDirective, KanbanWipLimitDirective, bindMethods, bindOnce, defaultViewMode, defaultViewModes, groupBy, mixOf, module, scopeDefer, taiga, timeout, toggleText,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  toggleText = this.taiga.toggleText;\n\n  scopeDefer = this.taiga.scopeDefer;\n\n  bindOnce = this.taiga.bindOnce;\n\n  groupBy = this.taiga.groupBy;\n\n  timeout = this.taiga.timeout;\n\n  bindMethods = this.taiga.bindMethods;\n\n  module = angular.module(\"taigaKanban\");\n\n  defaultViewMode = \"maximized\";\n\n  defaultViewModes = {\n    maximized: {\n      cardClass: \"kanban-task-maximized\"\n    },\n    minimized: {\n      cardClass: \"kanban-task-minimized\"\n    }\n  };\n\n  KanbanController = (function(_super) {\n    __extends(KanbanController, _super);\n\n    KanbanController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$appTitle\", \"$tgNavUrls\", \"$tgEvents\", \"$tgAnalytics\", \"tgLoader\"];\n\n    function KanbanController(_at_scope, _at_rootscope, _at_repo, _at_confirm, _at_rs, _at_params, _at_q, _at_location, _at_appTitle, _at_navUrls, _at_events, _at_analytics, tgLoader) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.appTitle = _at_appTitle;\n      this.navUrls = _at_navUrls;\n      this.events = _at_events;\n      this.analytics = _at_analytics;\n      bindMethods(this);\n      this.scope.sectionName = \"Kanban\";\n      this.scope.statusViewModes = {};\n      this.initializeEventHandlers();\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Kanban - \" + _this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      promise[\"finally\"](tgLoader.pageLoaded);\n    }\n\n    KanbanController.prototype.initializeEventHandlers = function() {\n      this.scope.$on(\"usform:new:success\", (function(_this) {\n        return function() {\n          _this.loadUserstories();\n          _this.refreshTagsColors();\n          return _this.analytics.trackEvent(\"userstory\", \"create\", \"create userstory on kanban\", 1);\n        };\n      })(this));\n      this.scope.$on(\"usform:bulk:success\", (function(_this) {\n        return function() {\n          _this.loadUserstories();\n          return _this.analytics.trackEvent(\"userstory\", \"create\", \"bulk create userstory on kanban\", 1);\n        };\n      })(this));\n      this.scope.$on(\"usform:edit:success\", (function(_this) {\n        return function() {\n          _this.loadUserstories();\n          return _this.refreshTagsColors();\n        };\n      })(this));\n      this.scope.$on(\"assigned-to:added\", this.onAssignedToChanged);\n      this.scope.$on(\"kanban:us:move\", this.moveUs);\n      this.scope.$on(\"kanban:show-userstories-for-status\", this.loadUserStoriesForStatus);\n      return this.scope.$on(\"kanban:hide-userstories-for-status\", this.hideUserStoriesForStatus);\n    };\n\n    KanbanController.prototype.addNewUs = function(type, statusId) {\n      switch (type) {\n        case \"standard\":\n          return this.rootscope.$broadcast(\"usform:new\", this.scope.projectId, statusId, this.scope.usStatusList);\n        case \"bulk\":\n          return this.rootscope.$broadcast(\"usform:bulk\", this.scope.projectId, statusId);\n      }\n    };\n\n    KanbanController.prototype.changeUsAssignedTo = function(us) {\n      return this.rootscope.$broadcast(\"assigned-to:add\", us);\n    };\n\n    KanbanController.prototype.onAssignedToChanged = function(ctx, userid, us) {\n      var promise;\n      us.assigned_to = userid;\n      promise = this.repo.save(us);\n      return promise.then(null, function() {\n        return console.log(\"FAIL\");\n      });\n    };\n\n    KanbanController.prototype.refreshTagsColors = function() {\n      return this.rs.projects.tagsColors(this.scope.projectId).then((function(_this) {\n        return function(tags_colors) {\n          return _this.scope.project.tags_colors = tags_colors;\n        };\n      })(this));\n    };\n\n    KanbanController.prototype.loadUserstories = function() {\n      var params;\n      params = {\n        status__is_archived: false\n      };\n      return this.rs.userstories.listAll(this.scope.projectId, params).then((function(_this) {\n        return function(userstories) {\n          var status, usByStatus, _i, _len, _ref;\n          _this.scope.userstories = userstories;\n          usByStatus = _.groupBy(userstories, \"status\");\n          _ref = _this.scope.usStatusList;\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            status = _ref[_i];\n            if (usByStatus[status.id] == null) {\n              usByStatus[status.id] = [];\n            }\n            if (status.is_archived && (_this.scope.usByStatus != null)) {\n              usByStatus[status.id] = _this.scope.usByStatus[status.id];\n            }\n            usByStatus[status.id] = _.sortBy(usByStatus[status.id], \"kanban_order\");\n          }\n          _this.scope.usByStatus = usByStatus;\n          scopeDefer(_this.scope, function() {\n            return _this.scope.$broadcast(\"userstories:loaded\", userstories);\n          });\n          return userstories;\n        };\n      })(this));\n    };\n\n    KanbanController.prototype.loadUserStoriesForStatus = function(ctx, statusId) {\n      var params;\n      params = {\n        status: statusId\n      };\n      return this.rs.userstories.listAll(this.scope.projectId, params).then((function(_this) {\n        return function(userstories) {\n          _this.scope.usByStatus[statusId] = _.sortBy(userstories, \"kanban_order\");\n          _this.scope.$broadcast(\"kanban:shown-userstories-for-status\", statusId, userstories);\n          return userstories;\n        };\n      })(this));\n    };\n\n    KanbanController.prototype.hideUserStoriesForStatus = function(ctx, statusId) {\n      this.scope.usByStatus[statusId] = [];\n      return this.scope.$broadcast(\"kanban:hidden-userstories-for-status\", statusId);\n    };\n\n    KanbanController.prototype.loadKanban = function() {\n      return this.q.all([this.refreshTagsColors(), this.loadUserstories()]);\n    };\n\n    KanbanController.prototype.loadProject = function() {\n      return this.rs.projects.getBySlug(this.params.pslug).then((function(_this) {\n        return function(project) {\n          _this.scope.projectId = project.id;\n          _this.scope.project = project;\n          _this.scope.projectId = project.id;\n          _this.scope.points = _.sortBy(project.points, \"order\");\n          _this.scope.pointsById = groupBy(project.points, function(x) {\n            return x.id;\n          });\n          _this.scope.usStatusById = groupBy(project.us_statuses, function(x) {\n            return x.id;\n          });\n          _this.scope.usStatusList = _.sortBy(project.us_statuses, \"order\");\n          _this.generateStatusViewModes();\n          _this.scope.$emit(\"project:loaded\", project);\n          return project;\n        };\n      })(this));\n    };\n\n    KanbanController.prototype.initializeSubscription = function() {\n      var routingKey1;\n      routingKey1 = \"changes.project.\" + this.scope.projectId + \".userstories\";\n      return this.events.subscribe(this.scope, routingKey1, (function(_this) {\n        return function(message) {\n          return _this.loadUserstories();\n        };\n      })(this));\n    };\n\n    KanbanController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.loadProject();\n      return promise.then((function(_this) {\n        return function(project) {\n          _this.fillUsersAndRoles(project.users, project.roles);\n          _this.initializeSubscription();\n          return _this.loadKanban().then(function() {\n            return _this.scope.$broadcast(\"redraw:wip\");\n          });\n        };\n      })(this));\n    };\n\n    KanbanController.prototype.generateStatusViewModes = function() {\n      var mode, status, storedStatusViewModes, _i, _len, _ref;\n      storedStatusViewModes = this.rs.kanban.getStatusViewModes(this.scope.projectId);\n      this.scope.statusViewModes = {};\n      _ref = this.scope.usStatusList;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        status = _ref[_i];\n        mode = storedStatusViewModes[status.id];\n        this.scope.statusViewModes[status.id] = _.has(defaultViewModes, mode) ? mode : defaultViewMode;\n      }\n      return this.storeStatusViewModes();\n    };\n\n    KanbanController.prototype.storeStatusViewModes = function() {\n      return this.rs.kanban.storeStatusViewModes(this.scope.projectId, this.scope.statusViewModes);\n    };\n\n    KanbanController.prototype.updateStatusViewMode = function(statusId, newViewMode) {\n      this.scope.statusViewModes[statusId] = newViewMode;\n      return this.storeStatusViewModes();\n    };\n\n    KanbanController.prototype.getCardClass = function(statusId) {\n      var mode;\n      mode = this.scope.statusViewModes[statusId] || defaultViewMode;\n      return defaultViewModes[mode].cardClass || defaultViewModes[defaultViewMode].cardClass;\n    };\n\n    KanbanController.prototype.prepareBulkUpdateData = function(uses, field) {\n      if (field == null) {\n        field = \"kanban_order\";\n      }\n      return _.map(uses, function(x) {\n        return {\n          \"us_id\": x.id,\n          \"order\": x[field]\n        };\n      });\n    };\n\n    KanbanController.prototype.resortUserStories = function(uses) {\n      var index, item, items, _i, _len;\n      items = [];\n      for (index = _i = 0, _len = uses.length; _i < _len; index = ++_i) {\n        item = uses[index];\n        item.kanban_order = index;\n        if (item.isModified()) {\n          items.push(item);\n        }\n      }\n      return items;\n    };\n\n    KanbanController.prototype.moveUs = function(ctx, us, oldStatusId, newStatusId, index) {\n      var itemsToSave, promise, r;\n      if (oldStatusId !== newStatusId) {\n        r = this.scope.usByStatus[oldStatusId].indexOf(us);\n        this.scope.usByStatus[oldStatusId].splice(r, 1);\n        this.scope.usByStatus[newStatusId].splice(index, 0, us);\n        us.status = newStatusId;\n      } else {\n        r = this.scope.usByStatus[newStatusId].indexOf(us);\n        this.scope.usByStatus[newStatusId].splice(r, 1);\n        this.scope.usByStatus[newStatusId].splice(index, 0, us);\n      }\n      itemsToSave = this.resortUserStories(this.scope.usByStatus[newStatusId]);\n      this.scope.usByStatus[newStatusId] = _.sortBy(this.scope.usByStatus[newStatusId], \"kanban_order\");\n      promise = this.repo.save(us);\n      promise = promise.then((function(_this) {\n        return function() {\n          var data;\n          itemsToSave = _.reject(itemsToSave, {\n            \"id\": us.id\n          });\n          data = _this.prepareBulkUpdateData(itemsToSave);\n          return _this.rs.userstories.bulkUpdateKanbanOrder(us.project, data).then(function() {\n            return itemsToSave;\n          });\n        };\n      })(this));\n      return promise;\n    };\n\n    return KanbanController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin, taiga.FiltersMixin));\n\n  module.controller(\"KanbanController\", KanbanController);\n\n  KanbanDirective = function($repo, $rootscope) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var tableBodyDom;\n      tableBodyDom = $el.find(\".kanban-table-body\");\n      tableBodyDom.on(\"scroll\", function(event) {\n        var tableHeaderDom, target;\n        target = angular.element(event.currentTarget);\n        tableHeaderDom = $el.find(\".kanban-table-header .kanban-table-inner\");\n        return tableHeaderDom.css(\"left\", -1 * target.scrollLeft());\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgKanban\", [\"$tgRepo\", \"$rootScope\", KanbanDirective]);\n\n  KanbanArchivedStatusHeaderDirective = function($rootscope) {\n    var hideArchivedText, link, showArchivedText;\n    showArchivedText = \"Show archived\";\n    hideArchivedText = \"Hide archived\";\n    link = function($scope, $el, $attrs) {\n      var hidden, status;\n      status = $scope.$eval($attrs.tgKanbanArchivedStatusHeader);\n      hidden = true;\n      $scope[\"class\"] = \"icon icon-open-eye\";\n      $scope.title = showArchivedText;\n      $el.on(\"click\", function(event) {\n        hidden = !hidden;\n        return $scope.$apply(function() {\n          if (hidden) {\n            $scope[\"class\"] = \"icon icon-open-eye\";\n            $scope.title = showArchivedText;\n            return $rootscope.$broadcast(\"kanban:hide-userstories-for-status\", status.id);\n          } else {\n            $scope[\"class\"] = \"icon icon-closed-eye\";\n            $scope.title = hideArchivedText;\n            return $rootscope.$broadcast(\"kanban:show-userstories-for-status\", status.id);\n          }\n        });\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgKanbanArchivedStatusHeader\", [\"$rootScope\", KanbanArchivedStatusHeaderDirective]);\n\n  KanbanArchivedStatusIntroDirective = function() {\n    var hiddenUserStoriexText, link, userStories;\n    hiddenUserStoriexText = \"The user stories in this status are hidden by default\";\n    userStories = [];\n    link = function($scope, $el, $attrs) {\n      var status, updateIntroText;\n      status = $scope.$eval($attrs.tgKanbanArchivedStatusIntro);\n      $el.text(hiddenUserStoriexText);\n      updateIntroText = function() {\n        if (userStories.length > 0) {\n          return $el.text(\"\");\n        } else {\n          return $el.text(hiddenUserStoriexText);\n        }\n      };\n      $scope.$on(\"kanban:us:move\", function(ctx, itemUs, oldStatusId, newStatusId, itemIndex) {\n        var r;\n        if (status.id === newStatusId) {\n          if (status.id === oldStatusId) {\n            r = userStories.indexOf(itemUs);\n            userStories.splice(r, 1);\n            userStories.splice(itemIndex, 0, itemUs);\n          } else {\n            itemUs.isArchived = true;\n            userStories.splice(itemIndex, 0, itemUs);\n          }\n        } else if (status.id === oldStatusId) {\n          itemUs.isArchived = false;\n          r = userStories.indexOf(itemUs);\n          userStories.splice(r, 1);\n        }\n        return updateIntroText();\n      });\n      $scope.$on(\"kanban:shown-userstories-for-status\", function(ctx, statusId, userStoriesLoaded) {\n        if (statusId === status.id) {\n          userStories = _.filter(userStoriesLoaded, function(us) {\n            return us.status === status.id;\n          });\n          return updateIntroText();\n        }\n      });\n      $scope.$on(\"kanban:hidden-userstories-for-status\", function(ctx, statusId) {\n        if (statusId === status.id) {\n          userStories = [];\n          return updateIntroText();\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgKanbanArchivedStatusIntro\", KanbanArchivedStatusIntroDirective);\n\n  KanbanUserstoryDirective = function($rootscope) {\n    var link;\n    link = function($scope, $el, $attrs, $model) {\n      $el.disableSelection();\n      $scope.$watch(\"us\", function(us) {\n        if (us.is_blocked && !$el.hasClass(\"blocked\")) {\n          return $el.addClass(\"blocked\");\n        } else if (!us.is_blocked && $el.hasClass(\"blocked\")) {\n          return $el.removeClass(\"blocked\");\n        }\n      });\n      $el.find(\".icon-edit\").on(\"click\", function(event) {\n        if ($el.find(\".icon-edit\").hasClass(\"noclick\")) {\n          return;\n        }\n        return $scope.$apply(function() {\n          return $rootscope.$broadcast(\"usform:edit\", $model.$modelValue);\n        });\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      templateUrl: \"kanban/kanban-task.html\",\n      link: link,\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgKanbanUserstory\", [\"$rootScope\", KanbanUserstoryDirective]);\n\n  KanbanSquishColumnDirective = function(rs) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var updateTableWidth;\n      $scope.$on(\"project:loaded\", function(event, project) {\n        $scope.folds = rs.kanban.getStatusColumnModes(project.id);\n        return updateTableWidth();\n      });\n      $scope.foldStatus = function(status) {\n        $scope.folds[status.id] = !!!$scope.folds[status.id];\n        rs.kanban.storeStatusColumnModes($scope.projectId, $scope.folds);\n        updateTableWidth();\n      };\n      return updateTableWidth = function() {\n        var columnWidths, totalWidth;\n        columnWidths = _.map($scope.usStatusList, function(status) {\n          if ($scope.folds[status.id]) {\n            return 40;\n          } else {\n            return 310;\n          }\n        });\n        totalWidth = _.reduce(columnWidths, function(total, width) {\n          return total + width;\n        });\n        return $el.find('.kanban-table-inner').css(\"width\", totalWidth);\n      };\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgKanbanSquishColumn\", [\"$tgResources\", KanbanSquishColumnDirective]);\n\n  KanbanWipLimitDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var redrawWipLimit;\n      $el.disableSelection();\n      redrawWipLimit = function() {\n        $el.find(\".kanban-wip-limit\").remove();\n        return timeout(200, function() {\n          var element;\n          element = $el.find(\".kanban-task\")[$scope.$eval($attrs.tgKanbanWipLimit)];\n          if (element) {\n            return angular.element(element).before(\"<div class='kanban-wip-limit'></div>\");\n          }\n        });\n      };\n      $scope.$on(\"redraw:wip\", redrawWipLimit);\n      $scope.$on(\"kanban:us:move\", redrawWipLimit);\n      $scope.$on(\"usform:new:success\", redrawWipLimit);\n      $scope.$on(\"usform:bulk:success\", redrawWipLimit);\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgKanbanWipLimit\", KanbanWipLimitDirective);\n\n  KanbanUserDirective = function($log) {\n    var clickable, link, template;\n    template = _.template(\"<figure class=\\\"avatar\\\">\\n    <a href=\\\"#\\\" title=\\\"Assign User Story\\\" <% if (!clickable) {%>class=\\\"not-clickable\\\"<% } %>>\\n        <img src=\\\"<%- imgurl %>\\\" alt=\\\"<%- name %>\\\" class=\\\"avatar\\\">\\n    </a>\\n</figure>\");\n    clickable = false;\n    link = function($scope, $el, $attrs, $model) {\n      var render, wtid;\n      if (!$attrs.tgKanbanUserAvatar) {\n        return $log.error(\"KanbanUserDirective: no attr is defined\");\n      }\n      wtid = $scope.$watch($attrs.tgKanbanUserAvatar, function(v) {\n        var user;\n        if ($scope.usersById == null) {\n          $log.error(\"KanbanUserDirective requires userById set in scope.\");\n          return wtid();\n        } else {\n          user = $scope.usersById[v];\n          return render(user);\n        }\n      });\n      render = function(user) {\n        var ctx, html, username_label;\n        if (user === void 0) {\n          ctx = {\n            name: \"Unassigned\",\n            imgurl: \"/images/unnamed.png\",\n            clickable: clickable\n          };\n        } else {\n          ctx = {\n            name: user.full_name_display,\n            imgurl: user.photo,\n            clickable: clickable\n          };\n        }\n        html = template(ctx);\n        $el.html(html);\n        username_label = $el.parent().find(\"a.task-assigned\");\n        username_label.html(ctx.name);\n        return username_label.on(\"click\", function(event) {\n          var $ctrl, us;\n          if ($el.find(\"a\").hasClass(\"noclick\")) {\n            return;\n          }\n          us = $model.$modelValue;\n          $ctrl = $el.controller();\n          return $ctrl.changeUsAssignedTo(us);\n        });\n      };\n      bindOnce($scope, \"project\", function(project) {\n        if (project.my_permissions.indexOf(\"modify_us\") > -1) {\n          clickable = true;\n          return $el.on(\"click\", (function(_this) {\n            return function(event) {\n              var $ctrl, us;\n              if ($el.find(\"a\").hasClass(\"noclick\")) {\n                return;\n              }\n              us = $model.$modelValue;\n              $ctrl = $el.controller();\n              return $ctrl.changeUsAssignedTo(us);\n            };\n          })(this));\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgKanbanUserAvatar\", [\"$log\", KanbanUserDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/kanban/sortable.coffee\n */\n\n(function() {\n  var KanbanSortableDirective, bindOnce, groupBy, mixOf, module, scopeDefer, taiga, timeout, toggleText;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  toggleText = this.taiga.toggleText;\n\n  scopeDefer = this.taiga.scopeDefer;\n\n  bindOnce = this.taiga.bindOnce;\n\n  groupBy = this.taiga.groupBy;\n\n  timeout = this.taiga.timeout;\n\n  module = angular.module(\"taigaKanban\");\n\n  KanbanSortableDirective = function($repo, $rs, $rootscope) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      bindOnce($scope, \"project\", function(project) {\n        var deleteElement, itemEl, newParentScope, oldParentScope, tdom;\n        if (!(project.my_permissions.indexOf(\"modify_us\") > -1)) {\n          return;\n        }\n        oldParentScope = null;\n        newParentScope = null;\n        itemEl = null;\n        tdom = $el;\n        deleteElement = function(itemEl) {\n          itemEl.scope().$destroy();\n          itemEl.off();\n          return itemEl.remove();\n        };\n        tdom.sortable({\n          handle: \".kanban-task-inner\",\n          dropOnEmpty: true,\n          connectWith: \".kanban-uses-box\",\n          revert: 400\n        });\n        tdom.on(\"sortstop\", function(event, ui) {\n          var itemIndex, itemUs, newStatusId, oldStatusId, parentEl;\n          parentEl = ui.item.parent();\n          itemEl = ui.item;\n          itemUs = itemEl.scope().us;\n          itemIndex = itemEl.index();\n          newParentScope = parentEl.scope();\n          newStatusId = newParentScope.s.id;\n          oldStatusId = oldParentScope.s.id;\n          if (newStatusId !== oldStatusId) {\n            deleteElement(itemEl);\n          }\n          $scope.$apply(function() {\n            return $rootscope.$broadcast(\"kanban:us:move\", itemUs, itemUs.status, newStatusId, itemIndex);\n          });\n          return ui.item.find('a').removeClass('noclick');\n        });\n        return tdom.on(\"sortstart\", function(event, ui) {\n          oldParentScope = ui.item.parent().scope();\n          return ui.item.find('a').addClass('noclick');\n        });\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgKanbanSortable\", [\"$tgRepo\", \"$tgResources\", \"$rootScope\", KanbanSortableDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/issues/detail.coffee\n */\n\n(function() {\n  var IssueDetailController, IssuePriorityButtonDirective, IssueSeverityButtonDirective, IssueStatusButtonDirective, IssueStatusDisplayDirective, IssueTypeButtonDirective, PromoteIssueToUsButtonDirective, bindOnce, groupBy, joinStr, mixOf, module, taiga, toString,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  toString = this.taiga.toString;\n\n  joinStr = this.taiga.joinStr;\n\n  groupBy = this.taiga.groupBy;\n\n  bindOnce = this.taiga.bindOnce;\n\n  module = angular.module(\"taigaIssues\");\n\n  IssueDetailController = (function(_super) {\n    __extends(IssueDetailController, _super);\n\n    IssueDetailController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$log\", \"$appTitle\", \"$tgAnalytics\", \"$tgNavUrls\", \"tgLoader\"];\n\n    function IssueDetailController(_at_scope, _at_rootscope, _at_repo, _at_confirm, _at_rs, _at_params, _at_q, _at_location, _at_log, _at_appTitle, _at_analytics, _at_navUrls, tgLoader) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.log = _at_log;\n      this.appTitle = _at_appTitle;\n      this.analytics = _at_analytics;\n      this.navUrls = _at_navUrls;\n      this.scope.issueRef = this.params.issueref;\n      this.scope.sectionName = \"Issue Details\";\n      this.initializeEventHandlers();\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          _this.appTitle.set(_this.scope.issue.subject + \" - \" + _this.scope.project.name);\n          return _this.initializeOnDeleteGoToUrl();\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      promise[\"finally\"](tgLoader.pageLoaded);\n    }\n\n    IssueDetailController.prototype.initializeEventHandlers = function() {\n      this.scope.$on(\"attachment:create\", (function(_this) {\n        return function() {\n          _this.rootscope.$broadcast(\"history:reload\");\n          return _this.analytics.trackEvent(\"attachment\", \"create\", \"create attachment on issue\", 1);\n        };\n      })(this));\n      this.scope.$on(\"attachment:edit\", (function(_this) {\n        return function() {\n          return _this.rootscope.$broadcast(\"history:reload\");\n        };\n      })(this));\n      this.scope.$on(\"attachment:delete\", (function(_this) {\n        return function() {\n          return _this.rootscope.$broadcast(\"history:reload\");\n        };\n      })(this));\n      return this.scope.$on(\"promote-issue-to-us:success\", (function(_this) {\n        return function() {\n          _this.analytics.trackEvent(\"issue\", \"promoteToUserstory\", \"promote issue to userstory\", 1);\n          _this.rootscope.$broadcast(\"history:reload\");\n          return _this.loadIssue();\n        };\n      })(this));\n    };\n\n    IssueDetailController.prototype.initializeOnDeleteGoToUrl = function() {\n      var ctx;\n      ctx = {\n        project: this.scope.project.slug\n      };\n      if (this.scope.project.is_issues_activated) {\n        return this.scope.onDeleteGoToUrl = this.navUrls.resolve(\"project-issues\", ctx);\n      } else {\n        return this.scope.onDeleteGoToUrl = this.navUrls.resolve(\"project\", ctx);\n      }\n    };\n\n    IssueDetailController.prototype.loadProject = function() {\n      return this.rs.projects.getBySlug(this.params.pslug).then((function(_this) {\n        return function(project) {\n          _this.scope.projectId = project.id;\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          _this.scope.statusList = project.issue_statuses;\n          _this.scope.statusById = groupBy(project.issue_statuses, function(x) {\n            return x.id;\n          });\n          _this.scope.typeById = groupBy(project.issue_types, function(x) {\n            return x.id;\n          });\n          _this.scope.typeList = _.sortBy(project.issue_types, \"order\");\n          _this.scope.severityList = project.severities;\n          _this.scope.severityById = groupBy(project.severities, function(x) {\n            return x.id;\n          });\n          _this.scope.priorityList = project.priorities;\n          _this.scope.priorityById = groupBy(project.priorities, function(x) {\n            return x.id;\n          });\n          _this.scope.membersById = groupBy(project.memberships, function(x) {\n            return x.user;\n          });\n          return project;\n        };\n      })(this));\n    };\n\n    IssueDetailController.prototype.loadIssue = function() {\n      return this.rs.issues.getByRef(this.scope.projectId, this.params.issueref).then((function(_this) {\n        return function(issue) {\n          var ctx;\n          _this.scope.issue = issue;\n          _this.scope.issueId = issue.id;\n          _this.scope.commentModel = issue;\n          if (_this.scope.issue.neighbors.previous.ref != null) {\n            ctx = {\n              project: _this.scope.project.slug,\n              ref: _this.scope.issue.neighbors.previous.ref\n            };\n            _this.scope.previousUrl = _this.navUrls.resolve(\"project-issues-detail\", ctx);\n          }\n          if (_this.scope.issue.neighbors.next.ref != null) {\n            ctx = {\n              project: _this.scope.project.slug,\n              ref: _this.scope.issue.neighbors.next.ref\n            };\n            return _this.scope.nextUrl = _this.navUrls.resolve(\"project-issues-detail\", ctx);\n          }\n        };\n      })(this));\n    };\n\n    IssueDetailController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.loadProject();\n      return promise.then((function(_this) {\n        return function(project) {\n          _this.fillUsersAndRoles(project.users, project.roles);\n          return _this.loadIssue();\n        };\n      })(this));\n    };\n\n    return IssueDetailController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin));\n\n  module.controller(\"IssueDetailController\", IssueDetailController);\n\n  IssueStatusDisplayDirective = function($template) {\n    var link, template;\n    template = $template.get(\"common/components/status-display.html\", true);\n    link = function($scope, $el, $attrs) {\n      var render;\n      render = function(issue) {\n        var html;\n        html = template({\n          status: $scope.statusById[issue.status]\n        });\n        return $el.html(html);\n      };\n      $scope.$watch($attrs.ngModel, function(issue) {\n        if (issue != null) {\n          return render(issue);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgIssueStatusDisplay\", [\"$tgTemplate\", IssueStatusDisplayDirective]);\n\n  IssueStatusButtonDirective = function($rootScope, $repo, $confirm, $loading, $qqueue, $template) {\n    var link, template;\n    template = $template.get(\"issue/issues-status-button.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var isEditable, render, save;\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf(\"modify_issue\") !== -1;\n      };\n      render = (function(_this) {\n        return function(issue) {\n          var html, status;\n          status = $scope.statusById[issue.status];\n          html = template({\n            status: status,\n            statuses: $scope.statusList,\n            editable: isEditable()\n          });\n          return $el.html(html);\n        };\n      })(this);\n      save = $qqueue.bindAdd((function(_this) {\n        return function(statusId) {\n          var issue, onError, onSuccess;\n          $.fn.popover().closeAll();\n          issue = $model.$modelValue.clone();\n          issue.status = statusId;\n          onSuccess = function() {\n            $confirm.notify(\"success\");\n            $model.$setViewValue(issue);\n            $rootScope.$broadcast(\"history:reload\");\n            return $loading.finish($el.find(\".level-name\"));\n          };\n          onError = function() {\n            $confirm.notify(\"error\");\n            issue.revert();\n            $model.$setViewValue(issue);\n            return $loading.finish($el.find(\".level-name\"));\n          };\n          $loading.start($el.find(\".level-name\"));\n          return $repo.save(issue).then(onSuccess, onError);\n        };\n      })(this));\n      $el.on(\"click\", \".status-data\", function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        return $el.find(\".pop-status\").popover().open();\n      });\n      $el.on(\"click\", \".status\", function(event) {\n        var target;\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        target = angular.element(event.currentTarget);\n        return save(target.data(\"status-id\"));\n      });\n      $scope.$watch($attrs.ngModel, function(issue) {\n        if (issue) {\n          return render(issue);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgIssueStatusButton\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", \"$tgQqueue\", \"$tgTemplate\", IssueStatusButtonDirective]);\n\n  IssueTypeButtonDirective = function($rootScope, $repo, $confirm, $loading, $qqueue, $template) {\n    var link, template;\n    template = $template.get(\"issue/issue-type-button.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var isEditable, render, save;\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf(\"modify_issue\") !== -1;\n      };\n      render = (function(_this) {\n        return function(issue) {\n          var html, type;\n          type = $scope.typeById[issue.type];\n          html = template({\n            type: type,\n            typees: $scope.typeList,\n            editable: isEditable()\n          });\n          return $el.html(html);\n        };\n      })(this);\n      save = $qqueue.bindAdd((function(_this) {\n        return function(type) {\n          var issue, onError, onSuccess;\n          $.fn.popover().closeAll();\n          issue = $model.$modelValue.clone();\n          issue.type = type;\n          onSuccess = function() {\n            $confirm.notify(\"success\");\n            $model.$setViewValue(issue);\n            $rootScope.$broadcast(\"history:reload\");\n            return $loading.finish($el.find(\".level-name\"));\n          };\n          onError = function() {\n            $confirm.notify(\"error\");\n            issue.revert();\n            $model.$setViewValue(issue);\n            return $loading.finish($el.find(\".level-name\"));\n          };\n          $loading.start($el.find(\".level-name\"));\n          return $repo.save(issue).then(onSuccess, onError);\n        };\n      })(this));\n      $el.on(\"click\", \".type-data\", function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        return $el.find(\".pop-type\").popover().open();\n      });\n      $el.on(\"click\", \".type\", function(event) {\n        var target, type;\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        target = angular.element(event.currentTarget);\n        type = target.data(\"type-id\");\n        return save(type);\n      });\n      $scope.$watch($attrs.ngModel, function(issue) {\n        if (issue) {\n          return render(issue);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgIssueTypeButton\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", \"$tgQqueue\", \"$tgTemplate\", IssueTypeButtonDirective]);\n\n  IssueSeverityButtonDirective = function($rootScope, $repo, $confirm, $loading, $qqueue, $template) {\n    var link, template;\n    template = $template.get(\"issue/issue-severity-button.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var isEditable, render, save;\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf(\"modify_issue\") !== -1;\n      };\n      render = (function(_this) {\n        return function(issue) {\n          var html, severity;\n          severity = $scope.severityById[issue.severity];\n          html = template({\n            severity: severity,\n            severityes: $scope.severityList,\n            editable: isEditable()\n          });\n          return $el.html(html);\n        };\n      })(this);\n      save = $qqueue.bindAdd((function(_this) {\n        return function(severity) {\n          var issue, onError, onSuccess;\n          $.fn.popover().closeAll();\n          issue = $model.$modelValue.clone();\n          issue.severity = severity;\n          onSuccess = function() {\n            $confirm.notify(\"success\");\n            $model.$setViewValue(issue);\n            $rootScope.$broadcast(\"history:reload\");\n            return $loading.finish($el.find(\".level-name\"));\n          };\n          onError = function() {\n            $confirm.notify(\"error\");\n            issue.revert();\n            $model.$setViewValue(issue);\n            return $loading.finish($el.find(\".level-name\"));\n          };\n          $loading.start($el.find(\".level-name\"));\n          return $repo.save(issue).then(onSuccess, onError);\n        };\n      })(this));\n      $el.on(\"click\", \".severity-data\", function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        return $el.find(\".pop-severity\").popover().open();\n      });\n      $el.on(\"click\", \".severity\", function(event) {\n        var severity, target;\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        target = angular.element(event.currentTarget);\n        severity = target.data(\"severity-id\");\n        return save(severity);\n      });\n      $scope.$watch($attrs.ngModel, function(issue) {\n        if (issue) {\n          return render(issue);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgIssueSeverityButton\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", \"$tgQqueue\", \"$tgTemplate\", IssueSeverityButtonDirective]);\n\n  IssuePriorityButtonDirective = function($rootScope, $repo, $confirm, $loading, $qqueue, $template) {\n    var link, template;\n    template = $template.get(\"issue/issue-priority-button.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var isEditable, render, save;\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf(\"modify_issue\") !== -1;\n      };\n      render = (function(_this) {\n        return function(issue) {\n          var html, priority;\n          priority = $scope.priorityById[issue.priority];\n          html = template({\n            priority: priority,\n            priorityes: $scope.priorityList,\n            editable: isEditable()\n          });\n          return $el.html(html);\n        };\n      })(this);\n      save = $qqueue.bindAdd((function(_this) {\n        return function(priority) {\n          var issue, onError, onSuccess;\n          $.fn.popover().closeAll();\n          issue = $model.$modelValue.clone();\n          issue.priority = priority;\n          onSuccess = function() {\n            $confirm.notify(\"success\");\n            $model.$setViewValue(issue);\n            $rootScope.$broadcast(\"history:reload\");\n            return $loading.finish($el.find(\".level-name\"));\n          };\n          onError = function() {\n            $confirm.notify(\"error\");\n            issue.revert();\n            $model.$setViewValue(issue);\n            return $loading.finish($el.find(\".level-name\"));\n          };\n          $loading.start($el.find(\".level-name\"));\n          return $repo.save(issue).then(onSuccess, onError);\n        };\n      })(this));\n      $el.on(\"click\", \".priority-data\", function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        return $el.find(\".pop-priority\").popover().open();\n      });\n      $el.on(\"click\", \".priority\", function(event) {\n        var priority, target;\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        target = angular.element(event.currentTarget);\n        priority = target.data(\"priority-id\");\n        return save(priority);\n      });\n      $scope.$watch($attrs.ngModel, function(issue) {\n        if (issue) {\n          return render(issue);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgIssuePriorityButton\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", \"$tgQqueue\", \"$tgTemplate\", IssuePriorityButtonDirective]);\n\n  PromoteIssueToUsButtonDirective = function($rootScope, $repo, $confirm, $qqueue) {\n    var link;\n    link = function($scope, $el, $attrs, $model) {\n      var save;\n      save = $qqueue.bindAdd((function(_this) {\n        return function(issue, finish) {\n          var data, onError, onSuccess;\n          data = {\n            generated_from_issue: issue.id,\n            project: issue.project,\n            subject: issue.subject,\n            description: issue.description,\n            tags: issue.tags,\n            is_blocked: issue.is_blocked,\n            blocked_note: issue.blocked_note\n          };\n          onSuccess = function() {\n            finish();\n            $confirm.notify(\"success\");\n            return $rootScope.$broadcast(\"promote-issue-to-us:success\");\n          };\n          onError = function() {\n            finish(false);\n            return $confirm.notify(\"error\");\n          };\n          return $repo.create(\"userstories\", data).then(onSuccess, onError);\n        };\n      })(this));\n      $el.on(\"click\", \"a\", function(event) {\n        var issue, message, subtitle, title;\n        event.preventDefault();\n        issue = $model.$modelValue;\n        title = \"Promote this issue to a new user story\";\n        message = \"Are you sure you want to create a new US from this Issue?\";\n        subtitle = issue.subject;\n        return $confirm.ask(title, subtitle, message).then((function(_this) {\n          return function(finish) {\n            return save(issue, finish);\n          };\n        })(this));\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      restrict: \"AE\",\n      require: \"ngModel\",\n      templateUrl: \"issue/promote-issue-to-us-button.html\",\n      link: link\n    };\n  };\n\n  module.directive(\"tgPromoteIssueToUsButton\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgQqueue\", PromoteIssueToUsButtonDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/issues/lightboxes.coffee\n */\n\n(function() {\n  var CreateBulkIssuesDirective, CreateIssueDirective, bindOnce, debounce, module, taiga;\n\n  taiga = this.taiga;\n\n  bindOnce = this.taiga.bindOnce;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaIssues\");\n\n  CreateIssueDirective = function($repo, $confirm, $rootscope, lightboxService, $loading) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var form, submit, submitButton;\n      form = $el.find(\"form\").checksley();\n      $scope.issue = {};\n      $scope.$on(\"issueform:new\", function(ctx, project) {\n        $el.find(\".tag-input\").val(\"\");\n        lightboxService.open($el);\n        return $scope.issue = {\n          project: project.id,\n          subject: \"\",\n          status: project.default_issue_status,\n          type: project.default_issue_type,\n          priority: project.default_priority,\n          severity: project.default_severity,\n          tags: []\n        };\n      });\n      $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var promise;\n          event.preventDefault();\n          if (!form.validate()) {\n            return;\n          }\n          $loading.start(submitButton);\n          promise = $repo.create(\"issues\", $scope.issue);\n          promise.then(function(data) {\n            $loading.finish(submitButton);\n            $rootscope.$broadcast(\"issueform:new:success\", data);\n            lightboxService.close($el);\n            return $confirm.notify(\"success\");\n          });\n          return promise.then(null, function() {\n            $loading.finish(submitButton);\n            return $confirm.notify(\"error\");\n          });\n        };\n      })(this));\n      submitButton = $el.find(\".submit-button\");\n      return $el.on(\"submit\", \"form\", submit);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLbCreateIssue\", [\"$tgRepo\", \"$tgConfirm\", \"$rootScope\", \"lightboxService\", \"$tgLoading\", CreateIssueDirective]);\n\n  CreateBulkIssuesDirective = function($repo, $rs, $confirm, $rootscope, $loading, lightboxService) {\n    var link;\n    link = function($scope, $el, attrs) {\n      var submit, submitButton;\n      $scope.$on(\"issueform:bulk\", function(ctx, projectId, status) {\n        lightboxService.open($el);\n        return $scope[\"new\"] = {\n          projectId: projectId,\n          bulk: \"\"\n        };\n      });\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var data, form, projectId, promise;\n          event.preventDefault();\n          form = $el.find(\"form\").checksley();\n          if (!form.validate()) {\n            return;\n          }\n          $loading.start(submitButton);\n          data = $scope[\"new\"].bulk;\n          projectId = $scope[\"new\"].projectId;\n          promise = $rs.issues.bulkCreate(projectId, data);\n          promise.then(function(result) {\n            $loading.finish(submitButton);\n            $rootscope.$broadcast(\"issueform:new:success\", result);\n            lightboxService.close($el);\n            return $confirm.notify(\"success\");\n          });\n          return promise.then(null, function() {\n            $loading.finish(submitButton);\n            return $confirm.notify(\"error\");\n          });\n        };\n      })(this));\n      submitButton = $el.find(\".submit-button\");\n      $el.on(\"submit\", \"form\", submit);\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLbCreateBulkIssues\", [\"$tgRepo\", \"$tgResources\", \"$tgConfirm\", \"$rootScope\", \"$tgLoading\", \"lightboxService\", CreateBulkIssuesDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/issues/list.coffee\n */\n\n(function() {\n  var IssueAssignedToInlineEditionDirective, IssueStatusInlineEditionDirective, IssuesController, IssuesDirective, IssuesFiltersDirective, bindOnce, debounceLeading, groupBy, joinStr, mixOf, module, startswith, taiga, toString, trim,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  trim = this.taiga.trim;\n\n  toString = this.taiga.toString;\n\n  joinStr = this.taiga.joinStr;\n\n  groupBy = this.taiga.groupBy;\n\n  bindOnce = this.taiga.bindOnce;\n\n  debounceLeading = this.taiga.debounceLeading;\n\n  startswith = this.taiga.startswith;\n\n  module = angular.module(\"taigaIssues\");\n\n  IssuesController = (function(_super) {\n    __extends(IssuesController, _super);\n\n    IssuesController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$tgUrls\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$appTitle\", \"$tgNavUrls\", \"$tgEvents\", \"$tgAnalytics\", \"tgLoader\"];\n\n    function IssuesController(_at_scope, _at_rootscope, _at_repo, _at_confirm, _at_rs, _at_urls, _at_params, _at_q, _at_location, _at_appTitle, _at_navUrls, _at_events, _at_analytics, tgLoader) {\n      var filters, promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.urls = _at_urls;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.appTitle = _at_appTitle;\n      this.navUrls = _at_navUrls;\n      this.events = _at_events;\n      this.analytics = _at_analytics;\n      this.loadIssues = __bind(this.loadIssues, this);\n      this.scope.sectionName = \"Issues\";\n      this.scope.filters = {};\n      if (_.isEmpty(this.location.search())) {\n        filters = this.rs.issues.getFilters(this.params.pslug);\n        filters.page = 1;\n        this.location.search(filters);\n        this.location.replace();\n        return;\n      }\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Issues - \" + _this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      promise[\"finally\"](tgLoader.pageLoaded);\n      this.scope.$on(\"issueform:new:success\", (function(_this) {\n        return function() {\n          _this.analytics.trackEvent(\"issue\", \"create\", \"create issue on issues list\", 1);\n          _this.loadIssues();\n          return _this.loadFilters();\n        };\n      })(this));\n    }\n\n    IssuesController.prototype.initializeSubscription = function() {\n      var routingKey;\n      routingKey = \"changes.project.\" + this.scope.projectId + \".issues\";\n      return this.events.subscribe(this.scope, routingKey, (function(_this) {\n        return function(message) {\n          return _this.loadIssues();\n        };\n      })(this));\n    };\n\n    IssuesController.prototype.storeFilters = function() {\n      return this.rs.issues.storeFilters(this.params.pslug, this.location.search());\n    };\n\n    IssuesController.prototype.loadProject = function() {\n      return this.rs.projects.getBySlug(this.params.pslug).then((function(_this) {\n        return function(project) {\n          _this.scope.projectId = project.id;\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          _this.scope.issueStatusById = groupBy(project.issue_statuses, function(x) {\n            return x.id;\n          });\n          _this.scope.issueStatusList = _.sortBy(project.issue_statuses, \"order\");\n          _this.scope.severityById = groupBy(project.severities, function(x) {\n            return x.id;\n          });\n          _this.scope.severityList = _.sortBy(project.severities, \"order\");\n          _this.scope.priorityById = groupBy(project.priorities, function(x) {\n            return x.id;\n          });\n          _this.scope.priorityList = _.sortBy(project.priorities, \"order\");\n          _this.scope.issueTypes = _.sortBy(project.issue_types, \"order\");\n          _this.scope.issueTypeById = groupBy(project.issue_types, function(x) {\n            return x.id;\n          });\n          _this.scope.membersById = groupBy(project.memberships, function(x) {\n            return x.user;\n          });\n          return project;\n        };\n      })(this));\n    };\n\n    IssuesController.prototype.getUrlFilters = function() {\n      var filters;\n      filters = _.pick(this.location.search(), \"page\", \"tags\", \"statuses\", \"types\", \"q\", \"severities\", \"priorities\", \"assignedTo\", \"createdBy\", \"orderBy\");\n      if (!filters.page) {\n        filters.page = 1;\n      }\n      return filters;\n    };\n\n    IssuesController.prototype.getUrlFilter = function(name) {\n      var filters;\n      filters = _.pick(this.location.search(), name);\n      return filters[name];\n    };\n\n    IssuesController.prototype.loadMyFilters = function() {\n      return this.rs.issues.getMyFilters(this.scope.projectId).then((function(_this) {\n        return function(filters) {\n          return _.map(filters, function(value, key) {\n            return {\n              id: key,\n              name: key,\n              type: \"myFilters\",\n              selected: false\n            };\n          });\n        };\n      })(this));\n    };\n\n    IssuesController.prototype.removeNotExistingFiltersFromUrl = function() {\n      var currentSearch, existingValues, filterName, filterValue, splittedValues, urlfilters;\n      currentSearch = this.location.search();\n      urlfilters = this.getUrlFilters();\n      for (filterName in urlfilters) {\n        filterValue = urlfilters[filterName];\n        if (filterName === \"page\" || filterName === \"orderBy\" || filterName === \"q\") {\n          continue;\n        }\n        if (filterName === \"tags\") {\n          splittedValues = _.map((\"\" + filterValue).split(\",\"));\n        } else {\n          splittedValues = _.map((\"\" + filterValue).split(\",\"), function(x) {\n            if (x === \"null\") {\n              return null;\n            } else {\n              return parseInt(x);\n            }\n          });\n        }\n        existingValues = _.intersection(splittedValues, _.map(this.scope.filters[filterName], \"id\"));\n        if (splittedValues.length !== existingValues.length) {\n          this.location.search(filterName, existingValues.join());\n        }\n      }\n      if (currentSearch !== this.location.search()) {\n        return this.location.replace();\n      }\n    };\n\n    IssuesController.prototype.markSelectedFilters = function(filters, urlfilters) {\n      var isSelected, key, name, obj, searchdata, val, value, _i, _len, _ref, _ref1, _results;\n      searchdata = {};\n      _ref = _.omit(urlfilters, \"page\", \"orderBy\");\n      for (name in _ref) {\n        value = _ref[name];\n        if (searchdata[name] == null) {\n          searchdata[name] = {};\n        }\n        _ref1 = (\"\" + value).split(\",\");\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          val = _ref1[_i];\n          searchdata[name][val] = true;\n        }\n      }\n      isSelected = function(type, id) {\n        if ((searchdata[type] != null) && searchdata[type][id]) {\n          return true;\n        }\n        return false;\n      };\n      _results = [];\n      for (key in filters) {\n        value = filters[key];\n        _results.push((function() {\n          var _j, _len1, _results1;\n          _results1 = [];\n          for (_j = 0, _len1 = value.length; _j < _len1; _j++) {\n            obj = value[_j];\n            _results1.push(obj.selected = isSelected(obj.type, obj.id) ? true : void 0);\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    IssuesController.prototype.loadFilters = function() {\n      var promise, urlfilters;\n      urlfilters = this.getUrlFilters();\n      if (urlfilters.q) {\n        this.scope.filtersQ = urlfilters.q;\n      }\n      promise = this.loadMyFilters().then((function(_this) {\n        return function(myFilters) {\n          _this.scope.filters.myFilters = myFilters;\n          return myFilters;\n        };\n      })(this));\n      promise = promise.then((function(_this) {\n        return function() {\n          return _this.rs.issues.filtersData(_this.scope.projectId);\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function(data) {\n          var choicesFiltersFormat, tagsFilterFormat, usersFiltersFormat;\n          usersFiltersFormat = function(users, type, unknownOption) {\n            var reformatedUsers, unknownItem;\n            reformatedUsers = _.map(users, function(t) {\n              return {\n                id: t[0],\n                count: t[1],\n                type: type,\n                name: t[0] ? _this.scope.usersById[t[0]].full_name_display : unknownOption\n              };\n            });\n            unknownItem = _.remove(reformatedUsers, function(u) {\n              return !u.id;\n            });\n            reformatedUsers = _.sortBy(reformatedUsers, function(u) {\n              return u.name.toUpperCase();\n            });\n            if (unknownItem.length > 0) {\n              reformatedUsers.unshift(unknownItem[0]);\n            }\n            return reformatedUsers;\n          };\n          choicesFiltersFormat = function(choices, type, byIdObject) {\n            return _.map(choices, function(t) {\n              return {\n                id: t[0],\n                name: byIdObject[t[0]].name,\n                color: byIdObject[t[0]].color,\n                count: t[1],\n                type: type\n              };\n            });\n          };\n          tagsFilterFormat = function(tags) {\n            return _.map(tags, function(t) {\n              return {\n                id: t[0],\n                name: t[0],\n                color: _this.scope.project.tags_colors[t[0]],\n                count: t[1],\n                type: \"tags\"\n              };\n            });\n          };\n          _this.scope.filters.statuses = choicesFiltersFormat(data.statuses, \"statuses\", _this.scope.issueStatusById);\n          _this.scope.filters.severities = choicesFiltersFormat(data.severities, \"severities\", _this.scope.severityById);\n          _this.scope.filters.priorities = choicesFiltersFormat(data.priorities, \"priorities\", _this.scope.priorityById);\n          _this.scope.filters.assignedTo = usersFiltersFormat(data.assigned_to, \"assignedTo\", \"Unassigned\");\n          _this.scope.filters.createdBy = usersFiltersFormat(data.created_by, \"createdBy\", \"Unknown\");\n          _this.scope.filters.types = choicesFiltersFormat(data.types, \"types\", _this.scope.issueTypeById);\n          _this.scope.filters.tags = tagsFilterFormat(data.tags);\n          _this.removeNotExistingFiltersFromUrl();\n          _this.markSelectedFilters(_this.scope.filters, urlfilters);\n          return _this.rootscope.$broadcast(\"filters:loaded\", _this.scope.filters);\n        };\n      })(this));\n    };\n\n    IssuesController.prototype.loadIssuesRequests = 0;\n\n    IssuesController.prototype.loadIssues = function() {\n      var name, promise, values, _ref;\n      this.scope.urlFilters = this.getUrlFilters();\n      this.scope.httpParams = {};\n      _ref = this.scope.urlFilters;\n      for (name in _ref) {\n        values = _ref[name];\n        if (name === \"severities\") {\n          name = \"severity\";\n        } else if (name === \"orderBy\") {\n          name = \"order_by\";\n        } else if (name === \"priorities\") {\n          name = \"priority\";\n        } else if (name === \"assignedTo\") {\n          name = \"assigned_to\";\n        } else if (name === \"createdBy\") {\n          name = \"owner\";\n        } else if (name === \"statuses\") {\n          name = \"status\";\n        } else if (name === \"types\") {\n          name = \"type\";\n        }\n        this.scope.httpParams[name] = values;\n      }\n      promise = this.rs.issues.list(this.scope.projectId, this.scope.httpParams);\n      this.loadIssuesRequests += 1;\n      promise.index = this.loadIssuesRequests;\n      return promise.then((function(_this) {\n        return function(data) {\n          if (promise.index === _this.loadIssuesRequests) {\n            _this.scope.issues = data.models;\n            _this.scope.page = data.current;\n            _this.scope.count = data.count;\n            _this.scope.paginatedBy = data.paginatedBy;\n          }\n          return data;\n        };\n      })(this));\n    };\n\n    IssuesController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.loadProject();\n      return promise.then((function(_this) {\n        return function(project) {\n          _this.fillUsersAndRoles(project.users, project.roles);\n          _this.initializeSubscription();\n          return _this.q.all([_this.loadFilters(), _this.loadIssues()]);\n        };\n      })(this));\n    };\n\n    IssuesController.prototype.saveCurrentFiltersTo = function(newFilter) {\n      var deferred;\n      deferred = this.q.defer();\n      this.rs.issues.getMyFilters(this.scope.projectId).then((function(_this) {\n        return function(filters) {\n          filters[newFilter] = _this.location.search();\n          return _this.rs.issues.storeMyFilters(_this.scope.projectId, filters).then(function() {\n            return deferred.resolve();\n          });\n        };\n      })(this));\n      return deferred.promise;\n    };\n\n    IssuesController.prototype.deleteMyFilter = function(filter) {\n      var deferred;\n      deferred = this.q.defer();\n      this.rs.issues.getMyFilters(this.scope.projectId).then((function(_this) {\n        return function(filters) {\n          delete filters[filter];\n          return _this.rs.issues.storeMyFilters(_this.scope.projectId, filters).then(function() {\n            return deferred.resolve();\n          });\n        };\n      })(this));\n      return deferred.promise;\n    };\n\n    IssuesController.prototype.addNewIssue = function() {\n      return this.rootscope.$broadcast(\"issueform:new\", this.scope.project);\n    };\n\n    IssuesController.prototype.addIssuesInBulk = function() {\n      return this.rootscope.$broadcast(\"issueform:bulk\", this.scope.projectId);\n    };\n\n    return IssuesController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin, taiga.FiltersMixin));\n\n  module.controller(\"IssuesController\", IssuesController);\n\n  IssuesDirective = function($log, $location, $template) {\n    var link, linkOrdering, linkPagination, template;\n    template = $template.get(\"issue/issue-paginator.html\", true);\n    linkPagination = function($scope, $el, $attrs, $ctrl) {\n      var $pagEl, afterCurrent, atBegin, atEnd, beforeCurrent, getNumPages, renderPagination;\n      afterCurrent = 2;\n      beforeCurrent = 4;\n      atBegin = 2;\n      atEnd = 2;\n      $pagEl = $el.find(\".issues-paginator\");\n      getNumPages = function() {\n        var numPages;\n        numPages = $scope.count / $scope.paginatedBy;\n        if (parseInt(numPages, 10) < numPages) {\n          numPages = parseInt(numPages, 10) + 1;\n        } else {\n          numPages = parseInt(numPages, 10);\n        }\n        return numPages;\n      };\n      renderPagination = function() {\n        var cpage, i, numPages, options, pages, _i;\n        numPages = getNumPages();\n        if (numPages <= 1) {\n          $pagEl.hide();\n          return;\n        }\n        $pagEl.show();\n        pages = [];\n        options = {};\n        options.pages = pages;\n        options.showPrevious = $scope.page > 1;\n        options.showNext = !($scope.page === numPages);\n        cpage = $scope.page;\n        for (i = _i = 1; 1 <= numPages ? _i <= numPages : _i >= numPages; i = 1 <= numPages ? ++_i : --_i) {\n          if (i === (cpage + afterCurrent) && numPages > (cpage + afterCurrent + atEnd)) {\n            pages.push({\n              classes: \"dots\",\n              type: \"dots\"\n            });\n          } else if (i === (cpage - beforeCurrent) && cpage > (atBegin + beforeCurrent)) {\n            pages.push({\n              classes: \"dots\",\n              type: \"dots\"\n            });\n          } else if (i > (cpage + afterCurrent) && i <= (numPages - atEnd)) {\n\n          } else if (i < (cpage - beforeCurrent) && i > atBegin) {\n\n          } else if (i === cpage) {\n            pages.push({\n              classes: \"active\",\n              num: i,\n              type: \"page-active\"\n            });\n          } else {\n            pages.push({\n              classes: \"page\",\n              num: i,\n              type: \"page\"\n            });\n          }\n        }\n        return $pagEl.html(template(options));\n      };\n      $scope.$watch(\"issues\", function(value) {\n        if (!value) {\n          return;\n        }\n        return renderPagination();\n      });\n      $el.on(\"click\", \".issues-paginator a.next\", function(event) {\n        event.preventDefault();\n        return $scope.$apply(function() {\n          $ctrl.selectFilter(\"page\", $scope.page + 1);\n          return $ctrl.loadIssues();\n        });\n      });\n      $el.on(\"click\", \".issues-paginator a.previous\", function(event) {\n        event.preventDefault();\n        return $scope.$apply(function() {\n          $ctrl.selectFilter(\"page\", $scope.page - 1);\n          return $ctrl.loadIssues();\n        });\n      });\n      return $el.on(\"click\", \".issues-paginator li.page > a\", function(event) {\n        var pagenum, target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        pagenum = target.data(\"pagenum\");\n        return $scope.$apply(function() {\n          $ctrl.selectFilter(\"page\", pagenum);\n          return $ctrl.loadIssues();\n        });\n      });\n    };\n    linkOrdering = function($scope, $el, $attrs, $ctrl) {\n      var colHeadElement, currentOrder, icon;\n      currentOrder = $ctrl.getUrlFilter(\"orderBy\") || \"created_date\";\n      if (currentOrder) {\n        icon = startswith(currentOrder, \"-\") ? \"icon-caret-up\" : \"icon-caret-down\";\n        colHeadElement = $el.find(\".row.title > div[data-fieldname='\" + (trim(currentOrder, \"-\")) + \"']\");\n        colHeadElement.html((colHeadElement.html()) + \"<span class='icon \" + icon + \"'></span>\");\n      }\n      return $el.on(\"click\", \".row.title > div\", function(event) {\n        var finalOrder, newOrder, target;\n        target = angular.element(event.currentTarget);\n        currentOrder = $ctrl.getUrlFilter(\"orderBy\");\n        newOrder = target.data(\"fieldname\");\n        finalOrder = currentOrder === newOrder ? \"-\" + newOrder : newOrder;\n        return $scope.$apply(function() {\n          $ctrl.replaceFilter(\"orderBy\", finalOrder);\n          $ctrl.storeFilters();\n          return $ctrl.loadIssues().then(function() {\n            $el.find(\".row.title > div > span.icon\").remove();\n            icon = startswith(finalOrder, \"-\") ? \"icon-caret-up\" : \"icon-caret-down\";\n            return target.html((target.html()) + \"<span class='icon \" + icon + \"'></span>\");\n          });\n        });\n      });\n    };\n    link = function($scope, $el, $attrs) {\n      var $ctrl;\n      $ctrl = $el.controller();\n      linkOrdering($scope, $el, $attrs, $ctrl);\n      linkPagination($scope, $el, $attrs, $ctrl);\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgIssues\", [\"$log\", \"$tgLocation\", \"$tgTemplate\", IssuesDirective]);\n\n  IssuesFiltersDirective = function($log, $location, $rs, $confirm, $loading, $template) {\n    var link, template, templateSelected;\n    template = $template.get(\"issue/issues-filters.html\", true);\n    templateSelected = $template.get(\"issue/issues-filters-selected.html\", true);\n    link = function($scope, $el, $attrs) {\n      var $ctrl, initializeSelectedFilters, renderFilters, renderSelectedFilters, selectQFilter, selectedFilters, showCategories, showFilters, toggleFilterSelection;\n      $ctrl = $el.closest(\".wrapper\").controller();\n      selectedFilters = [];\n      showFilters = function(title, type) {\n        $el.find(\".filters-cats\").hide();\n        $el.find(\".filter-list\").removeClass(\"hidden\");\n        $el.find(\"h2.breadcrumb\").removeClass(\"hidden\");\n        $el.find(\"h2 a.subfilter span.title\").html(title);\n        return $el.find(\"h2 a.subfilter span.title\").prop(\"data-type\", type);\n      };\n      showCategories = function() {\n        $el.find(\".filters-cats\").show();\n        $el.find(\".filter-list\").addClass(\"hidden\");\n        return $el.find(\"h2.breadcrumb\").addClass(\"hidden\");\n      };\n      initializeSelectedFilters = function(filters) {\n        var name, val, values, _i, _len;\n        selectedFilters = [];\n        for (name in filters) {\n          values = filters[name];\n          for (_i = 0, _len = values.length; _i < _len; _i++) {\n            val = values[_i];\n            if (val.selected) {\n              selectedFilters.push(val);\n            }\n          }\n        }\n        return renderSelectedFilters(selectedFilters);\n      };\n      renderSelectedFilters = function(selectedFilters) {\n        var html;\n        _.filter(selectedFilters, (function(_this) {\n          return function(f) {\n            if (f.color) {\n              return f.style = \"border-left: 3px solid \" + f.color;\n            }\n          };\n        })(this));\n        html = templateSelected({\n          filters: selectedFilters\n        });\n        $el.find(\".filters-applied\").html(html);\n        if (selectedFilters.length > 0) {\n          return $el.find(\".save-filters\").show();\n        } else {\n          return $el.find(\".save-filters\").hide();\n        }\n      };\n      renderFilters = function(filters) {\n        var html;\n        _.filter(filters, (function(_this) {\n          return function(f) {\n            if (f.color) {\n              return f.style = \"border-left: 3px solid \" + f.color;\n            }\n          };\n        })(this));\n        html = template({\n          filters: filters\n        });\n        return $el.find(\".filter-list\").html(html);\n      };\n      toggleFilterSelection = function(type, id) {\n        var currentFiltersType, filter, filterId, filters;\n        if (type === \"myFilters\") {\n          $rs.issues.getMyFilters($scope.projectId).then(function(data) {\n            var filters, myFilters;\n            myFilters = data;\n            filters = myFilters[id];\n            filters.page = 1;\n            $ctrl.replaceAllFilters(filters);\n            $ctrl.storeFilters();\n            $ctrl.loadIssues();\n            $ctrl.markSelectedFilters($scope.filters, filters);\n            return initializeSelectedFilters($scope.filters);\n          });\n          return null;\n        }\n        filters = $scope.filters[type];\n        filterId = type === 'tags' ? taiga.toString(id) : id;\n        filter = _.find(filters, {\n          id: filterId\n        });\n        filter.selected = !filter.selected;\n        if (id === null) {\n          id = \"null\";\n        }\n        if (filter.selected) {\n          selectedFilters.push(filter);\n          $scope.$apply(function() {\n            $ctrl.selectFilter(type, id);\n            $ctrl.selectFilter(\"page\", 1);\n            $ctrl.storeFilters();\n            return $ctrl.loadIssues();\n          });\n        } else {\n          selectedFilters = _.reject(selectedFilters, filter);\n          $scope.$apply(function() {\n            $ctrl.unselectFilter(type, id);\n            $ctrl.selectFilter(\"page\", 1);\n            $ctrl.storeFilters();\n            return $ctrl.loadIssues();\n          });\n        }\n        renderSelectedFilters(selectedFilters);\n        currentFiltersType = $el.find(\"h2 a.subfilter span.title\").prop('data-type');\n        if (type === currentFiltersType) {\n          return renderFilters(_.reject(filters, \"selected\"));\n        }\n      };\n      $scope.$on(\"filters:loaded\", function(ctx, filters) {\n        return initializeSelectedFilters(filters);\n      });\n      selectQFilter = debounceLeading(100, function(value) {\n        if (value === void 0) {\n          return;\n        }\n        if (value.length === 0) {\n          $ctrl.replaceFilter(\"q\", null);\n          $ctrl.storeFilters();\n        } else {\n          $ctrl.replaceFilter(\"q\", value);\n          $ctrl.storeFilters();\n        }\n        return $ctrl.loadIssues();\n      });\n      $scope.$watch(\"filtersQ\", selectQFilter);\n      $el.on(\"click\", \".filters-cats > ul > li > a\", function(event) {\n        var tags, target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        tags = $scope.filters[target.data(\"type\")];\n        renderFilters(_.reject(tags, \"selected\"));\n        return showFilters(target.attr(\"title\"), target.data(\"type\"));\n      });\n      $el.on(\"click\", \".filters-inner > .filters-step-cat > .breadcrumb > .back\", function(event) {\n        event.preventDefault();\n        return showCategories($el);\n      });\n      $el.on(\"click\", \".filters-applied a\", function(event) {\n        var id, target, type;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        id = target.data(\"id\") || null;\n        type = target.data(\"type\");\n        return toggleFilterSelection(type, id);\n      });\n      $el.on(\"click\", \".filter-list .single-filter\", function(event) {\n        var id, target, type;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        target.toggleClass(\"active\");\n        id = target.data(\"id\") || null;\n        type = target.data(\"type\");\n        if (type === \"myFilters\") {\n          target.removeClass(\"active\");\n        }\n        return toggleFilterSelection(type, id);\n      });\n      $el.on(\"click\", \".filter-list .single-filter .icon-delete\", function(event) {\n        var customFilterName, message, target, title;\n        event.preventDefault();\n        event.stopPropagation();\n        target = angular.element(event.currentTarget);\n        customFilterName = target.parent().data('id');\n        title = \"Delete custom filter\";\n        message = \"the custom filter '\" + customFilterName + \"'\";\n        return $confirm.askOnDelete(title, message).then(function(finish) {\n          var promise;\n          promise = $ctrl.deleteMyFilter(customFilterName);\n          promise.then(function() {\n            promise = $ctrl.loadMyFilters();\n            promise.then(function(filters) {\n              finish();\n              $scope.filters.myFilters = filters;\n              return renderFilters($scope.filters.myFilters);\n            });\n            return promise.then(null, function() {\n              return finish();\n            });\n          });\n          return promise.then(null, function() {\n            finish(false);\n            return $confirm.notify(\"error\");\n          });\n        });\n      });\n      $el.on(\"click\", \".save-filters\", function(event) {\n        event.preventDefault();\n        renderFilters($scope.filters[\"myFilters\"]);\n        showFilters(\"My filters\", \"myFilters\");\n        $el.find('.save-filters').hide();\n        $el.find('.my-filter-name').removeClass(\"hidden\");\n        return $el.find('.my-filter-name').focus();\n      });\n      return $el.on(\"keyup\", \".my-filter-name\", function(event) {\n        var newFilter, promise, target;\n        event.preventDefault();\n        if (event.keyCode === 13) {\n          target = angular.element(event.currentTarget);\n          newFilter = target.val();\n          $loading.start($el.find(\".new\"));\n          promise = $ctrl.saveCurrentFiltersTo(newFilter);\n          promise.then(function() {\n            var loadPromise;\n            loadPromise = $ctrl.loadMyFilters();\n            loadPromise.then(function(filters) {\n              var currentfilterstype;\n              $loading.finish($el.find(\".new\"));\n              $scope.filters.myFilters = filters;\n              currentfilterstype = $el.find(\"h2 a.subfilter span.title\").prop('data-type');\n              if (currentfilterstype === \"myFilters\") {\n                renderFilters($scope.filters.myFilters);\n              }\n              $el.find('.my-filter-name').addClass(\"hidden\");\n              return $el.find('.save-filters').show();\n            });\n            return loadPromise.then(null, function() {\n              $loading.finish($el.find(\".new\"));\n              return $confirm.notify(\"error\", \"Error loading custom filters\");\n            });\n          });\n          return promise.then(null, function() {\n            $loading.finish($el.find(\".new\"));\n            $el.find(\".my-filter-name\").val(newFilter).focus().select();\n            return $confirm.notify(\"error\", \"Filter not saved\");\n          });\n        } else if (event.keyCode === 27) {\n          $el.find('.my-filter-name').val('');\n          $el.find('.my-filter-name').addClass(\"hidden\");\n          return $el.find('.save-filters').show();\n        }\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgIssuesFilters\", [\"$log\", \"$tgLocation\", \"$tgResources\", \"$tgConfirm\", \"$tgLoading\", \"$tgTemplate\", IssuesFiltersDirective]);\n\n  IssueStatusInlineEditionDirective = function($repo, $template) {\n\n    /*\n    Print the status of an Issue and a popover to change it.\n    - tg-issue-status-inline-edition: The issue\n    \n    Example:\n    \n      div.status(tg-issue-status-inline-edition=\"issue\")\n        a.issue-status(href=\"\")\n    \n    NOTE: This directive need 'issueStatusById' and 'project'.\n     */\n    var link, selectionTemplate, updateIssueStatus;\n    selectionTemplate = $template.get(\"issue/issue-status-inline-edition-selection.html\", true);\n    updateIssueStatus = function($el, issue, issueStatusById) {\n      var issueStatusDom, issueStatusDomParent, status;\n      issueStatusDomParent = $el.find(\".issue-status\");\n      issueStatusDom = $el.find(\".issue-status .issue-status-bind\");\n      status = issueStatusById[issue.status];\n      if (status) {\n        issueStatusDom.text(status.name);\n        issueStatusDom.prop(\"title\", status.name);\n        return issueStatusDomParent.css('color', status.color);\n      }\n    };\n    link = function($scope, $el, $attrs) {\n      var $ctrl, issue;\n      $ctrl = $el.controller();\n      issue = $scope.$eval($attrs.tgIssueStatusInlineEdition);\n      $el.on(\"click\", \".issue-status\", function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        return $el.find(\".pop-status\").popover().open();\n      });\n      $el.on(\"click\", \".status\", function(event) {\n        var target;\n        event.preventDefault();\n        event.stopPropagation();\n        target = angular.element(event.currentTarget);\n        issue.status = target.data(\"status-id\");\n        $el.find(\".pop-status\").popover().close();\n        updateIssueStatus($el, issue, $scope.issueStatusById);\n        return $scope.$apply(function() {\n          return $repo.save(issue).then;\n        });\n      });\n      taiga.bindOnce($scope, \"project\", function(project) {\n        $el.append(selectionTemplate({\n          'statuses': project.issue_statuses\n        }));\n        updateIssueStatus($el, issue, $scope.issueStatusById);\n        if (project.my_permissions.indexOf(\"modify_issue\") === -1) {\n          $el.unbind(\"click\");\n          return $el.find(\"a\").addClass(\"not-clickable\");\n        }\n      });\n      $scope.$watch($attrs.tgIssueStatusInlineEdition, (function(_this) {\n        return function(val) {\n          return updateIssueStatus($el, val, $scope.issueStatusById);\n        };\n      })(this));\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgIssueStatusInlineEdition\", [\"$tgRepo\", \"$tgTemplate\", IssueStatusInlineEditionDirective]);\n\n  IssueAssignedToInlineEditionDirective = function($repo, $rootscope, popoverService) {\n    var link, template;\n    template = _.template(\"<img src=\\\"<%- imgurl %>\\\" alt=\\\"<%- name %>\\\"/>\\n<figcaption><%- name %></figcaption>\");\n    link = function($scope, $el, $attrs) {\n      var $ctrl, issue, updateIssue;\n      updateIssue = function(issue) {\n        var ctx, member;\n        ctx = {\n          name: \"Unassigned\",\n          imgurl: \"/images/unnamed.png\"\n        };\n        member = $scope.usersById[issue.assigned_to];\n        if (member) {\n          ctx.imgurl = member.photo;\n          ctx.name = member.full_name_display;\n        }\n        $el.find(\".avatar\").html(template(ctx));\n        return $el.find(\".issue-assignedto\").attr('title', ctx.name);\n      };\n      $ctrl = $el.controller();\n      issue = $scope.$eval($attrs.tgIssueAssignedToInlineEdition);\n      updateIssue(issue);\n      $el.on(\"click\", \".issue-assignedto\", function(event) {\n        return $rootscope.$broadcast(\"assigned-to:add\", issue);\n      });\n      taiga.bindOnce($scope, \"project\", function(project) {\n        if (project.my_permissions.indexOf(\"modify_issue\") === -1) {\n          $el.unbind(\"click\");\n          return $el.find(\"a\").addClass(\"not-clickable\");\n        }\n      });\n      $scope.$on(\"assigned-to:added\", (function(_this) {\n        return function(ctx, userId, updatedIssue) {\n          if (updatedIssue.id === issue.id) {\n            updatedIssue.assigned_to = userId;\n            $repo.save(updatedIssue);\n            return updateIssue(updatedIssue);\n          }\n        };\n      })(this));\n      $scope.$watch($attrs.tgIssueAssignedToInlineEdition, (function(_this) {\n        return function(val) {\n          return updateIssue(val);\n        };\n      })(this));\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgIssueAssignedToInlineEdition\", [\"$tgRepo\", \"$rootScope\", IssueAssignedToInlineEditionDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/userstories/detail.coffee\n */\n\n(function() {\n  var UsClientRequirementButtonDirective, UsStatusButtonDirective, UsStatusDisplayDirective, UsTasksProgressDisplayDirective, UsTeamRequirementButtonDirective, UserStoryDetailController, bindOnce, groupBy, mixOf, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  groupBy = this.taiga.groupBy;\n\n  bindOnce = this.taiga.bindOnce;\n\n  module = angular.module(\"taigaUserStories\");\n\n  UserStoryDetailController = (function(_super) {\n    __extends(UserStoryDetailController, _super);\n\n    UserStoryDetailController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$log\", \"$appTitle\", \"$tgNavUrls\", \"$tgAnalytics\", \"tgLoader\"];\n\n    function UserStoryDetailController(_at_scope, _at_rootscope, _at_repo, _at_confirm, _at_rs, _at_params, _at_q, _at_location, _at_log, _at_appTitle, _at_navUrls, _at_analytics, tgLoader) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.log = _at_log;\n      this.appTitle = _at_appTitle;\n      this.navUrls = _at_navUrls;\n      this.analytics = _at_analytics;\n      this.scope.usRef = this.params.usref;\n      this.scope.sectionName = \"User Story Details\";\n      this.initializeEventHandlers();\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          _this.appTitle.set(_this.scope.us.subject + \" - \" + _this.scope.project.name);\n          return _this.initializeOnDeleteGoToUrl();\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      promise[\"finally\"](tgLoader.pageLoaded);\n    }\n\n    UserStoryDetailController.prototype.initializeEventHandlers = function() {\n      this.scope.$on(\"related-tasks:update\", (function(_this) {\n        return function() {\n          _this.loadUs();\n          return _this.scope.tasks = _.clone(_this.scope.tasks, false);\n        };\n      })(this));\n      this.scope.$on(\"attachment:create\", (function(_this) {\n        return function() {\n          _this.analytics.trackEvent(\"attachment\", \"create\", \"create attachment on userstory\", 1);\n          return _this.rootscope.$broadcast(\"history:reload\");\n        };\n      })(this));\n      this.scope.$on(\"attachment:edit\", (function(_this) {\n        return function() {\n          return _this.rootscope.$broadcast(\"history:reload\");\n        };\n      })(this));\n      return this.scope.$on(\"attachment:delete\", (function(_this) {\n        return function() {\n          return _this.rootscope.$broadcast(\"history:reload\");\n        };\n      })(this));\n    };\n\n    UserStoryDetailController.prototype.initializeOnDeleteGoToUrl = function() {\n      var ctx;\n      ctx = {\n        project: this.scope.project.slug\n      };\n      this.scope.onDeleteGoToUrl = this.navUrls.resolve(\"project\", ctx);\n      if (this.scope.project.is_backlog_activated) {\n        if (this.scope.us.milestone) {\n          ctx.sprint = this.scope.sprint.slug;\n          return this.scope.onDeleteGoToUrl = this.navUrls.resolve(\"project-taskboard\", ctx);\n        } else {\n          return this.scope.onDeleteGoToUrl = this.navUrls.resolve(\"project-backlog\", ctx);\n        }\n      } else if (this.scope.project.is_kanban_activated) {\n        return this.scope.onDeleteGoToUrl = this.navUrls.resolve(\"project-kanban\", ctx);\n      }\n    };\n\n    UserStoryDetailController.prototype.loadProject = function() {\n      return this.rs.projects.getBySlug(this.params.pslug).then((function(_this) {\n        return function(project) {\n          _this.scope.projectId = project.id;\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          _this.scope.statusList = project.us_statuses;\n          _this.scope.statusById = groupBy(project.us_statuses, function(x) {\n            return x.id;\n          });\n          _this.scope.taskStatusById = groupBy(project.task_statuses, function(x) {\n            return x.id;\n          });\n          _this.scope.membersById = groupBy(project.memberships, function(x) {\n            return x.user;\n          });\n          _this.scope.pointsList = _.sortBy(project.points, \"order\");\n          _this.scope.pointsById = groupBy(_this.scope.pointsList, function(e) {\n            return e.id;\n          });\n          return project;\n        };\n      })(this));\n    };\n\n    UserStoryDetailController.prototype.loadUs = function() {\n      return this.rs.userstories.getByRef(this.scope.projectId, this.params.usref).then((function(_this) {\n        return function(us) {\n          var ctx;\n          _this.scope.us = us;\n          _this.scope.usId = us.id;\n          _this.scope.commentModel = us;\n          if (_this.scope.us.neighbors.previous.ref != null) {\n            ctx = {\n              project: _this.scope.project.slug,\n              ref: _this.scope.us.neighbors.previous.ref\n            };\n            _this.scope.previousUrl = _this.navUrls.resolve(\"project-userstories-detail\", ctx);\n          }\n          if (_this.scope.us.neighbors.next.ref != null) {\n            ctx = {\n              project: _this.scope.project.slug,\n              ref: _this.scope.us.neighbors.next.ref\n            };\n            _this.scope.nextUrl = _this.navUrls.resolve(\"project-userstories-detail\", ctx);\n          }\n          return us;\n        };\n      })(this));\n    };\n\n    UserStoryDetailController.prototype.loadSprint = function() {\n      if (this.scope.us.milestone) {\n        return this.rs.sprints.get(this.scope.us.project, this.scope.us.milestone).then((function(_this) {\n          return function(sprint) {\n            _this.scope.sprint = sprint;\n            return sprint;\n          };\n        })(this));\n      }\n    };\n\n    UserStoryDetailController.prototype.loadTasks = function() {\n      return this.rs.tasks.list(this.scope.projectId, null, this.scope.usId).then((function(_this) {\n        return function(tasks) {\n          _this.scope.tasks = tasks;\n          return tasks;\n        };\n      })(this));\n    };\n\n    UserStoryDetailController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.loadProject();\n      return promise.then((function(_this) {\n        return function(project) {\n          _this.fillUsersAndRoles(project.users, project.roles);\n          return _this.loadUs().then(function() {\n            return _this.q.all([_this.loadSprint(), _this.loadTasks()]);\n          });\n        };\n      })(this));\n    };\n\n    return UserStoryDetailController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin));\n\n  module.controller(\"UserStoryDetailController\", UserStoryDetailController);\n\n  UsStatusDisplayDirective = function($template) {\n    var link, template;\n    template = $template.get(\"common/components/status-display.html\", true);\n    link = function($scope, $el, $attrs) {\n      var render;\n      render = function(us) {\n        var html;\n        html = template({\n          is_closed: us.is_closed,\n          status: $scope.statusById[us.status]\n        });\n        return $el.html(html);\n      };\n      $scope.$watch($attrs.ngModel, function(us) {\n        if (us != null) {\n          return render(us);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgUsStatusDisplay\", [\"$tgTemplate\", UsStatusDisplayDirective]);\n\n  UsTasksProgressDisplayDirective = function($template) {\n    var link, template;\n    template = $template.get(\"us/us-task-progress.html\", true);\n    link = function($scope, $el, $attrs) {\n      var render;\n      render = function(tasks) {\n        var html, progress, totalClosedTasks, totalTasks;\n        totalTasks = tasks.length;\n        totalClosedTasks = _.filter(tasks, (function(_this) {\n          return function(task) {\n            return $scope.taskStatusById[task.status].is_closed;\n          };\n        })(this)).length;\n        progress = totalTasks > 0 ? 100 * totalClosedTasks / totalTasks : 0;\n        html = template({\n          totalTasks: totalTasks,\n          totalClosedTasks: totalClosedTasks,\n          progress: progress\n        });\n        return $el.html(html);\n      };\n      $scope.$watch($attrs.ngModel, function(tasks) {\n        if (tasks != null) {\n          return render(tasks);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgUsTasksProgressDisplay\", [\"$tgTemplate\", UsTasksProgressDisplayDirective]);\n\n  UsStatusButtonDirective = function($rootScope, $repo, $confirm, $loading, $qqueue, $template) {\n    var link, template;\n    template = $template.get(\"us/us-status-button.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var isEditable, render, save;\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf(\"modify_us\") !== -1;\n      };\n      render = (function(_this) {\n        return function(us) {\n          var html, status;\n          status = $scope.statusById[us.status];\n          html = template({\n            status: status,\n            statuses: $scope.statusList,\n            editable: isEditable()\n          });\n          return $el.html(html);\n        };\n      })(this);\n      save = $qqueue.bindAdd((function(_this) {\n        return function(status) {\n          var onError, onSuccess, us;\n          us = $model.$modelValue.clone();\n          us.status = status;\n          $.fn.popover().closeAll();\n          $model.$setViewValue(us);\n          onSuccess = function() {\n            $confirm.notify(\"success\");\n            $rootScope.$broadcast(\"history:reload\");\n            return $loading.finish($el.find(\".level-name\"));\n          };\n          onError = function() {\n            $confirm.notify(\"error\");\n            us.revert();\n            $model.$setViewValue(us);\n            return $loading.finish($el.find(\".level-name\"));\n          };\n          $loading.start($el.find(\".level-name\"));\n          return $repo.save($model.$modelValue).then(onSuccess, onError);\n        };\n      })(this));\n      $el.on(\"click\", \".status-data\", function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        return $el.find(\".pop-status\").popover().open();\n      });\n      $el.on(\"click\", \".status\", function(event) {\n        var status, target;\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        target = angular.element(event.currentTarget);\n        status = target.data(\"status-id\");\n        return save(status);\n      });\n      $scope.$watch($attrs.ngModel, function(us) {\n        if (us) {\n          return render(us);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgUsStatusButton\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", \"$tgQqueue\", \"$tgTemplate\", UsStatusButtonDirective]);\n\n  UsTeamRequirementButtonDirective = function($rootscope, $tgrepo, $confirm, $loading, $qqueue, $template) {\n    var link, template;\n    template = $template.get(\"us/us-team-requirement-button.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var canEdit, render, save;\n      canEdit = function() {\n        return $scope.project.my_permissions.indexOf(\"modify_us\") !== -1;\n      };\n      render = function(us) {\n        var ctx, html;\n        if (!canEdit() && !us.team_requirement) {\n          $el.html(\"\");\n          return;\n        }\n        ctx = {\n          canEdit: canEdit(),\n          isRequired: us.team_requirement\n        };\n        html = template(ctx);\n        return $el.html(html);\n      };\n      save = $qqueue.bindAdd((function(_this) {\n        return function(team_requirement) {\n          var promise, us;\n          us = $model.$modelValue.clone();\n          us.team_requirement = team_requirement;\n          $model.$setViewValue(us);\n          $loading.start($el.find(\"label\"));\n          promise = $tgrepo.save($model.$modelValue);\n          promise.then(function() {\n            $loading.finish($el.find(\"label\"));\n            return $rootscope.$broadcast(\"history:reload\");\n          });\n          return promise.then(null, function() {\n            $loading.finish($el.find(\"label\"));\n            $confirm.notify(\"error\");\n            us.revert();\n            return $model.$setViewValue(us);\n          });\n        };\n      })(this));\n      $el.on(\"click\", \".team-requirement\", function(event) {\n        var team_requirement;\n        if (!canEdit()) {\n          return;\n        }\n        team_requirement = !$model.$modelValue.team_requirement;\n        return save(team_requirement);\n      });\n      $scope.$watch($attrs.ngModel, function(us) {\n        if (us) {\n          return render(us);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgUsTeamRequirementButton\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", \"$tgQqueue\", \"$tgTemplate\", UsTeamRequirementButtonDirective]);\n\n  UsClientRequirementButtonDirective = function($rootscope, $tgrepo, $confirm, $loading, $qqueue, $template) {\n    var link, template;\n    template = $template.get(\"us/us-client-requirement-button.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var canEdit, render, save;\n      canEdit = function() {\n        return $scope.project.my_permissions.indexOf(\"modify_us\") !== -1;\n      };\n      render = function(us) {\n        var ctx, html;\n        if (!canEdit() && !us.client_requirement) {\n          $el.html(\"\");\n          return;\n        }\n        ctx = {\n          canEdit: canEdit(),\n          isRequired: us.client_requirement\n        };\n        html = template(ctx);\n        return $el.html(html);\n      };\n      save = $qqueue.bindAdd((function(_this) {\n        return function(client_requirement) {\n          var promise, us;\n          us = $model.$modelValue.clone();\n          us.client_requirement = client_requirement;\n          $model.$setViewValue(us);\n          $loading.start($el.find(\"label\"));\n          promise = $tgrepo.save($model.$modelValue);\n          promise.then(function() {\n            $loading.finish($el.find(\"label\"));\n            return $rootscope.$broadcast(\"history:reload\");\n          });\n          return promise.then(null, function() {\n            $loading.finish($el.find(\"label\"));\n            $confirm.notify(\"error\");\n            us.revert();\n            return $model.$setViewValue(us);\n          });\n        };\n      })(this));\n      $el.on(\"click\", \".client-requirement\", function(event) {\n        var client_requirement;\n        if (!canEdit()) {\n          return;\n        }\n        client_requirement = !$model.$modelValue.client_requirement;\n        return save(client_requirement);\n      });\n      $scope.$watch($attrs.ngModel, function(us) {\n        if (us) {\n          return render(us);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgUsClientRequirementButton\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", \"$tgQqueue\", \"$tgTemplate\", UsClientRequirementButtonDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/tasks/detail.coffee\n */\n\n(function() {\n  var TaskDetailController, TaskIsIocaineButtonDirective, TaskStatusButtonDirective, TaskStatusDisplayDirective, groupBy, mixOf, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  groupBy = this.taiga.groupBy;\n\n  module = angular.module(\"taigaTasks\");\n\n  TaskDetailController = (function(_super) {\n    __extends(TaskDetailController, _super);\n\n    TaskDetailController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$log\", \"$appTitle\", \"$tgNavUrls\", \"$tgAnalytics\", \"tgLoader\"];\n\n    function TaskDetailController(_at_scope, _at_rootscope, _at_repo, _at_confirm, _at_rs, _at_params, _at_q, _at_location, _at_log, _at_appTitle, _at_navUrls, _at_analytics, tgLoader) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.log = _at_log;\n      this.appTitle = _at_appTitle;\n      this.navUrls = _at_navUrls;\n      this.analytics = _at_analytics;\n      this.scope.taskRef = this.params.taskref;\n      this.scope.sectionName = \"Task Details\";\n      this.initializeEventHandlers();\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          _this.appTitle.set(_this.scope.task.subject + \" - \" + _this.scope.project.name);\n          return _this.initializeOnDeleteGoToUrl();\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      promise[\"finally\"](tgLoader.pageLoaded);\n    }\n\n    TaskDetailController.prototype.initializeEventHandlers = function() {\n      this.scope.$on(\"attachment:create\", (function(_this) {\n        return function() {\n          _this.analytics.trackEvent(\"attachment\", \"create\", \"create attachment on task\", 1);\n          return _this.rootscope.$broadcast(\"history:reload\");\n        };\n      })(this));\n      this.scope.$on(\"attachment:edit\", (function(_this) {\n        return function() {\n          return _this.rootscope.$broadcast(\"history:reload\");\n        };\n      })(this));\n      return this.scope.$on(\"attachment:delete\", (function(_this) {\n        return function() {\n          return _this.rootscope.$broadcast(\"history:reload\");\n        };\n      })(this));\n    };\n\n    TaskDetailController.prototype.initializeOnDeleteGoToUrl = function() {\n      var ctx;\n      ctx = {\n        project: this.scope.project.slug\n      };\n      this.scope.onDeleteGoToUrl = this.navUrls.resolve(\"project\", ctx);\n      if (this.scope.project.is_backlog_activated) {\n        if (this.scope.task.milestone) {\n          ctx.sprint = this.scope.sprint.slug;\n          return this.scope.onDeleteGoToUrl = this.navUrls.resolve(\"project-taskboard\", ctx);\n        } else if (this.scope.task.us) {\n          ctx.ref = this.scope.us.ref;\n          return this.scope.onDeleteGoToUrl = this.navUrls.resolve(\"project-userstories-detail\", ctx);\n        }\n      } else if (this.scope.project.is_kanban_activated) {\n        if (this.scope.us) {\n          ctx.ref = this.scope.us.ref;\n          return this.scope.onDeleteGoToUrl = this.navUrls.resolve(\"project-userstories-detail\", ctx);\n        }\n      }\n    };\n\n    TaskDetailController.prototype.loadProject = function() {\n      return this.rs.projects.getBySlug(this.params.pslug).then((function(_this) {\n        return function(project) {\n          _this.scope.projectId = project.id;\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          _this.scope.statusList = project.task_statuses;\n          _this.scope.statusById = groupBy(project.task_statuses, function(x) {\n            return x.id;\n          });\n          _this.scope.membersById = groupBy(project.memberships, function(x) {\n            return x.user;\n          });\n          return project;\n        };\n      })(this));\n    };\n\n    TaskDetailController.prototype.loadTask = function() {\n      return this.rs.tasks.getByRef(this.scope.projectId, this.params.taskref).then((function(_this) {\n        return function(task) {\n          var ctx;\n          _this.scope.task = task;\n          _this.scope.taskId = task.id;\n          _this.scope.commentModel = task;\n          if (_this.scope.task.neighbors.previous.ref != null) {\n            ctx = {\n              project: _this.scope.project.slug,\n              ref: _this.scope.task.neighbors.previous.ref\n            };\n            _this.scope.previousUrl = _this.navUrls.resolve(\"project-tasks-detail\", ctx);\n          }\n          if (_this.scope.task.neighbors.next.ref != null) {\n            ctx = {\n              project: _this.scope.project.slug,\n              ref: _this.scope.task.neighbors.next.ref\n            };\n            _this.scope.nextUrl = _this.navUrls.resolve(\"project-tasks-detail\", ctx);\n          }\n          return task;\n        };\n      })(this));\n    };\n\n    TaskDetailController.prototype.loadSprint = function() {\n      if (this.scope.task.milestone) {\n        return this.rs.sprints.get(this.scope.task.project, this.scope.task.milestone).then((function(_this) {\n          return function(sprint) {\n            _this.scope.sprint = sprint;\n            return sprint;\n          };\n        })(this));\n      }\n    };\n\n    TaskDetailController.prototype.loadUserStory = function() {\n      if (this.scope.task.user_story) {\n        return this.rs.userstories.get(this.scope.task.project, this.scope.task.user_story).then((function(_this) {\n          return function(us) {\n            _this.scope.us = us;\n            return us;\n          };\n        })(this));\n      }\n    };\n\n    TaskDetailController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.loadProject();\n      return promise.then((function(_this) {\n        return function(project) {\n          _this.fillUsersAndRoles(project.users, project.roles);\n          return _this.loadTask().then(function() {\n            return _this.q.all([_this.loadSprint(), _this.loadUserStory()]);\n          });\n        };\n      })(this));\n    };\n\n    return TaskDetailController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin));\n\n  module.controller(\"TaskDetailController\", TaskDetailController);\n\n  TaskStatusDisplayDirective = function($template) {\n    var link, template;\n    template = $template.get(\"common/components/status-display.html\", true);\n    link = function($scope, $el, $attrs) {\n      var render;\n      render = function(task) {\n        var html;\n        html = template({\n          status: $scope.statusById[task.status]\n        });\n        return $el.html(html);\n      };\n      $scope.$watch($attrs.ngModel, function(task) {\n        if (task != null) {\n          return render(task);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgTaskStatusDisplay\", [\"$tgTemplate\", TaskStatusDisplayDirective]);\n\n  TaskStatusButtonDirective = function($rootScope, $repo, $confirm, $loading, $qqueue) {\n    var link, template;\n    template = _.template(\"<div class=\\\"status-data <% if(editable){ %>clickable<% }%>\\\">\\n    <span class=\\\"level\\\" style=\\\"background-color:<%- status.color %>\\\"></span>\\n    <span class=\\\"status-status\\\"><%- status.name %></span>\\n    <% if(editable){ %><span class=\\\"icon icon-arrow-bottom\\\"></span><% }%>\\n    <span class=\\\"level-name\\\">status</span>\\n\\n    <ul class=\\\"popover pop-status\\\">\\n        <% _.each(statuses, function(st) { %>\\n        <li><a href=\\\"\\\" class=\\\"status\\\" title=\\\"<%- st.name %>\\\"\\n               data-status-id=\\\"<%- st.id %>\\\"><%- st.name %></a></li>\\n        <% }); %>\\n    </ul>\\n</div>\");\n    link = function($scope, $el, $attrs, $model) {\n      var isEditable, render, save;\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf(\"modify_task\") !== -1;\n      };\n      render = (function(_this) {\n        return function(task) {\n          var html, status;\n          status = $scope.statusById[task.status];\n          html = template({\n            status: status,\n            statuses: $scope.statusList,\n            editable: isEditable()\n          });\n          return $el.html(html);\n        };\n      })(this);\n      save = $qqueue.bindAdd((function(_this) {\n        return function(status) {\n          var onError, onSuccess, task;\n          task = $model.$modelValue.clone();\n          task.status = status;\n          $model.$setViewValue(task);\n          onSuccess = function() {\n            $confirm.notify(\"success\");\n            $rootScope.$broadcast(\"history:reload\");\n            return $loading.finish($el.find(\".level-name\"));\n          };\n          onError = function() {\n            $confirm.notify(\"error\");\n            task.revert();\n            $model.$setViewValue(task);\n            return $loading.finish($el.find(\".level-name\"));\n          };\n          $loading.start($el.find(\".level-name\"));\n          return $repo.save($model.$modelValue).then(onSuccess, onError);\n        };\n      })(this));\n      $el.on(\"click\", \".status-data\", function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        return $el.find(\".pop-status\").popover().open();\n      });\n      $el.on(\"click\", \".status\", function(event) {\n        var target;\n        event.preventDefault();\n        event.stopPropagation();\n        if (!isEditable()) {\n          return;\n        }\n        target = angular.element(event.currentTarget);\n        $.fn.popover().closeAll();\n        return save(target.data(\"status-id\"));\n      });\n      $scope.$watch($attrs.ngModel, function(task) {\n        if (task) {\n          return render(task);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgTaskStatusButton\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", \"$tgQqueue\", TaskStatusButtonDirective]);\n\n  TaskIsIocaineButtonDirective = function($rootscope, $tgrepo, $confirm, $loading, $qqueue) {\n    var link, template;\n    template = _.template(\"<fieldset title=\\\"Feeling a bit overwhelmed by a task? Make sure others know about it by clicking on Iocaine when editing a task. It's possible to become immune to this (fictional) deadly poison by consuming small amounts over time just as it's possible to get better at what you do by occasionally taking on extra challenges!\\\">\\n  <label for=\\\"is-iocaine\\\"\\n        class=\\\"button button-gray is-iocaine <% if(isEditable){ %>editable<% }; %> <% if(isIocaine){ %>active<% }; %>\\\">\\n        Iocaine\\n  </label>\\n  <input type=\\\"checkbox\\\" id=\\\"is-iocaine\\\" name=\\\"is-iocaine\\\"/>\\n</fieldset>\");\n    link = function($scope, $el, $attrs, $model) {\n      var isEditable, render, save;\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf(\"modify_task\") !== -1;\n      };\n      render = function(task) {\n        var ctx, html;\n        if (!isEditable() && !task.is_iocaine) {\n          $el.html(\"\");\n          return;\n        }\n        ctx = {\n          isIocaine: task.is_iocaine,\n          isEditable: isEditable()\n        };\n        html = template(ctx);\n        return $el.html(html);\n      };\n      save = $qqueue.bindAdd((function(_this) {\n        return function(is_iocaine) {\n          var promise, task;\n          task = $model.$modelValue.clone();\n          task.is_iocaine = is_iocaine;\n          $model.$setViewValue(task);\n          $loading.start($el.find('label'));\n          promise = $tgrepo.save(task);\n          promise.then(function() {\n            $confirm.notify(\"success\");\n            return $rootscope.$broadcast(\"history:reload\");\n          });\n          promise.then(null, function() {\n            task.revert();\n            $model.$setViewValue(task);\n            return $confirm.notify(\"error\");\n          });\n          return promise[\"finally\"](function() {\n            return $loading.finish($el.find('label'));\n          });\n        };\n      })(this));\n      $el.on(\"click\", \".is-iocaine\", function(event) {\n        var is_iocaine;\n        if (!isEditable()) {\n          return;\n        }\n        is_iocaine = !$model.$modelValue.is_iocaine;\n        return save(is_iocaine);\n      });\n      $scope.$watch($attrs.ngModel, function(task) {\n        if (task) {\n          return render(task);\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgTaskIsIocaineButton\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", \"$tgQqueue\", TaskIsIocaineButtonDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/team/main.coffee\n */\n\n(function() {\n  var LeaveProjectDirective, TeamController, TeamFiltersDirective, TeamMemberCurrentUserDirective, TeamMemberStatsDirective, TeamMembersDirective, mixOf, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  module = angular.module(\"taigaTeam\");\n\n  TeamController = (function(_super) {\n    __extends(TeamController, _super);\n\n    TeamController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgResources\", \"$routeParams\", \"$q\", \"$location\", \"$tgNavUrls\", \"$appTitle\", \"$tgAuth\", \"tgLoader\"];\n\n    function TeamController(_at_scope, _at_rootscope, _at_repo, _at_rs, _at_params, _at_q, _at_location, _at_navUrls, _at_appTitle, _at_auth, tgLoader) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.navUrls = _at_navUrls;\n      this.appTitle = _at_appTitle;\n      this.auth = _at_auth;\n      this.scope.sectionName = \"Team\";\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Team - \" + _this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      promise[\"finally\"](tgLoader.pageLoaded);\n    }\n\n    TeamController.prototype.setRole = function(role) {\n      if (role) {\n        return this.scope.filtersRole = role;\n      } else {\n        return this.scope.filtersRole = null;\n      }\n    };\n\n    TeamController.prototype.loadMembers = function() {\n      return this.rs.memberships.list(this.scope.projectId, {}, false).then((function(_this) {\n        return function(data) {\n          var currentUser, membership, _i, _len, _ref;\n          currentUser = _this.auth.getUser();\n          if (currentUser.photo == null) {\n            currentUser.photo = \"/images/unnamed.png\";\n          }\n          _this.scope.currentUser = _.find(data, function(membership) {\n            return membership.user === currentUser.id;\n          });\n          _this.scope.totals = {};\n          _.forEach(data, function(membership) {\n            return _this.scope.totals[membership.user] = 0;\n          });\n          _this.scope.memberships = _.filter(data, function(membership) {\n            if (membership.user && membership.user !== currentUser.id && membership.is_user_active) {\n              return membership;\n            }\n          });\n          _ref = _this.scope.memberships;\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            membership = _ref[_i];\n            if (membership.photo == null) {\n              membership.photo = \"/images/unnamed.png\";\n            }\n          }\n          return data;\n        };\n      })(this));\n    };\n\n    TeamController.prototype.loadProject = function() {\n      return this.rs.projects.getBySlug(this.params.pslug).then((function(_this) {\n        return function(project) {\n          _this.scope.projectId = project.id;\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          _this.scope.issuesEnabled = project.is_issues_activated;\n          _this.scope.tasksEnabled = project.is_kanban_activated || project.is_backlog_activated;\n          _this.scope.wikiEnabled = project.is_wiki_activated;\n          return project;\n        };\n      })(this));\n    };\n\n    TeamController.prototype.loadMemberStats = function() {\n      return this.rs.projects.memberStats(this.scope.projectId).then((function(_this) {\n        return function(stats) {\n          var totals;\n          totals = {};\n          _.forEach(_this.scope.totals, function(total, userId) {\n            var vals;\n            vals = _.map(stats, function(memberStats, statsKey) {\n              return memberStats[userId];\n            });\n            total = _.reduce(vals, function(sum, el) {\n              return sum + el;\n            });\n            return _this.scope.totals[userId] = total;\n          });\n          _this.scope.stats = _this.processStats(stats);\n          return _this.scope.stats.totals = _this.scope.totals;\n        };\n      })(this));\n    };\n\n    TeamController.prototype.processStat = function(stat) {\n      var max, min, singleStat;\n      max = _.max(stat);\n      min = _.min(stat);\n      singleStat = _.map(stat, function(value, key) {\n        if (value === min) {\n          return [key, 0.1];\n        }\n        if (value === max) {\n          return [key, 1];\n        }\n        return [key, (value * 0.5) / max];\n      });\n      singleStat = _.object(singleStat);\n      return singleStat;\n    };\n\n    TeamController.prototype.processStats = function(stats) {\n      var key, value;\n      for (key in stats) {\n        value = stats[key];\n        stats[key] = this.processStat(value);\n      }\n      return stats;\n    };\n\n    TeamController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.loadProject();\n      return promise.then((function(_this) {\n        return function(project) {\n          _this.fillUsersAndRoles(project.users, project.roles);\n          return _this.loadMembers().then(function() {\n            return _this.loadMemberStats();\n          });\n        };\n      })(this));\n    };\n\n    return TeamController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin));\n\n  module.controller(\"TeamController\", TeamController);\n\n  TeamFiltersDirective = function() {\n    return {\n      templateUrl: \"team/team-filter.html\"\n    };\n  };\n\n  module.directive(\"tgTeamFilters\", [TeamFiltersDirective]);\n\n  TeamMemberStatsDirective = function() {\n    return {\n      templateUrl: \"team/team-member-stats.html\",\n      scope: {\n        stats: \"=\",\n        userId: \"=user\",\n        issuesEnabled: \"=issuesenabled\",\n        tasksEnabled: \"=tasksenabled\",\n        wikiEnabled: \"=wikienabled\"\n      }\n    };\n  };\n\n  module.directive(\"tgTeamMemberStats\", TeamMemberStatsDirective);\n\n  TeamMemberCurrentUserDirective = function() {\n    return {\n      templateUrl: \"team/team-member-current-user.html\",\n      scope: {\n        projectId: \"=projectid\",\n        currentUser: \"=currentuser\",\n        stats: \"=\",\n        issuesEnabled: \"=issuesenabled\",\n        tasksEnabled: \"=tasksenabled\",\n        wikiEnabled: \"=wikienabled\"\n      }\n    };\n  };\n\n  module.directive(\"tgTeamCurrentUser\", TeamMemberCurrentUserDirective);\n\n  TeamMembersDirective = function() {\n    var template;\n    template = \"team/team-members.html\";\n    return {\n      templateUrl: template,\n      scope: {\n        memberships: \"=\",\n        filtersQ: \"=filtersq\",\n        filtersRole: \"=filtersrole\",\n        stats: \"=\",\n        issuesEnabled: \"=issuesenabled\",\n        tasksEnabled: \"=tasksenabled\",\n        wikiEnabled: \"=wikienabled\"\n      }\n    };\n  };\n\n  module.directive(\"tgTeamMembers\", TeamMembersDirective);\n\n  LeaveProjectDirective = function($repo, $confirm, $location, $rs, $navurls) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return $scope.leave = function() {\n        return $confirm.ask(\"Leave this project\", \"Are you sure you want to leave the project?\").then((function(_this) {\n          return function(finish) {\n            var promise;\n            promise = $rs.projects.leave($attrs.projectid);\n            promise.then(function() {\n              finish();\n              $confirm.notify(\"success\");\n              return $location.path($navurls.resolve(\"home\"));\n            });\n            return promise.then(null, function(response) {\n              finish();\n              return $confirm.notify('error', response.data._error_message);\n            });\n          };\n        })(this));\n      };\n    };\n    return {\n      scope: {},\n      templateUrl: \"team/leave-project.html\",\n      link: link\n    };\n  };\n\n  module.directive(\"tgLeaveProject\", [\"$tgRepo\", \"$tgConfirm\", \"$tgLocation\", \"$tgResources\", \"$tgNavUrls\", LeaveProjectDirective]);\n\n  module.filter('membersRoleFilter', function() {\n    return function(input, filtersRole) {\n      if (filtersRole != null) {\n        return _.filter(input, {\n          role: filtersRole.id\n        });\n      }\n      return input;\n    };\n  });\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/wiki/detail.coffee\n */\n\n(function() {\n  var EditableWikiContentDirective, WikiDetailController, WikiSummaryDirective, bindOnce, debounce, groupBy, mixOf, module, taiga, unslugify,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  groupBy = this.taiga.groupBy;\n\n  bindOnce = this.taiga.bindOnce;\n\n  unslugify = this.taiga.unslugify;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaWiki\");\n\n  WikiDetailController = (function(_super) {\n    __extends(WikiDetailController, _super);\n\n    WikiDetailController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgModel\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$filter\", \"$log\", \"$appTitle\", \"$tgNavUrls\", \"$tgAnalytics\", \"tgLoader\"];\n\n    function WikiDetailController(_at_scope, _at_rootscope, _at_repo, _at_model, _at_confirm, _at_rs, _at_params, _at_q, _at_location, _at_filter, _at_log, _at_appTitle, _at_navUrls, _at_analytics, tgLoader) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.model = _at_model;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.filter = _at_filter;\n      this.log = _at_log;\n      this.appTitle = _at_appTitle;\n      this.navUrls = _at_navUrls;\n      this.analytics = _at_analytics;\n      this.scope.projectSlug = this.params.pslug;\n      this.scope.wikiSlug = this.params.slug;\n      this.scope.sectionName = \"Wiki\";\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Wiki - \" + _this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      promise[\"finally\"](tgLoader.pageLoaded);\n    }\n\n    WikiDetailController.prototype.loadProject = function() {\n      return this.rs.projects.getBySlug(this.params.pslug).then((function(_this) {\n        return function(project) {\n          _this.scope.projectId = project.id;\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          _this.scope.membersById = groupBy(project.memberships, function(x) {\n            return x.user;\n          });\n          return project;\n        };\n      })(this));\n    };\n\n    WikiDetailController.prototype.loadWiki = function() {\n      var promise;\n      promise = this.rs.wiki.getBySlug(this.scope.projectId, this.params.slug);\n      promise.then((function(_this) {\n        return function(wiki) {\n          _this.scope.wiki = wiki;\n          _this.scope.wikiId = wiki.id;\n          return _this.scope.wiki;\n        };\n      })(this));\n      return promise.then(null, (function(_this) {\n        return function(xhr) {\n          var data;\n          _this.scope.wikiId = null;\n          if (_this.scope.project.my_permissions.indexOf(\"add_wiki_page\") === -1) {\n            return null;\n          }\n          data = {\n            project: _this.scope.projectId,\n            slug: _this.scope.wikiSlug,\n            content: \"\"\n          };\n          _this.scope.wiki = _this.model.make_model(\"wiki\", data);\n          return _this.scope.wiki;\n        };\n      })(this));\n    };\n\n    WikiDetailController.prototype.loadWikiLinks = function() {\n      return this.rs.wiki.listLinks(this.scope.projectId).then((function(_this) {\n        return function(wikiLinks) {\n          return _this.scope.wikiLinks = wikiLinks;\n        };\n      })(this));\n    };\n\n    WikiDetailController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.loadProject();\n      return promise.then((function(_this) {\n        return function(project) {\n          _this.fillUsersAndRoles(project.users, project.roles);\n          return _this.q.all([_this.loadWikiLinks(), _this.loadWiki()]);\n        };\n      })(this));\n    };\n\n    WikiDetailController.prototype[\"delete\"] = function() {\n      var message, title;\n      title = \"Delete Wiki Page\";\n      message = unslugify(this.scope.wiki.slug);\n      return this.confirm.askOnDelete(title, message).then((function(_this) {\n        return function(finish) {\n          var onError, onSuccess;\n          onSuccess = function() {\n            var ctx;\n            finish();\n            ctx = {\n              project: _this.scope.projectSlug\n            };\n            _this.location.path(_this.navUrls.resolve(\"project-wiki\", ctx));\n            return _this.confirm.notify(\"success\");\n          };\n          onError = function() {\n            finish(false);\n            return _this.confirm.notify(\"error\");\n          };\n          return _this.repo.remove(_this.scope.wiki).then(onSuccess, onError);\n        };\n      })(this));\n    };\n\n    return WikiDetailController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin));\n\n  module.controller(\"WikiDetailController\", WikiDetailController);\n\n  WikiSummaryDirective = function($log, $template) {\n    var link, template;\n    template = $template.get(\"wiki/wiki-summary.html\", true);\n    link = function($scope, $el, $attrs, $model) {\n      var render;\n      render = function(wiki) {\n        var ctx, html, user;\n        if ($scope.usersById == null) {\n          $log.error(\"WikiSummaryDirective requires userById set in scope.\");\n        } else {\n          user = $scope.usersById[wiki.last_modifier];\n        }\n        if (user === void 0) {\n          user = {\n            name: \"unknown\",\n            imgUrl: \"/images/unnamed.png\"\n          };\n        } else {\n          user = {\n            name: user.full_name_display,\n            imgUrl: user.photo\n          };\n        }\n        ctx = {\n          totalEditions: wiki.editions,\n          lastModifiedDate: moment(wiki.modified_date).format(\"DD MMM YYYY HH:mm\"),\n          user: user\n        };\n        html = template(ctx);\n        return $el.html(html);\n      };\n      $scope.$watch($attrs.ngModel, function(wikiPage) {\n        if (!wikiPage) {\n          return;\n        }\n        return render(wikiPage);\n      });\n      $scope.$on(\"wiki:edit\", function(event, wikiPage) {\n        return render(wikiPage);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgWikiSummary\", [\"$log\", \"$tgTemplate\", WikiSummaryDirective]);\n\n  EditableWikiContentDirective = function($window, $document, $repo, $confirm, $loading, $analytics, $qqueue) {\n    var link;\n    link = function($scope, $el, $attrs, $model) {\n      var cancelEdition, disableEdition, getSelectedText, isEditable, save, switchToEditMode, switchToReadMode;\n      isEditable = function() {\n        return $scope.project.my_permissions.indexOf(\"modify_wiki_page\") !== -1;\n      };\n      switchToEditMode = function() {\n        $el.find('.edit-wiki-content').show();\n        $el.find('.view-wiki-content').hide();\n        return $el.find('textarea').focus();\n      };\n      switchToReadMode = function() {\n        $el.find('.edit-wiki-content').hide();\n        return $el.find('.view-wiki-content').show();\n      };\n      disableEdition = function() {\n        $el.find(\".view-wiki-content .edit\").remove();\n        return $el.find(\".edit-wiki-content\").remove();\n      };\n      cancelEdition = function() {\n        if (!$model.$modelValue.id) {\n          return;\n        }\n        $scope.$apply((function(_this) {\n          return function() {\n            return $model.$modelValue.revert();\n          };\n        })(this));\n        return switchToReadMode();\n      };\n      getSelectedText = function() {\n        if ($window.getSelection) {\n          return $window.getSelection().toString();\n        } else if ($document.selection) {\n          return $document.selection.createRange().text;\n        }\n        return null;\n      };\n      save = $qqueue.bindAdd(function(wiki) {\n        var onError, onSuccess, promise;\n        onSuccess = function(wikiPage) {\n          if (wiki.id == null) {\n            $analytics.trackEvent(\"wikipage\", \"create\", \"create wiki page\", 1);\n          }\n          $model.$modelValue = wikiPage;\n          $scope.$broadcast(\"wiki:edit\", wikiPage);\n          $confirm.notify(\"success\");\n          return switchToReadMode();\n        };\n        onError = function() {\n          return $confirm.notify(\"error\");\n        };\n        $loading.start($el.find('.save-container'));\n        if (wiki.id != null) {\n          promise = $repo.save(wiki).then(onSuccess, onError);\n        } else {\n          promise = $repo.create(\"wiki\", wiki).then(onSuccess, onError);\n        }\n        return promise[\"finally\"](function() {\n          return $loading.finish($el.find('.save-container'));\n        });\n      });\n      $el.on(\"mousedown\", \".view-wiki-content\", function(event) {\n        var target;\n        target = angular.element(event.target);\n        if (target.is('pre')) {\n          return target.data(\"scroll-pos\", target[0].scrollLeft);\n        }\n      });\n      $el.on(\"mouseup\", \".view-wiki-content\", function(event) {\n        var prevPos, target;\n        target = angular.element(event.target);\n        if (!isEditable()) {\n          return;\n        }\n        if (target.is('a')) {\n          return;\n        }\n        if (getSelectedText()) {\n          return;\n        }\n        if (target.is('pre')) {\n          prevPos = target.data(\"scroll-pos\");\n          target.data(\"scroll-pos\", null);\n          if (prevPos !== target[0].scrollLeft) {\n            return;\n          }\n        }\n        return switchToEditMode();\n      });\n      $el.on(\"click\", \".save\", debounce(2000, function() {\n        return save($scope.wiki);\n      }));\n      $el.on(\"click\", \".cancel\", function() {\n        return cancelEdition();\n      });\n      $el.on(\"keydown\", \"textarea\", function(event) {\n        if (event.keyCode === 27) {\n          return cancelEdition();\n        }\n      });\n      $scope.$watch($attrs.ngModel, function(wikiPage) {\n        if (!wikiPage) {\n          return;\n        }\n        if (isEditable()) {\n          $el.addClass('editable');\n          if (wikiPage.id == null) {\n            return switchToEditMode();\n          }\n        } else {\n          return disableEdition();\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\",\n      templateUrl: \"wiki/editable-wiki-content.html\"\n    };\n  };\n\n  module.directive(\"tgEditableWikiContent\", [\"$window\", \"$document\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", \"$tgAnalytics\", \"$tgQqueue\", EditableWikiContentDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/wiki/detail.coffee\n */\n\n(function() {\n  var WikiNavDirective, bindOnce, groupBy, mixOf, module, slugify, taiga, unslugify;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  groupBy = this.taiga.groupBy;\n\n  bindOnce = this.taiga.bindOnce;\n\n  slugify = this.taiga.slugify;\n\n  unslugify = this.taiga.slugify;\n\n  module = angular.module(\"taigaWiki\");\n\n  WikiNavDirective = function($tgrepo, $log, $location, $confirm, $navUrls, $analytics, $loading, $template) {\n    var link, template;\n    template = $template.get(\"wiki/wiki-nav.html\", true);\n    link = function($scope, $el, $attrs) {\n      var $ctrl, render;\n      $ctrl = $el.controller();\n      if ($attrs.ngModel == null) {\n        return $log.error(\"WikiNavDirective: no ng-model attr is defined\");\n      }\n      render = function(wikiLinks) {\n        var addWikiLinkPermission, deleteWikiLinkPermission, html;\n        addWikiLinkPermission = $scope.project.my_permissions.indexOf(\"add_wiki_link\") > -1;\n        deleteWikiLinkPermission = $scope.project.my_permissions.indexOf(\"delete_wiki_link\") > -1;\n        html = template({\n          wikiLinks: wikiLinks,\n          projectSlug: $scope.projectSlug,\n          addWikiLinkPermission: addWikiLinkPermission,\n          deleteWikiLinkPermission: deleteWikiLinkPermission\n        });\n        $el.off();\n        $el.html(html);\n        $el.on(\"click\", \".wiki-link .link-title\", function(event) {\n          var linkId, linkSlug, target;\n          event.preventDefault();\n          target = angular.element(event.currentTarget);\n          linkId = target.parents('.wiki-link').data('id');\n          linkSlug = $scope.wikiLinks[linkId].href;\n          return $scope.$apply(function() {\n            var ctx;\n            ctx = {\n              project: $scope.projectSlug,\n              slug: linkSlug\n            };\n            return $location.path($navUrls.resolve(\"project-wiki-page\", ctx));\n          });\n        });\n        $el.on(\"click\", \".add-button\", function(event) {\n          event.preventDefault();\n          $el.find(\".new\").removeClass(\"hidden\");\n          $el.find(\".new input\").focus();\n          return $el.find(\".add-button\").hide();\n        });\n        $el.on(\"click\", \".wiki-link .icon-delete\", function(event) {\n          var linkId, message, target, title;\n          event.preventDefault();\n          event.stopPropagation();\n          target = angular.element(event.currentTarget);\n          linkId = target.parents('.wiki-link').data('id');\n          title = \"Delete Wiki Link\";\n          message = $scope.wikiLinks[linkId].title;\n          return $confirm.askOnDelete(title, message).then((function(_this) {\n            return function(finish) {\n              var promise;\n              promise = $tgrepo.remove($scope.wikiLinks[linkId]);\n              promise.then(function() {\n                promise = $ctrl.loadWikiLinks();\n                promise.then(function() {\n                  finish();\n                  return render($scope.wikiLinks);\n                });\n                return promise.then(null, function() {\n                  return finish();\n                });\n              });\n              return promise.then(null, function() {\n                finish(false);\n                return $confirm.notify(\"error\");\n              });\n            };\n          })(this));\n        });\n        return $el.on(\"keyup\", \".new input\", function(event) {\n          var newLink, promise, target;\n          event.preventDefault();\n          if (event.keyCode === 13) {\n            target = angular.element(event.currentTarget);\n            newLink = target.val();\n            $loading.start($el.find(\".new\"));\n            promise = $tgrepo.create(\"wiki-links\", {\n              project: $scope.projectId,\n              title: newLink,\n              href: slugify(newLink)\n            });\n            promise.then(function() {\n              var loadPromise;\n              $analytics.trackEvent(\"wikilink\", \"create\", \"create wiki link\", 1);\n              loadPromise = $ctrl.loadWikiLinks();\n              loadPromise.then(function() {\n                $loading.finish($el.find(\".new\"));\n                $el.find(\".new\").addClass(\"hidden\");\n                $el.find(\".new input\").val('');\n                $el.find(\".add-button\").show();\n                return render($scope.wikiLinks);\n              });\n              return loadPromise.then(null, function() {\n                $loading.finish($el.find(\".new\"));\n                $el.find(\".new\").addClass(\"hidden\");\n                $el.find(\".new input\").val('');\n                $el.find(\".add-button\").show();\n                return $confirm.notify(\"error\", \"Error loading wiki links\");\n              });\n            });\n            return promise.then(null, function(error) {\n              var _ref;\n              $loading.finish($el.find(\".new\"));\n              $el.find(\".new input\").val(newLink);\n              $el.find(\".new input\").focus().select();\n              if ((error != null ? (_ref = error.__all__) != null ? _ref[0] : void 0 : void 0) != null) {\n                return $confirm.notify(\"error\", \"The link already exists\");\n              } else {\n                return $confirm.notify(\"error\");\n              }\n            });\n          } else if (event.keyCode === 27) {\n            target = angular.element(event.currentTarget);\n            $el.find(\".new\").addClass(\"hidden\");\n            $el.find(\".new input\").val('');\n            return $el.find(\".add-button\").show();\n          }\n        });\n      };\n      return bindOnce($scope, $attrs.ngModel, render);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgWikiNav\", [\"$tgRepo\", \"$log\", \"$tgLocation\", \"$tgConfirm\", \"$tgNavUrls\", \"$tgAnalytics\", \"$tgLoading\", \"$tgTemplate\", WikiNavDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/admin/lightboxes.coffee\n */\n\n(function() {\n  var CreateMembersDirective, MAX_MEMBERSHIP_FIELDSETS, debounce, module, taiga;\n\n  taiga = this.taiga;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaKanban\");\n\n  MAX_MEMBERSHIP_FIELDSETS = 4;\n\n  CreateMembersDirective = function($rs, $rootScope, $confirm, $loading, lightboxService) {\n    var extraTextTemplate, link, template;\n    extraTextTemplate = \"<fieldset class=\\\"extra-text\\\">\\n    <textarea placeholder=\\\"(Optional) Add a personalized text to the invitation. Tell something lovely to your new members ;-)\\\"\\n        maxlength=\\\"255\\\">\\n    </textarea>\\n</fieldset>\";\n    template = _.template(\"<div class=\\\"add-member-wrapper\\\">\\n    <fieldset>\\n        <input type=\\\"email\\\" placeholder=\\\"Type an Email\\\" <% if(required) { %> data-required=\\\"true\\\" <% } %> data-type=\\\"email\\\" />\\n    </fieldset>\\n    <fieldset>\\n        <select <% if(required) { %> data-required=\\\"true\\\" <% } %> data-required=\\\"true\\\">\\n            <% _.each(roleList, function(role) { %>\\n            <option value=\\\"<%- role.id %>\\\"><%- role.name %></option>\\n            <% }); %>\\n        </select>\\n        <a class=\\\"icon icon-plus add-fieldset\\\" href=\\\"\\\"></a>\\n    </fieldset>\\n</div>\");\n    link = function($scope, $el, $attrs) {\n      var createFieldSet, resetForm, submit, submitButton;\n      createFieldSet = function(required) {\n        var ctx;\n        if (required == null) {\n          required = true;\n        }\n        ctx = {\n          roleList: $scope.roles,\n          required: required\n        };\n        return template(ctx);\n      };\n      resetForm = function() {\n        var fieldSet, invitations;\n        $el.find(\"form textarea\").remove(\"\");\n        $el.find(\"form .add-member-wrapper\").remove();\n        invitations = $el.find(\".add-member-forms\");\n        invitations.html(extraTextTemplate);\n        fieldSet = createFieldSet();\n        return invitations.prepend(fieldSet);\n      };\n      $scope.$on(\"membersform:new\", function() {\n        resetForm();\n        return lightboxService.open($el);\n      });\n      $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n      $el.on(\"click\", \".delete-fieldset\", function(event) {\n        var fieldSet, lastActionButton, target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        fieldSet = target.closest('.add-member-wrapper');\n        fieldSet.remove();\n        lastActionButton = $el.find(\"fieldset:last > a\");\n        if (lastActionButton.hasClass(\"icon-delete delete-fieldset\")) {\n          return lastActionButton.removeClass(\"icon-delete delete-fieldset\").addClass(\"icon-plus add-fieldset\");\n        }\n      });\n      $el.on(\"click\", \".add-fieldset\", function(event) {\n        var fieldSet, newFieldSet, target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        fieldSet = target.closest('.add-member-wrapper');\n        target.removeClass(\"icon-plus add-fieldset\").addClass(\"icon-delete delete-fieldset\");\n        newFieldSet = createFieldSet(false);\n        fieldSet.after(newFieldSet);\n        if ($el.find(\".add-member-wrapper\").length === MAX_MEMBERSHIP_FIELDSETS) {\n          return $el.find(\".add-member-wrapper fieldset:last > a\").removeClass(\"icon-plus add-fieldset\").addClass(\"icon-delete delete-fieldset\");\n        }\n      });\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var form, invitation_extra_text, invitations, memberWrappers, onError, onSuccess;\n          event.preventDefault();\n          $loading.start(submitButton);\n          onSuccess = function(data) {\n            $loading.finish(submitButton);\n            lightboxService.close($el);\n            $confirm.notify(\"success\");\n            return $rootScope.$broadcast(\"membersform:new:success\");\n          };\n          onError = function(data) {\n            $loading.finish(submitButton);\n            lightboxService.close($el);\n            $confirm.notify(\"error\");\n            return $rootScope.$broadcast(\"membersform:new:error\");\n          };\n          form = $el.find(\"form\").checksley();\n          form.destroy();\n          form.initialize();\n          if (!form.validate()) {\n            return;\n          }\n          memberWrappers = $el.find(\"form .add-member-wrapper\");\n          memberWrappers = _.filter(memberWrappers, function(mw) {\n            return angular.element(mw).find(\"input\").hasClass('checksley-ok');\n          });\n          invitations = _.map(memberWrappers, function(mw) {\n            var email, memberWrapper, role;\n            memberWrapper = angular.element(mw);\n            email = memberWrapper.find(\"input\");\n            role = memberWrapper.find(\"select\");\n            return {\n              email: email.val(),\n              role_id: role.val()\n            };\n          });\n          if (invitations.length) {\n            invitation_extra_text = $el.find(\"form textarea\").val();\n            return $rs.memberships.bulkCreateMemberships($scope.project.id, invitations, invitation_extra_text).then(onSuccess, onError);\n          }\n        };\n      })(this));\n      submitButton = $el.find(\".submit-button\");\n      return $el.on(\"submit\", \"form\", submit);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLbCreateMembers\", [\"$tgResources\", \"$rootScope\", \"$tgConfirm\", \"$tgLoading\", \"lightboxService\", CreateMembersDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/admin/memberships.coffee\n */\n\n(function() {\n  var MembershipsController, MembershipsDirective, MembershipsRowActionsDirective, MembershipsRowAdminCheckboxDirective, MembershipsRowAvatarDirective, MembershipsRowRoleSelectorDirective, bindMethods, mixOf, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  bindMethods = this.taiga.bindMethods;\n\n  module = angular.module(\"taigaAdmin\");\n\n  MembershipsController = (function(_super) {\n    __extends(MembershipsController, _super);\n\n    MembershipsController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$tgNavUrls\", \"$tgAnalytics\", \"$appTitle\"];\n\n    function MembershipsController(_at_scope, _at_rootscope, _at_repo, _at_confirm, _at_rs, _at_params, _at_q, _at_location, _at_navUrls, _at_analytics, _at_appTitle) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.navUrls = _at_navUrls;\n      this.analytics = _at_analytics;\n      this.appTitle = _at_appTitle;\n      bindMethods(this);\n      this.scope.sectionName = \"Manage Members\";\n      this.scope.project = {};\n      this.scope.filters = {};\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Membership - \" + _this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      this.scope.$on(\"membersform:new:success\", (function(_this) {\n        return function() {\n          _this.loadMembers();\n          return _this.analytics.trackEvent(\"membership\", \"create\", \"create memberships on admin\", 1);\n        };\n      })(this));\n    }\n\n    MembershipsController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          return project;\n        };\n      })(this));\n    };\n\n    MembershipsController.prototype.loadMembers = function() {\n      var httpFilters;\n      httpFilters = this.getUrlFilters();\n      return this.rs.memberships.list(this.scope.projectId, httpFilters).then((function(_this) {\n        return function(data) {\n          _this.scope.memberships = _.filter(data.models, function(membership) {\n            return membership.user === null || membership.is_user_active;\n          });\n          _this.scope.page = data.current;\n          _this.scope.count = data.count;\n          _this.scope.paginatedBy = data.paginatedBy;\n          return data;\n        };\n      })(this));\n    };\n\n    MembershipsController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.repo.resolve({\n        pslug: this.params.pslug\n      }).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadProject();\n        };\n      })(this)).then((function(_this) {\n        return function() {\n          return _this.loadUsersAndRoles();\n        };\n      })(this)).then((function(_this) {\n        return function() {\n          return _this.loadMembers();\n        };\n      })(this));\n    };\n\n    MembershipsController.prototype.getUrlFilters = function() {\n      var filters;\n      filters = _.pick(this.location.search(), \"page\");\n      if (!filters.page) {\n        filters.page = 1;\n      }\n      return filters;\n    };\n\n    MembershipsController.prototype.addNewMembers = function() {\n      return this.rootscope.$broadcast(\"membersform:new\");\n    };\n\n    return MembershipsController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin, taiga.FiltersMixin));\n\n  module.controller(\"MembershipsController\", MembershipsController);\n\n  MembershipsDirective = function($template) {\n    var link, linkPagination, template;\n    template = $template.get(\"admin/admin-membership-paginator.html\", true);\n    linkPagination = function($scope, $el, $attrs, $ctrl) {\n      var $pagEl, afterCurrent, atBegin, atEnd, beforeCurrent, getNumPages, renderPagination;\n      afterCurrent = 2;\n      beforeCurrent = 4;\n      atBegin = 2;\n      atEnd = 2;\n      $pagEl = $el.find(\".memberships-paginator\");\n      getNumPages = function() {\n        var numPages;\n        numPages = $scope.count / $scope.paginatedBy;\n        if (parseInt(numPages, 10) < numPages) {\n          numPages = parseInt(numPages, 10) + 1;\n        } else {\n          numPages = parseInt(numPages, 10);\n        }\n        return numPages;\n      };\n      renderPagination = function() {\n        var cpage, i, numPages, options, pages, _i;\n        numPages = getNumPages();\n        if (numPages <= 1) {\n          $pagEl.hide();\n          return;\n        }\n        pages = [];\n        options = {};\n        options.pages = pages;\n        options.showPrevious = $scope.page > 1;\n        options.showNext = !($scope.page === numPages);\n        cpage = $scope.page;\n        for (i = _i = 1; 1 <= numPages ? _i <= numPages : _i >= numPages; i = 1 <= numPages ? ++_i : --_i) {\n          if (i === (cpage + afterCurrent) && numPages > (cpage + afterCurrent + atEnd)) {\n            pages.push({\n              classes: \"dots\",\n              type: \"dots\"\n            });\n          } else if (i === (cpage - beforeCurrent) && cpage > (atBegin + beforeCurrent)) {\n            pages.push({\n              classes: \"dots\",\n              type: \"dots\"\n            });\n          } else if (i > (cpage + afterCurrent) && i <= (numPages - atEnd)) {\n\n          } else if (i < (cpage - beforeCurrent) && i > atBegin) {\n\n          } else if (i === cpage) {\n            pages.push({\n              classes: \"active\",\n              num: i,\n              type: \"page-active\"\n            });\n          } else {\n            pages.push({\n              classes: \"page\",\n              num: i,\n              type: \"page\"\n            });\n          }\n        }\n        return $pagEl.html(template(options));\n      };\n      $scope.$watch(\"memberships\", function(value) {\n        if (!value) {\n          return;\n        }\n        return renderPagination();\n      });\n      $el.on(\"click\", \".memberships-paginator a.next\", function(event) {\n        event.preventDefault();\n        return $scope.$apply(function() {\n          $ctrl.selectFilter(\"page\", $scope.page + 1);\n          return $ctrl.loadMembers();\n        });\n      });\n      $el.on(\"click\", \".memberships-paginator a.previous\", function(event) {\n        event.preventDefault();\n        return $scope.$apply(function() {\n          $ctrl.selectFilter(\"page\", $scope.page - 1);\n          return $ctrl.loadMembers();\n        });\n      });\n      return $el.on(\"click\", \".memberships-paginator li.page > a\", function(event) {\n        var pagenum, target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        pagenum = target.data(\"pagenum\");\n        return $scope.$apply(function() {\n          $ctrl.selectFilter(\"page\", pagenum);\n          return $ctrl.loadMembers();\n        });\n      });\n    };\n    link = function($scope, $el, $attrs) {\n      var $ctrl;\n      $ctrl = $el.controller();\n      linkPagination($scope, $el, $attrs, $ctrl);\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgMemberships\", [\"$tgTemplate\", MembershipsDirective]);\n\n  MembershipsRowAvatarDirective = function($log, $template) {\n    var link, template;\n    template = $template.get(\"admin/memberships-row-avatar.html\", true);\n    link = function($scope, $el, $attrs) {\n      var member, render;\n      render = function(member) {\n        var ctx, html;\n        ctx = {\n          full_name: member.full_name ? member.full_name : \"\",\n          email: member.user_email ? member.user_email : member.email,\n          imgurl: member.photo ? member.photo : \"/images/unnamed.png\"\n        };\n        html = template(ctx);\n        return $el.html(html);\n      };\n      if ($attrs.tgMembershipsRowAvatar == null) {\n        return $log.error(\"MembershipsRowAvatarDirective: the directive need a member\");\n      }\n      member = $scope.$eval($attrs.tgMembershipsRowAvatar);\n      render(member);\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgMembershipsRowAvatar\", [\"$log\", \"$tgTemplate\", MembershipsRowAvatarDirective]);\n\n  MembershipsRowAdminCheckboxDirective = function($log, $repo, $confirm, $template) {\n    var link, template;\n    template = $template.get(\"admin/admin-memberships-row-checkbox.html\", true);\n    link = function($scope, $el, $attrs) {\n      var html, member, render;\n      render = function(member) {\n        var ctx, html;\n        ctx = {\n          inputId: \"is-admin-\" + member.id\n        };\n        html = template(ctx);\n        return $el.html(html);\n      };\n      if ($attrs.tgMembershipsRowAdminCheckbox == null) {\n        return $log.error(\"MembershipsRowAdminCheckboxDirective: the directive need a member\");\n      }\n      member = $scope.$eval($attrs.tgMembershipsRowAdminCheckbox);\n      html = render(member);\n      if (member.is_owner) {\n        $el.find(\":checkbox\").prop(\"checked\", true);\n      }\n      $el.on(\"click\", \":checkbox\", (function(_this) {\n        return function(event) {\n          var onError, onSuccess, target;\n          onSuccess = function() {\n            return $confirm.notify(\"success\");\n          };\n          onError = function(data) {\n            member.revert();\n            $el.find(\":checkbox\").prop(\"checked\", member.is_owner);\n            return $confirm.notify(\"error\", data.is_owner[0]);\n          };\n          target = angular.element(event.currentTarget);\n          member.is_owner = target.prop(\"checked\");\n          return $repo.save(member).then(onSuccess, onError);\n        };\n      })(this));\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgMembershipsRowAdminCheckbox\", [\"$log\", \"$tgRepo\", \"$tgConfirm\", \"$tgTemplate\", MembershipsRowAdminCheckboxDirective]);\n\n  MembershipsRowRoleSelectorDirective = function($log, $repo, $confirm) {\n    var link, template;\n    template = _.template(\"<select>\\n    <% _.each(roleList, function(role) { %>\\n    <option value=\\\"<%- role.id %>\\\" <% if(selectedRole === role.id){ %>selected=\\\"selected\\\"<% } %>>\\n        <%- role.name %>\\n    </option>\\n    <% }); %>\\n</select>\");\n    link = function($scope, $el, $attrs) {\n      var $ctrl, html, member, render;\n      render = function(member) {\n        var ctx, html;\n        ctx = {\n          roleList: $scope.roles,\n          selectedRole: member.role\n        };\n        html = template(ctx);\n        return $el.html(html);\n      };\n      if ($attrs.tgMembershipsRowRoleSelector == null) {\n        return $log.error(\"MembershipsRowRoleSelectorDirective: the directive need a member\");\n      }\n      $ctrl = $el.controller();\n      member = $scope.$eval($attrs.tgMembershipsRowRoleSelector);\n      html = render(member);\n      $el.on(\"click\", \"select\", (function(_this) {\n        return function(event) {\n          var newRole, onError, onSuccess, target;\n          onSuccess = function() {\n            return $confirm.notify(\"success\");\n          };\n          onError = function() {\n            return $confirm.notify(\"error\");\n          };\n          target = angular.element(event.currentTarget);\n          newRole = parseInt(target.val(), 10);\n          if (member.role !== newRole) {\n            member.role = newRole;\n            return $repo.save(member).then(onSuccess, onError);\n          }\n        };\n      })(this));\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgMembershipsRowRoleSelector\", [\"$log\", \"$tgRepo\", \"$tgConfirm\", MembershipsRowRoleSelectorDirective]);\n\n  MembershipsRowActionsDirective = function($log, $repo, $rs, $confirm) {\n    var activedTemplate, link, pendingTemplate;\n    activedTemplate = _.template(\"<div class=\\\"active\\\">\\n    Active\\n</div>\\n<a class=\\\"delete\\\" href=\\\"\\\">\\n    <span class=\\\"icon icon-delete\\\"></span>\\n</a>\");\n    pendingTemplate = _.template(\"<a class=\\\"pending\\\" href=\\\"\\\">\\n    Pending\\n    <span class=\\\"icon icon-reload\\\"></span>\\n</a>\\n<a class=\\\"delete\\\" href=\\\"\\\" title=\\\"Delete\\\">\\n    <span class=\\\"icon icon-delete\\\"></span>\\n</a>\");\n    link = function($scope, $el, $attrs) {\n      var $ctrl, member, render;\n      render = function(member) {\n        var html;\n        if (member.user) {\n          html = activedTemplate();\n        } else {\n          html = pendingTemplate();\n        }\n        return $el.html(html);\n      };\n      if ($attrs.tgMembershipsRowActions == null) {\n        return $log.error(\"MembershipsRowActionsDirective: the directive need a member\");\n      }\n      $ctrl = $el.controller();\n      member = $scope.$eval($attrs.tgMembershipsRowActions);\n      render(member);\n      $el.on(\"click\", \".pending\", function(event) {\n        var onError, onSuccess;\n        event.preventDefault();\n        onSuccess = function() {\n          return $confirm.notify(\"success\", \"We've sent the invitationi again to '\" + $scope.member.email + \"'.\");\n        };\n        onError = function() {\n          return $confirm.notify(\"error\", \"We haven't sent the invitation.\");\n        };\n        return $rs.memberships.resendInvitation($scope.member.id).then(onSuccess, onError);\n      });\n      $el.on(\"click\", \".delete\", function(event) {\n        var message, title;\n        event.preventDefault();\n        title = \"Delete member\";\n        message = member.user ? member.full_name : \"the invitation to \" + member.email;\n        return $confirm.askOnDelete(title, message).then(function(finish) {\n          var onError, onSuccess;\n          onSuccess = function() {\n            finish();\n            $ctrl.loadMembers();\n            return $confirm.notify(\"success\", null, \"We've deleted \" + message + \".\");\n          };\n          onError = function() {\n            finish(false);\n            return $confirm.notify(\"error\", null, \"We have not been able to delete \" + message + \".\");\n          };\n          return $repo.remove(member).then(onSuccess, onError);\n        });\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgMembershipsRowActions\", [\"$log\", \"$tgRepo\", \"$tgResources\", \"$tgConfirm\", MembershipsRowActionsDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/admin/nav.coffee\n */\n\n(function() {\n  var AdminNavigationDirective, module;\n\n  AdminNavigationDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var section;\n      section = $attrs.tgAdminNavigation;\n      $el.find(\".active\").removeClass(\"active\");\n      $el.find(\"#adminmenu-\" + section + \" a\").addClass(\"active\");\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module = angular.module(\"taigaAdmin\");\n\n  module.directive(\"tgAdminNavigation\", AdminNavigationDirective);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/admin/project-profile.coffee\n */\n\n(function() {\n  var ProjectDefaultValuesDirective, ProjectExportDirective, ProjectModulesDirective, ProjectProfileController, ProjectProfileDirective, bindOnce, debounce, groupBy, joinStr, mixOf, module, taiga, toString, trim,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  trim = this.taiga.trim;\n\n  toString = this.taiga.toString;\n\n  joinStr = this.taiga.joinStr;\n\n  groupBy = this.taiga.groupBy;\n\n  bindOnce = this.taiga.bindOnce;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaAdmin\");\n\n  ProjectProfileController = (function(_super) {\n    __extends(ProjectProfileController, _super);\n\n    ProjectProfileController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$tgNavUrls\", \"$appTitle\"];\n\n    function ProjectProfileController(_at_scope, _at_rootscope, _at_repo, _at_confirm, _at_rs, _at_params, _at_q, _at_location, _at_navUrls, _at_appTitle) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.navUrls = _at_navUrls;\n      this.appTitle = _at_appTitle;\n      this.scope.project = {};\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Project profile - \" + _this.scope.sectionName + \" - \" + _this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      this.scope.$on(\"project:loaded\", (function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Project profile - \" + _this.scope.sectionName + \" - \" + _this.scope.project.name);\n        };\n      })(this));\n    }\n\n    ProjectProfileController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.pointsList = _.sortBy(project.points, \"order\");\n          _this.scope.usStatusList = _.sortBy(project.us_statuses, \"order\");\n          _this.scope.taskStatusList = _.sortBy(project.task_statuses, \"order\");\n          _this.scope.prioritiesList = _.sortBy(project.priorities, \"order\");\n          _this.scope.severitiesList = _.sortBy(project.severities, \"order\");\n          _this.scope.issueTypesList = _.sortBy(project.issue_types, \"order\");\n          _this.scope.issueStatusList = _.sortBy(project.issue_statuses, \"order\");\n          _this.scope.$emit('project:loaded', project);\n          return project;\n        };\n      })(this));\n    };\n\n    ProjectProfileController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.repo.resolve({\n        pslug: this.params.pslug\n      }).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadProject();\n        };\n      })(this));\n    };\n\n    ProjectProfileController.prototype.openDeleteLightbox = function() {\n      return this.rootscope.$broadcast(\"deletelightbox:new\", this.scope.project);\n    };\n\n    return ProjectProfileController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin));\n\n  module.controller(\"ProjectProfileController\", ProjectProfileController);\n\n  ProjectProfileDirective = function($repo, $confirm, $loading, $navurls, $location) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var form, submit, submitButton;\n      form = $el.find(\"form\").checksley({\n        \"onlyOneErrorElement\": true\n      });\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var promise;\n          event.preventDefault();\n          if (!form.validate()) {\n            return;\n          }\n          $loading.start(submitButton);\n          promise = $repo.save($scope.project);\n          promise.then(function() {\n            var newUrl;\n            $loading.finish(submitButton);\n            $confirm.notify(\"success\");\n            newUrl = $navurls.resolve(\"project-admin-project-profile-details\", {\n              project: $scope.project.slug\n            });\n            $location.path(newUrl);\n            return $scope.$emit(\"project:loaded\", $scope.project);\n          });\n          return promise.then(null, function(data) {\n            $loading.finish(target);\n            form.setErrors(data);\n            if (data._error_message) {\n              return $confirm.notify(\"error\", data._error_message);\n            }\n          });\n        };\n      })(this));\n      submitButton = $el.find(\".submit-button\");\n      return $el.on(\"submit\", \"form\", submit);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgProjectProfile\", [\"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", \"$tgNavUrls\", \"$tgLocation\", ProjectProfileDirective]);\n\n  ProjectDefaultValuesDirective = function($repo, $confirm, $loading) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var form, submit, submitButton;\n      form = $el.find(\"form\").checksley({\n        \"onlyOneErrorElement\": true\n      });\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var promise;\n          event.preventDefault();\n          if (!form.validate()) {\n            return;\n          }\n          $loading.start(submitButton);\n          promise = $repo.save($scope.project);\n          promise.then(function() {\n            $loading.finish(submitButton);\n            return $confirm.notify(\"success\");\n          });\n          return promise.then(null, function(data) {\n            $loading.finish(target);\n            form.setErrors(data);\n            if (data._error_message) {\n              return $confirm.notify(\"error\", data._error_message);\n            }\n          });\n        };\n      })(this));\n      submitButton = $el.find(\".submit-button\");\n      $el.on(\"submit\", \"form\", submit);\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgProjectDefaultValues\", [\"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", ProjectDefaultValuesDirective]);\n\n  ProjectModulesDirective = function($repo, $confirm, $loading) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var form, submit;\n      form = $el.find(\"form\").checksley();\n      submit = (function(_this) {\n        return function() {\n          var promise, target;\n          if (!form.validate()) {\n            return;\n          }\n          target = angular.element(\".admin-functionalities a.button-green\");\n          $loading.start(target);\n          promise = $repo.save($scope.project);\n          promise.then(function() {\n            $loading.finish(target);\n            $confirm.notify(\"success\");\n            return $scope.$emit(\"project:loaded\", $scope.project);\n          });\n          return promise.then(null, function(data) {\n            $loading.finish(target);\n            return $confirm.notify(\"error\", data._error_message);\n          });\n        };\n      })(this);\n      $el.on(\"submit\", \"form\", function(event) {\n        event.preventDefault();\n        return submit();\n      });\n      $el.on(\"click\", \".admin-functionalities a.button-green\", function(event) {\n        event.preventDefault();\n        return submit();\n      });\n      $scope.$watch(\"isVideoconferenceActivated\", function(isVideoconferenceActivated) {\n        if (isVideoconferenceActivated) {\n          return $el.find(\".videoconference-attributes\").removeClass(\"hidden\");\n        } else {\n          $el.find(\".videoconference-attributes\").addClass(\"hidden\");\n          $scope.project.videoconferences = null;\n          return $scope.project.videoconferences_salt = \"\";\n        }\n      });\n      return $scope.$watch(\"project\", function(project) {\n        if (project.videoconferences != null) {\n          return $scope.isVideoconferenceActivated = true;\n        } else {\n          return $scope.isVideoconferenceActivated = false;\n        }\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgProjectModules\", [\"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", ProjectModulesDirective]);\n\n  ProjectExportDirective = function($window, $rs, $confirm) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var buttonsEl, hideButtons, hideResult, hideSpinner, resultEl, resultMessageEl, resultTitleEl, setAsyncMessage, setAsyncTitle, setLoadingMessage, setLoadingTitle, setSyncMessage, setSyncTitle, showButtons, showErrorMode, showExportResultAsyncMode, showExportResultSyncMode, showLoadingMode, showResult, showSpinner, spinnerEl;\n      buttonsEl = $el.find(\".admin-project-export-buttons\");\n      showButtons = function() {\n        return buttonsEl.removeClass(\"hidden\");\n      };\n      hideButtons = function() {\n        return buttonsEl.addClass(\"hidden\");\n      };\n      resultEl = $el.find(\".admin-project-export-result\");\n      showResult = function() {\n        return resultEl.removeClass(\"hidden\");\n      };\n      hideResult = function() {\n        return resultEl.addClass(\"hidden\");\n      };\n      spinnerEl = $el.find(\".spin\");\n      showSpinner = function() {\n        return spinnerEl.removeClass(\"hidden\");\n      };\n      hideSpinner = function() {\n        return spinnerEl.addClass(\"hidden\");\n      };\n      resultTitleEl = $el.find(\".result-title\");\n      setLoadingTitle = function() {\n        return resultTitleEl.html(\"We are generating your dump file\");\n      };\n      setAsyncTitle = function() {\n        return resultTitleEl.html(\"We are generating your dump file\");\n      };\n      setSyncTitle = function() {\n        return resultTitleEl.html(\"Your dump file ir ready!\");\n      };\n      resultMessageEl = $el.find(\".result-message \");\n      setLoadingMessage = function() {\n        return resultMessageEl.html(\"Please don't close this page.\");\n      };\n      setAsyncMessage = function() {\n        return resultMessageEl.html(\"We will send you an email when ready.\");\n      };\n      setSyncMessage = function(url) {\n        return resultMessageEl.html(\"If the download doesn't start automatically click <a href='\" + url + \"' download title='Download the dump file'>here.\");\n      };\n      showLoadingMode = function() {\n        showSpinner();\n        setLoadingTitle();\n        setLoadingMessage();\n        hideButtons();\n        return showResult();\n      };\n      showExportResultAsyncMode = function() {\n        hideSpinner();\n        setAsyncTitle();\n        return setAsyncMessage();\n      };\n      showExportResultSyncMode = function(url) {\n        hideSpinner();\n        setSyncTitle();\n        return setSyncMessage(url);\n      };\n      showErrorMode = function() {\n        hideSpinner();\n        hideResult();\n        return showButtons();\n      };\n      return $el.on(\"click\", \"a.button-export\", debounce(2000, (function(_this) {\n        return function(event) {\n          var onError, onSuccess;\n          event.preventDefault();\n          onSuccess = function(result) {\n            var dumpUrl;\n            if (result.status === 202) {\n              return showExportResultAsyncMode();\n            } else {\n              dumpUrl = result.data.url;\n              showExportResultSyncMode(dumpUrl);\n              return $window.open(dumpUrl, \"_blank\");\n            }\n          };\n          onError = function(result) {\n            var errorMsg, _ref;\n            showErrorMode();\n            errorMsg = \"Our oompa loompas have some problems generasting your dump. Please try again. \";\n            if (result.status === 429) {\n              errorMsg = \"Sorry, our oompa loompas are very busy right now. Please try again in a few minutes. \";\n            } else if ((_ref = result.data) != null ? _ref._error_message : void 0) {\n              errorMsg = \"Our oompa loompas have some problems generasting your dump: \" + result.data._error_message;\n            }\n            return $confirm.notify(\"error\", errorMsg);\n          };\n          showLoadingMode();\n          return $rs.projects[\"export\"]($scope.projectId).then(onSuccess, onError);\n        };\n      })(this)));\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgProjectExport\", [\"$window\", \"$tgResources\", \"$tgConfirm\", ProjectExportDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/admin/project-profile.coffee\n */\n\n(function() {\n  var ColorSelectionDirective, ProjectValuesController, ProjectValuesDirective, bindOnce, debounce, groupBy, joinStr, mixOf, module, taiga, toString, trim,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  trim = this.taiga.trim;\n\n  toString = this.taiga.toString;\n\n  joinStr = this.taiga.joinStr;\n\n  groupBy = this.taiga.groupBy;\n\n  bindOnce = this.taiga.bindOnce;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaAdmin\");\n\n  ProjectValuesController = (function(_super) {\n    __extends(ProjectValuesController, _super);\n\n    ProjectValuesController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$tgNavUrls\", \"$appTitle\"];\n\n    function ProjectValuesController(_at_scope, _at_rootscope, _at_repo, _at_confirm, _at_rs, _at_params, _at_q, _at_location, _at_navUrls, _at_appTitle) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.navUrls = _at_navUrls;\n      this.appTitle = _at_appTitle;\n      this.moveValue = __bind(this.moveValue, this);\n      this.scope.project = {};\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Project values - \" + _this.scope.sectionName + \" - \" + _this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      this.scope.$on(\"admin:project-values:move\", this.moveValue);\n    }\n\n    ProjectValuesController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          return project;\n        };\n      })(this));\n    };\n\n    ProjectValuesController.prototype.loadValues = function() {\n      return this.rs[this.scope.resource].listValues(this.scope.projectId, this.scope.type).then((function(_this) {\n        return function(values) {\n          _this.scope.values = values;\n          _this.scope.maxValueOrder = _.max(values, \"order\").order;\n          return values;\n        };\n      })(this));\n    };\n\n    ProjectValuesController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.repo.resolve({\n        pslug: this.params.pslug\n      }).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.q.all([_this.loadProject(), _this.loadValues()]);\n        };\n      })(this));\n    };\n\n    ProjectValuesController.prototype.moveValue = function(ctx, itemValue, itemIndex) {\n      var r, values;\n      values = this.scope.values;\n      r = values.indexOf(itemValue);\n      values.splice(r, 1);\n      values.splice(itemIndex, 0, itemValue);\n      _.each(values, function(value, index) {\n        return value.order = index;\n      });\n      return this.repo.saveAll(values);\n    };\n\n    return ProjectValuesController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin));\n\n  module.controller(\"ProjectValuesController\", ProjectValuesController);\n\n  ProjectValuesDirective = function($log, $repo, $confirm, $location, animationFrame) {\n    var link, linkDragAndDrop, linkValue;\n    linkDragAndDrop = function($scope, $el, $attrs) {\n      var itemEl, newParentScope, oldParentScope, tdom;\n      oldParentScope = null;\n      newParentScope = null;\n      itemEl = null;\n      tdom = $el.find(\".sortable\");\n      tdom.sortable({\n        handle: \".row.table-main.visualization\",\n        dropOnEmpty: true,\n        connectWith: \".project-values-body\",\n        revert: 400,\n        axis: \"y\"\n      });\n      tdom.on(\"sortstop\", function(event, ui) {\n        var itemIndex, itemValue;\n        itemEl = ui.item;\n        itemValue = itemEl.scope().value;\n        itemIndex = itemEl.index();\n        return $scope.$broadcast(\"admin:project-values:move\", itemValue, itemIndex);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    linkValue = function($scope, $el, $attrs) {\n      var $ctrl, cancel, goToBottomList, initializeNewValue, saveValue, submit, valueType;\n      $ctrl = $el.controller();\n      valueType = $attrs.type;\n      initializeNewValue = function() {\n        return $scope.newValue = {\n          \"name\": \"\",\n          \"is_closed\": false,\n          \"is_archived\": false\n        };\n      };\n      initializeNewValue();\n      goToBottomList = (function(_this) {\n        return function(focus) {\n          var table;\n          if (focus == null) {\n            focus = false;\n          }\n          table = $el.find(\".table-main\");\n          $(document.body).scrollTop(table.offset().top + table.height());\n          if (focus) {\n            return $(\".new-value input\").focus();\n          }\n        };\n      })(this);\n      submit = debounce(2000, (function(_this) {\n        return function() {\n          var promise;\n          promise = $repo.save($scope.project);\n          promise.then(function() {\n            return $confirm.notify(\"success\");\n          });\n          return promise.then(null, function(data) {\n            return $confirm.notify(\"error\", data._error_message);\n          });\n        };\n      })(this));\n      saveValue = debounce(2000, function(target) {\n        var form, promise, value;\n        form = target.parents(\"form\").checksley();\n        if (!form.validate()) {\n          return;\n        }\n        value = target.scope().value;\n        promise = $repo.save(value);\n        promise.then((function(_this) {\n          return function() {\n            var row;\n            row = target.parents(\".row.table-main\");\n            row.addClass(\"hidden\");\n            return row.siblings(\".visualization\").removeClass('hidden');\n          };\n        })(this));\n        return promise.then(null, function(data) {\n          $confirm.notify(\"error\");\n          return form.setErrors(data);\n        });\n      });\n      cancel = function(target) {\n        var row, value;\n        row = target.parents(\".row.table-main\");\n        value = target.scope().value;\n        return $scope.$apply(function() {\n          row.addClass(\"hidden\");\n          value.revert();\n          return row.siblings(\".visualization\").removeClass('hidden');\n        });\n      };\n      $el.on(\"submit\", \"form\", function(event) {\n        event.preventDefault();\n        return submit();\n      });\n      $el.on(\"click\", \"form a.button-green\", function(event) {\n        event.preventDefault();\n        return submit();\n      });\n      $el.on(\"click\", \".show-add-new\", function(event) {\n        event.preventDefault();\n        $el.find(\".new-value\").removeClass('hidden');\n        return goToBottomList(true);\n      });\n      $el.on(\"click\", \".add-new\", debounce(2000, function(event) {\n        var form, promise;\n        event.preventDefault();\n        form = $el.find(\".new-value\").parents(\"form\").checksley();\n        if (!form.validate()) {\n          return;\n        }\n        $scope.newValue.project = $scope.project.id;\n        $scope.newValue.order = $scope.maxValueOrder ? $scope.maxValueOrder + 1 : 1;\n        promise = $repo.create(valueType, $scope.newValue);\n        promise.then((function(_this) {\n          return function() {\n            $ctrl.loadValues().then(function() {\n              return animationFrame.add(function() {\n                return goToBottomList();\n              });\n            });\n            $el.find(\".new-value\").addClass(\"hidden\");\n            return initializeNewValue();\n          };\n        })(this));\n        return promise.then(null, function(data) {\n          $confirm.notify(\"error\");\n          return form.setErrors(data);\n        });\n      }));\n      $el.on(\"click\", \".delete-new\", function(event) {\n        event.preventDefault();\n        $el.find(\".new-value\").hide();\n        return initializeNewValue();\n      });\n      $el.on(\"click\", \".edit-value\", function(event) {\n        var editionRow, row, target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        row = target.parents(\".row.table-main\");\n        row.addClass(\"hidden\");\n        editionRow = row.siblings(\".edition\");\n        editionRow.removeClass('hidden');\n        return editionRow.find('input:visible').first().focus().select();\n      });\n      $el.on(\"keyup\", \".edition input\", function(event) {\n        var target;\n        if (event.keyCode === 13) {\n          target = angular.element(event.currentTarget);\n          return saveValue(target);\n        } else if (event.keyCode === 27) {\n          target = angular.element(event.currentTarget);\n          return cancel(target);\n        }\n      });\n      $el.on(\"click\", \".save\", function(event) {\n        var target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        return saveValue(target);\n      });\n      $el.on(\"click\", \".cancel\", function(event) {\n        var target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        return cancel(target);\n      });\n      return $el.on(\"click\", \".delete-value\", function(event) {\n        var choices, replacement, subtitle, target, title, value;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        value = target.scope().value;\n        choices = {};\n        _.each($scope.values, function(option) {\n          if (value.id !== option.id) {\n            return choices[option.id] = option.name;\n          }\n        });\n        title = \"Delete value\";\n        subtitle = value.name;\n        replacement = \"All items with this value will be changed to\";\n        if (_.keys(choices).length === 0) {\n          return $confirm.error(\"You can't delete all values.\");\n        }\n        return $confirm.askChoice(title, subtitle, choices, replacement).then(function(response) {\n          var onError, onSucces;\n          onSucces = function() {\n            return $ctrl.loadValues()[\"finally\"](function() {\n              return response.finish();\n            });\n          };\n          onError = function() {\n            return $confirm.notify(\"error\");\n          };\n          return $repo.remove(value, {\n            \"moveTo\": response.selected\n          }).then(onSucces, onError);\n        });\n      });\n    };\n    link = function($scope, $el, $attrs) {\n      linkDragAndDrop($scope, $el, $attrs);\n      linkValue($scope, $el, $attrs);\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgProjectValues\", [\"$log\", \"$tgRepo\", \"$tgConfirm\", \"$tgLocation\", \"animationFrame\", ProjectValuesDirective]);\n\n  ColorSelectionDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs, $model) {\n      var $ctrl;\n      $ctrl = $el.controller();\n      $scope.$watch($attrs.ngModel, function(element) {\n        return $scope.color = element.color;\n      });\n      $el.on(\"click\", \".current-color\", function(event) {\n        var body, target;\n        event.preventDefault();\n        event.stopPropagation();\n        target = angular.element(event.currentTarget);\n        $el.find(\".select-color\").hide();\n        target.siblings(\".select-color\").show();\n        body = angular.element(\"body\");\n        return body.on(\"click\", (function(_this) {\n          return function(event) {\n            if (angular.element(event.target).parent(\".select-color\").length === 0) {\n              $el.find(\".select-color\").hide();\n              return body.unbind(\"click\");\n            }\n          };\n        })(this));\n      });\n      $el.on(\"click\", \".select-color .color\", function(event) {\n        var target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        $scope.$apply(function() {\n          return $model.$modelValue.color = target.data(\"color\");\n        });\n        return $el.find(\".select-color\").hide();\n      });\n      $el.on(\"click\", \".select-color .selected-color\", function(event) {\n        event.preventDefault();\n        $scope.$apply(function() {\n          return $model.$modelValue.color = $scope.color;\n        });\n        return $el.find(\".select-color\").hide();\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgColorSelection\", ColorSelectionDirective);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/admin/memberships.coffee\n */\n\n(function() {\n  var EditRoleDirective, NewRoleDirective, RolePermissionsDirective, RolesController, RolesDirective, bindMethods, bindOnce, debounce, mixOf, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  bindOnce = this.taiga.bindOnce;\n\n  debounce = this.taiga.debounce;\n\n  bindMethods = this.taiga.bindMethods;\n\n  module = angular.module(\"taigaAdmin\");\n\n  RolesController = (function(_super) {\n    __extends(RolesController, _super);\n\n    RolesController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$tgNavUrls\", \"$appTitle\"];\n\n    function RolesController(_at_scope, _at_rootscope, _at_repo, _at_confirm, _at_rs, _at_params, _at_q, _at_location, _at_navUrls, _at_appTitle) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.navUrls = _at_navUrls;\n      this.appTitle = _at_appTitle;\n      bindMethods(this);\n      this.scope.sectionName = \"Permissions\";\n      this.scope.project = {};\n      this.scope.anyComputableRole = true;\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Roles - \" + _this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n    }\n\n    RolesController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          _this.scope.anyComputableRole = _.some(_.map(project.roles, function(point) {\n            return point.computable;\n          }));\n          return project;\n        };\n      })(this));\n    };\n\n    RolesController.prototype.loadRoles = function() {\n      return this.rs.roles.list(this.scope.projectId).then((function(_this) {\n        return function(data) {\n          _this.scope.roles = data;\n          _this.scope.role = _this.scope.roles[0];\n          return data;\n        };\n      })(this));\n    };\n\n    RolesController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.repo.resolve({\n        pslug: this.params.pslug\n      }).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadProject();\n        };\n      })(this)).then((function(_this) {\n        return function() {\n          return _this.loadUsersAndRoles();\n        };\n      })(this)).then((function(_this) {\n        return function() {\n          return _this.loadRoles();\n        };\n      })(this));\n    };\n\n    RolesController.prototype.setRole = function(role) {\n      this.scope.role = role;\n      return this.scope.$broadcast(\"role:changed\", this.scope.role);\n    };\n\n    RolesController.prototype[\"delete\"] = function() {\n      var choices, replacement, role, subtitle, title, warning, _i, _len, _ref;\n      title = \"Delete Role\";\n      subtitle = this.scope.role.name;\n      replacement = \"All the users with this role will be moved to\";\n      warning = \"<strong>Be careful, all role estimations will be removed</strong>\";\n      choices = {};\n      _ref = this.scope.roles;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        role = _ref[_i];\n        if (role.id !== this.scope.role.id) {\n          choices[role.id] = role.name;\n        }\n      }\n      if (_.keys(choices).length === 0) {\n        return this.confirm.error(\"You can't delete all values.\");\n      }\n      return this.confirm.askChoice(title, subtitle, choices, replacement, warning).then((function(_this) {\n        return function(response) {\n          var promise;\n          promise = _this.repo.remove(_this.scope.role, {\n            moveTo: response.selected\n          });\n          promise.then(function() {\n            _this.loadProject();\n            return _this.loadRoles()[\"finally\"](function() {\n              return response.finish();\n            });\n          });\n          return promise.then(null, function() {\n            return _this.confirm.notify('error');\n          });\n        };\n      })(this));\n    };\n\n    RolesController.prototype.setComputable = debounce(2000, function() {\n      var onError, onSuccess;\n      onSuccess = (function(_this) {\n        return function() {\n          _this.confirm.notify(\"success\");\n          return _this.loadProject();\n        };\n      })(this);\n      onError = (function(_this) {\n        return function() {\n          _this.confirm.notify(\"error\");\n          return _this.scope.role.revert();\n        };\n      })(this);\n      return this.repo.save(this.scope.role).then(onSuccess, onError);\n    });\n\n    return RolesController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin, taiga.FiltersMixin));\n\n  module.controller(\"RolesController\", RolesController);\n\n  EditRoleDirective = function($repo, $confirm) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var submit, toggleView;\n      toggleView = function() {\n        $el.find('.total').toggle();\n        return $el.find('.edit-role').toggle();\n      };\n      submit = function() {\n        var promise;\n        $scope.role.name = $el.find(\"input\").val();\n        promise = $repo.save($scope.role);\n        promise.then(function() {\n          return $confirm.notify(\"success\");\n        });\n        promise.then(null, function(data) {\n          return $confirm.notify(\"error\");\n        });\n        return toggleView();\n      };\n      $el.on(\"click\", \"a.icon-edit\", function() {\n        toggleView();\n        $el.find(\"input\").focus();\n        return $el.find(\"input\").val($scope.role.name);\n      });\n      $el.on(\"click\", \"a.save\", submit);\n      $el.on(\"keyup\", \"input\", function(event) {\n        if (event.keyCode === 13) {\n          return submit();\n        } else if (event.keyCode === 27) {\n          return toggleView();\n        }\n      });\n      $scope.$on(\"role:changed\", function() {\n        if ($el.find('.edit-role').is(\":visible\")) {\n          return toggleView();\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgEditRole\", [\"$tgRepo\", \"$tgConfirm\", EditRoleDirective]);\n\n  RolesDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var $ctrl;\n      $ctrl = $el.controller();\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgRoles\", RolesDirective);\n\n  NewRoleDirective = function($tgrepo, $confirm) {\n    var DEFAULT_PERMISSIONS, link;\n    DEFAULT_PERMISSIONS = [\"view_project\", \"view_milestones\", \"view_us\", \"view_tasks\", \"view_issues\"];\n    link = function($scope, $el, $attrs) {\n      var $ctrl;\n      $ctrl = $el.controller();\n      $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n      $el.on(\"click\", \"a.add-button\", function(event) {\n        event.preventDefault();\n        $el.find(\".new\").removeClass(\"hidden\");\n        $el.find(\".new\").focus();\n        return $el.find(\".add-button\").hide();\n      });\n      return $el.on(\"keyup\", \".new\", function(event) {\n        var newRole, onError, onSuccess, target;\n        event.preventDefault();\n        if (event.keyCode === 13) {\n          target = angular.element(event.currentTarget);\n          newRole = {\n            project: $scope.projectId,\n            name: target.val(),\n            permissions: DEFAULT_PERMISSIONS,\n            order: _.max($scope.roles, function(r) {\n              return r.order;\n            }).order + 1,\n            computable: false\n          };\n          $el.find(\".new\").addClass(\"hidden\");\n          $el.find(\".new\").val('');\n          onSuccess = function(role) {\n            $scope.roles.push(role);\n            $ctrl.setRole(role);\n            $el.find(\".add-button\").show();\n            return $ctrl.loadProject();\n          };\n          onError = function() {\n            return $confirm.notify(\"error\");\n          };\n          return $tgrepo.create(\"roles\", newRole).then(onSuccess, onError);\n        } else if (event.keyCode === 27) {\n          target = angular.element(event.currentTarget);\n          $el.find(\".new\").addClass(\"hidden\");\n          $el.find(\".new\").val('');\n          return $el.find(\".add-button\").show();\n        }\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgNewRole\", [\"$tgRepo\", \"$tgConfirm\", NewRoleDirective]);\n\n  RolePermissionsDirective = function($rootscope, $repo, $confirm) {\n    var baseTemplate, categoryTemplate, link, resumeTemplate;\n    resumeTemplate = _.template(\"<div class=\\\"resume-title\\\"><%- category.name %></div>\\n<div class=\\\"summary-role\\\">\\n    <div class=\\\"count\\\"><%- category.activePermissions %>/<%- category.permissions.length %></div>\\n    <% _.each(category.permissions, function(permission) { %>\\n        <div class=\\\"role-summary-single <% if(permission.active) { %>active<% } %>\\\"\\n             title=\\\"<%- permission.description %>\\\"></div>\\n    <% }) %>\\n</div>\\n<div class=\\\"icon icon-arrow-bottom\\\"></div>\");\n    categoryTemplate = _.template(\"<div class=\\\"category-config\\\" data-id=\\\"<%- index %>\\\">\\n    <div class=\\\"resume\\\">\\n    </div>\\n    <div class=\\\"category-items\\\">\\n        <div class=\\\"items-container\\\">\\n        <% _.each(category.permissions, function(permission) { %>\\n            <div class=\\\"category-item\\\" data-id=\\\"<%- permission.key %>\\\">\\n                <span><%- permission.description %></span>\\n                <div class=\\\"check\\\">\\n                    <input type=\\\"checkbox\\\" <% if(permission.active) { %>checked=\\\"checked\\\"<% } %>/>\\n                    <div></div>\\n                    <span class=\\\"check-text check-yes\\\">Yes</span>\\n                    <span class=\\\"check-text check-no\\\">No</span>\\n                </div>\\n            </div>\\n        <% }) %>\\n        </div>\\n    </div>\\n</div>\");\n    baseTemplate = _.template(\"<div class=\\\"category-config-list\\\"></div>\");\n    link = function($scope, $el, $attrs) {\n      var $ctrl, generateCategoriesFromRole, renderCategory, renderPermissions, renderResume;\n      $ctrl = $el.controller();\n      generateCategoriesFromRole = function(role) {\n        var categories, issuePermissions, milestonePermissions, setActivePermissions, setActivePermissionsPerCategory, taskPermissions, userStoryPermissions, wikiPermissions;\n        setActivePermissions = function(permissions) {\n          return _.map(permissions, function(x) {\n            var _ref;\n            return _.extend({}, x, {\n              active: (_ref = x[\"key\"], __indexOf.call(role.permissions, _ref) >= 0)\n            });\n          });\n        };\n        setActivePermissionsPerCategory = function(category) {\n          return _.map(category, function(x) {\n            return _.extend({}, x, {\n              activePermissions: _.filter(x[\"permissions\"], \"active\").length\n            });\n          });\n        };\n        categories = [];\n        milestonePermissions = [\n          {\n            key: \"view_milestones\",\n            description: \"View sprints\"\n          }, {\n            key: \"add_milestone\",\n            description: \"Add sprint\"\n          }, {\n            key: \"modify_milestone\",\n            description: \"Modify sprint\"\n          }, {\n            key: \"delete_milestone\",\n            description: \"Delete sprint\"\n          }\n        ];\n        categories.push({\n          name: \"Sprints\",\n          permissions: setActivePermissions(milestonePermissions)\n        });\n        userStoryPermissions = [\n          {\n            key: \"view_us\",\n            description: \"View user story\"\n          }, {\n            key: \"add_us\",\n            description: \"Add user story\"\n          }, {\n            key: \"modify_us\",\n            description: \"Modify user story\"\n          }, {\n            key: \"delete_us\",\n            description: \"Delete user story\"\n          }\n        ];\n        categories.push({\n          name: \"User Stories\",\n          permissions: setActivePermissions(userStoryPermissions)\n        });\n        taskPermissions = [\n          {\n            key: \"view_tasks\",\n            description: \"View tasks\"\n          }, {\n            key: \"add_task\",\n            description: \"Add task\"\n          }, {\n            key: \"modify_task\",\n            description: \"Modify task\"\n          }, {\n            key: \"delete_task\",\n            description: \"Delete task\"\n          }\n        ];\n        categories.push({\n          name: \"Tasks\",\n          permissions: setActivePermissions(taskPermissions)\n        });\n        issuePermissions = [\n          {\n            key: \"view_issues\",\n            description: \"View issues\"\n          }, {\n            key: \"add_issue\",\n            description: \"Add issue\"\n          }, {\n            key: \"modify_issue\",\n            description: \"Modify issue\"\n          }, {\n            key: \"delete_issue\",\n            description: \"Delete issue\"\n          }\n        ];\n        categories.push({\n          name: \"Issues\",\n          permissions: setActivePermissions(issuePermissions)\n        });\n        wikiPermissions = [\n          {\n            key: \"view_wiki_pages\",\n            description: \"View wiki pages\"\n          }, {\n            key: \"add_wiki_page\",\n            description: \"Add wiki page\"\n          }, {\n            key: \"modify_wiki_page\",\n            description: \"Modify wiki page\"\n          }, {\n            key: \"delete_wiki_page\",\n            description: \"Delete wiki page\"\n          }, {\n            key: \"view_wiki_links\",\n            description: \"View wiki links\"\n          }, {\n            key: \"add_wiki_link\",\n            description: \"Add wiki link\"\n          }, {\n            key: \"delete_wiki_link\",\n            description: \"Delete wiki link\"\n          }\n        ];\n        categories.push({\n          name: \"Wiki\",\n          permissions: setActivePermissions(wikiPermissions)\n        });\n        return setActivePermissionsPerCategory(categories);\n      };\n      renderResume = function(element, category) {\n        return element.find(\".resume\").html(resumeTemplate({\n          category: category\n        }));\n      };\n      renderCategory = function(category, index) {\n        var html;\n        html = categoryTemplate({\n          category: category,\n          index: index\n        });\n        html = angular.element(html);\n        renderResume(html, category);\n        return html;\n      };\n      renderPermissions = function() {\n        var html;\n        $el.off();\n        html = baseTemplate();\n        _.each(generateCategoriesFromRole($scope.role), function(category, index) {\n          return html = angular.element(html).append(renderCategory(category, index));\n        });\n        $el.html(html);\n        $el.on(\"click\", \".resume\", function(event) {\n          var target;\n          event.preventDefault();\n          target = angular.element(event.currentTarget);\n          return target.next().toggleClass(\"open\");\n        });\n        return $el.on(\"change\", \".category-item input\", function(event) {\n          var getActivePermissions, onError, onSuccess, target;\n          getActivePermissions = function() {\n            var activePermissions;\n            activePermissions = _.filter($el.find(\".category-item input\"), function(t) {\n              return angular.element(t).is(\":checked\");\n            });\n            activePermissions = _.sortBy(_.map(activePermissions, function(t) {\n              var permission;\n              return permission = angular.element(t).parents(\".category-item\").data(\"id\");\n            }));\n            activePermissions.push(\"view_project\");\n            return activePermissions;\n          };\n          target = angular.element(event.currentTarget);\n          $scope.role.permissions = getActivePermissions();\n          onSuccess = function(role) {\n            var categories, categoryId;\n            categories = generateCategoriesFromRole(role);\n            categoryId = target.parents(\".category-config\").data(\"id\");\n            renderResume(target.parents(\".category-config\"), categories[categoryId]);\n            $rootscope.$broadcast(\"projects:reload\");\n            $confirm.notify(\"success\");\n            return $ctrl.loadProject();\n          };\n          onError = function() {\n            $confirm.notify(\"error\");\n            target.prop(\"checked\", !target.prop(\"checked\"));\n            return $scope.role.permissions = getActivePermissions();\n          };\n          return $repo.save($scope.role).then(onSuccess, onError);\n        });\n      };\n      $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n      $scope.$on(\"role:changed\", function() {\n        return renderPermissions();\n      });\n      return bindOnce($scope, $attrs.ngModel, renderPermissions);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgRolePermissions\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", RolePermissionsDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/admin/third-parties.coffee\n */\n\n(function() {\n  var BitbucketController, BitbucketWebhooksDirective, GithubController, GithubWebhooksDirective, GitlabController, GitlabWebhooksDirective, NewWebhookDirective, SelectInputText, ValidOriginIpsDirective, WebhookDirective, WebhooksController, bindMethods, debounce, mixOf, module, taiga, timeout,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  bindMethods = this.taiga.bindMethods;\n\n  debounce = this.taiga.debounce;\n\n  timeout = this.taiga.timeout;\n\n  module = angular.module(\"taigaAdmin\");\n\n  WebhooksController = (function(_super) {\n    __extends(WebhooksController, _super);\n\n    WebhooksController.$inject = [\"$scope\", \"$tgRepo\", \"$tgResources\", \"$routeParams\", \"$appTitle\"];\n\n    function WebhooksController(_at_scope, _at_repo, _at_rs, _at_params, _at_appTitle) {\n      var promise;\n      this.scope = _at_scope;\n      this.repo = _at_repo;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.appTitle = _at_appTitle;\n      bindMethods(this);\n      this.scope.sectionName = \"Webhooks\";\n      this.scope.project = {};\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Webhooks - \" + _this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      this.scope.$on(\"webhooks:reload\", this.loadWebhooks);\n    }\n\n    WebhooksController.prototype.loadWebhooks = function() {\n      return this.rs.webhooks.list(this.scope.projectId).then((function(_this) {\n        return function(webhooks) {\n          return _this.scope.webhooks = webhooks;\n        };\n      })(this));\n    };\n\n    WebhooksController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          return project;\n        };\n      })(this));\n    };\n\n    WebhooksController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.repo.resolve({\n        pslug: this.params.pslug\n      }).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadProject();\n        };\n      })(this)).then((function(_this) {\n        return function() {\n          return _this.loadWebhooks();\n        };\n      })(this));\n    };\n\n    return WebhooksController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin, taiga.FiltersMixin));\n\n  module.controller(\"WebhooksController\", WebhooksController);\n\n  WebhookDirective = function($rs, $repo, $confirm, $loading) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var cancel, openHistory, save, showEditMode, showVisualizationMode, updateLogs, updateShowHideHistoryText, webhook;\n      webhook = $scope.$eval($attrs.tgWebhook);\n      updateLogs = function() {\n        return $rs.webhooklogs.list(webhook.id).then((function(_this) {\n          return function(webhooklogs) {\n            var log, _i, _len, _ref;\n            for (_i = 0, _len = webhooklogs.length; _i < _len; _i++) {\n              log = webhooklogs[_i];\n              log.validStatus = (200 <= (_ref = log.status) && _ref < 300);\n              log.prettySentHeaders = _.map(_.pairs(log.request_headers), function(_arg) {\n                var header, value;\n                header = _arg[0], value = _arg[1];\n                return header + \": \" + value;\n              }).join(\"\\n\");\n              log.prettySentData = JSON.stringify(log.request_data.data, void 0, 2);\n              log.prettyDate = moment(log.created).format(\"DD MMM YYYY [at] hh:mm:ss\");\n            }\n            webhook.logs_counter = webhooklogs.length;\n            webhook.logs = webhooklogs;\n            return updateShowHideHistoryText();\n          };\n        })(this));\n      };\n      updateShowHideHistoryText = function() {\n        var historyElement, textElement;\n        textElement = $el.find(\".toggle-history\");\n        historyElement = textElement.parents(\".single-webhook-wrapper\").find(\".webhooks-history\");\n        if (historyElement.hasClass(\"open\")) {\n          return textElement.text(\"(Hide history)\");\n        } else {\n          return textElement.text(\"(Show history)\");\n        }\n      };\n      showVisualizationMode = function() {\n        $el.find(\".edition-mode\").addClass(\"hidden\");\n        return $el.find(\".visualization-mode\").removeClass(\"hidden\");\n      };\n      showEditMode = function() {\n        $el.find(\".visualization-mode\").addClass(\"hidden\");\n        return $el.find(\".edition-mode\").removeClass(\"hidden\");\n      };\n      openHistory = function() {\n        return $el.find(\".webhooks-history\").addClass(\"open\");\n      };\n      cancel = function() {\n        showVisualizationMode();\n        return $scope.$apply(function() {\n          return webhook.revert();\n        });\n      };\n      save = debounce(2000, function(target) {\n        var form, promise, value;\n        form = target.parents(\"form\").checksley();\n        if (!form.validate()) {\n          return;\n        }\n        value = target.scope().value;\n        promise = $repo.save(webhook);\n        promise.then((function(_this) {\n          return function() {\n            return showVisualizationMode();\n          };\n        })(this));\n        return promise.then(null, function(data) {\n          $confirm.notify(\"error\");\n          return form.setErrors(data);\n        });\n      });\n      $el.on(\"click\", \".test-webhook\", function() {\n        openHistory();\n        return $rs.webhooks.test(webhook.id).then((function(_this) {\n          return function() {\n            return updateLogs();\n          };\n        })(this));\n      });\n      $el.on(\"click\", \".edit-webhook\", function() {\n        return showEditMode();\n      });\n      $el.on(\"click\", \".cancel-existing\", function() {\n        return cancel();\n      });\n      $el.on(\"click\", \".edit-existing\", function(event) {\n        var target;\n        event.preventDefault();\n        target = angular.element(event.currentTarget);\n        return save(target);\n      });\n      $el.on(\"keyup\", \".edition-mode input\", function(event) {\n        var target;\n        if (event.keyCode === 13) {\n          target = angular.element(event.currentTarget);\n          return saveWebhook(target);\n        } else if (event.keyCode === 27) {\n          target = angular.element(event.currentTarget);\n          return cancel(target);\n        }\n      });\n      $el.on(\"click\", \".delete-webhook\", function() {\n        var message, title;\n        title = \"Delete webhook\";\n        message = \"Webhook '\" + webhook.name + \"'\";\n        return $confirm.askOnDelete(title, message).then((function(_this) {\n          return function(finish) {\n            var onError, onSucces;\n            onSucces = function() {\n              finish();\n              return $scope.$emit(\"webhooks:reload\");\n            };\n            onError = function() {\n              finish(false);\n              return $confirm.notify(\"error\");\n            };\n            return $repo.remove(webhook).then(onSucces, onError);\n          };\n        })(this));\n      });\n      $el.on(\"click\", \".toggle-history\", function(event) {\n        var target;\n        target = angular.element(event.currentTarget);\n        if ((webhook.logs == null) || webhook.logs.length === 0) {\n          return updateLogs().then(function() {\n            return timeout(0, function() {\n              $el.find(\".webhooks-history\").toggleClass(\"open\");\n              return updateShowHideHistoryText();\n            });\n          });\n        } else {\n          $el.find(\".webhooks-history\").toggleClass(\"open\");\n          return $scope.$apply(function() {\n            return updateShowHideHistoryText();\n          });\n        }\n      });\n      $el.on(\"click\", \".history-single\", function(event) {\n        var target;\n        target = angular.element(event.currentTarget);\n        target.toggleClass(\"history-single-open\");\n        return target.siblings(\".history-single-response\").toggleClass(\"open\");\n      });\n      return $el.on(\"click\", \".resend-request\", function(event) {\n        var log, target;\n        target = angular.element(event.currentTarget);\n        log = target.data(\"log\");\n        return $rs.webhooklogs.resend(log).then((function(_this) {\n          return function() {\n            return updateLogs();\n          };\n        })(this));\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgWebhook\", [\"$tgResources\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", WebhookDirective]);\n\n  NewWebhookDirective = function($rs, $repo, $confirm, $loading) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var addWebhookDOMNode, formDOMNode, initializeNewValue, webhook;\n      webhook = $scope.$eval($attrs.tgWebhook);\n      formDOMNode = $el.find(\".new-webhook-form\");\n      addWebhookDOMNode = $el.find(\".add-webhook\");\n      initializeNewValue = function() {\n        return $scope.newValue = {\n          \"name\": \"\",\n          \"url\": \"\",\n          \"key\": \"\"\n        };\n      };\n      initializeNewValue();\n      $scope.$watch(\"webhooks\", function(webhooks) {\n        if (webhooks != null) {\n          if (webhooks.length === 0) {\n            formDOMNode.removeClass(\"hidden\");\n            addWebhookDOMNode.addClass(\"hidden\");\n            return formDOMNode.find(\"input\")[0].focus();\n          } else {\n            formDOMNode.addClass(\"hidden\");\n            return addWebhookDOMNode.removeClass(\"hidden\");\n          }\n        }\n      });\n      formDOMNode.on(\"click\", \".add-new\", debounce(2000, function(event) {\n        var form, promise;\n        event.preventDefault();\n        form = formDOMNode.checksley();\n        if (!form.validate()) {\n          return;\n        }\n        $scope.newValue.project = $scope.project.id;\n        promise = $repo.create(\"webhooks\", $scope.newValue);\n        promise.then((function(_this) {\n          return function() {\n            $scope.$emit(\"webhooks:reload\");\n            return initializeNewValue();\n          };\n        })(this));\n        return promise.then(null, function(data) {\n          $confirm.notify(\"error\");\n          return form.setErrors(data);\n        });\n      }));\n      formDOMNode.on(\"click\", \".cancel-new\", function(event) {\n        return $scope.$apply(function() {\n          return initializeNewValue();\n        });\n      });\n      return addWebhookDOMNode.on(\"click\", function(event) {\n        formDOMNode.removeClass(\"hidden\");\n        return formDOMNode.find(\"input\")[0].focus();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgNewWebhook\", [\"$tgResources\", \"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", NewWebhookDirective]);\n\n  GithubController = (function(_super) {\n    __extends(GithubController, _super);\n\n    GithubController.$inject = [\"$scope\", \"$tgRepo\", \"$tgResources\", \"$routeParams\", \"$appTitle\"];\n\n    function GithubController(_at_scope, _at_repo, _at_rs, _at_params, _at_appTitle) {\n      var promise;\n      this.scope = _at_scope;\n      this.repo = _at_repo;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.appTitle = _at_appTitle;\n      bindMethods(this);\n      this.scope.sectionName = \"Github\";\n      this.scope.project = {};\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Github - \" + _this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n    }\n\n    GithubController.prototype.loadModules = function() {\n      return this.rs.modules.list(this.scope.projectId, \"github\").then((function(_this) {\n        return function(github) {\n          return _this.scope.github = github;\n        };\n      })(this));\n    };\n\n    GithubController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          return project;\n        };\n      })(this));\n    };\n\n    GithubController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.repo.resolve({\n        pslug: this.params.pslug\n      }).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadProject();\n        };\n      })(this)).then((function(_this) {\n        return function() {\n          return _this.loadModules();\n        };\n      })(this));\n    };\n\n    return GithubController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin, taiga.FiltersMixin));\n\n  module.controller(\"GithubController\", GithubController);\n\n  GitlabController = (function(_super) {\n    __extends(GitlabController, _super);\n\n    GitlabController.$inject = [\"$scope\", \"$tgRepo\", \"$tgResources\", \"$routeParams\", \"$appTitle\"];\n\n    function GitlabController(_at_scope, _at_repo, _at_rs, _at_params, _at_appTitle) {\n      var promise;\n      this.scope = _at_scope;\n      this.repo = _at_repo;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.appTitle = _at_appTitle;\n      bindMethods(this);\n      this.scope.sectionName = \"Gitlab\";\n      this.scope.project = {};\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Gitlab - \" + _this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      this.scope.$on(\"project:modules:reload\", (function(_this) {\n        return function() {\n          return _this.loadModules();\n        };\n      })(this));\n    }\n\n    GitlabController.prototype.loadModules = function() {\n      return this.rs.modules.list(this.scope.projectId, \"gitlab\").then((function(_this) {\n        return function(gitlab) {\n          return _this.scope.gitlab = gitlab;\n        };\n      })(this));\n    };\n\n    GitlabController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          return project;\n        };\n      })(this));\n    };\n\n    GitlabController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.repo.resolve({\n        pslug: this.params.pslug\n      }).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadProject();\n        };\n      })(this)).then((function(_this) {\n        return function() {\n          return _this.loadModules();\n        };\n      })(this));\n    };\n\n    return GitlabController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin, taiga.FiltersMixin));\n\n  module.controller(\"GitlabController\", GitlabController);\n\n  BitbucketController = (function(_super) {\n    __extends(BitbucketController, _super);\n\n    BitbucketController.$inject = [\"$scope\", \"$tgRepo\", \"$tgResources\", \"$routeParams\", \"$appTitle\"];\n\n    function BitbucketController(_at_scope, _at_repo, _at_rs, _at_params, _at_appTitle) {\n      var promise;\n      this.scope = _at_scope;\n      this.repo = _at_repo;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.appTitle = _at_appTitle;\n      bindMethods(this);\n      this.scope.sectionName = \"Bitbucket\";\n      this.scope.project = {};\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(\"Bitbucket - \" + _this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      this.scope.$on(\"project:modules:reload\", (function(_this) {\n        return function() {\n          return _this.loadModules();\n        };\n      })(this));\n    }\n\n    BitbucketController.prototype.loadModules = function() {\n      return this.rs.modules.list(this.scope.projectId, \"bitbucket\").then((function(_this) {\n        return function(bitbucket) {\n          return _this.scope.bitbucket = bitbucket;\n        };\n      })(this));\n    };\n\n    BitbucketController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          return project;\n        };\n      })(this));\n    };\n\n    BitbucketController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.repo.resolve({\n        pslug: this.params.pslug\n      }).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadProject();\n        };\n      })(this)).then((function(_this) {\n        return function() {\n          return _this.loadModules();\n        };\n      })(this));\n    };\n\n    return BitbucketController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin, taiga.FiltersMixin));\n\n  module.controller(\"BitbucketController\", BitbucketController);\n\n  SelectInputText = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return $el.on(\"click\", \".select-input-content\", function() {\n        $el.find(\"input\").select();\n        return $el.find(\".help-copy\").addClass(\"visible\");\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgSelectInputText\", SelectInputText);\n\n  GithubWebhooksDirective = function($repo, $confirm, $loading) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var form, submit, submitButton;\n      form = $el.find(\"form\").checksley({\n        \"onlyOneErrorElement\": true\n      });\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var promise;\n          event.preventDefault();\n          if (!form.validate()) {\n            return;\n          }\n          $loading.start(submitButton);\n          promise = $repo.saveAttribute($scope.github, \"github\");\n          promise.then(function() {\n            $loading.finish(submitButton);\n            return $confirm.notify(\"success\");\n          });\n          return promise.then(null, function(data) {\n            $loading.finish(submitButton);\n            form.setErrors(data);\n            if (data._error_message) {\n              return $confirm.notify(\"error\", data._error_message);\n            }\n          });\n        };\n      })(this));\n      submitButton = $el.find(\".submit-button\");\n      return $el.on(\"submit\", \"form\", submit);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgGithubWebhooks\", [\"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", GithubWebhooksDirective]);\n\n  GitlabWebhooksDirective = function($repo, $confirm, $loading) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var form, submit, submitButton;\n      form = $el.find(\"form\").checksley({\n        \"onlyOneErrorElement\": true\n      });\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var promise;\n          event.preventDefault();\n          if (!form.validate()) {\n            return;\n          }\n          $loading.start(submitButton);\n          promise = $repo.saveAttribute($scope.gitlab, \"gitlab\");\n          promise.then(function() {\n            $loading.finish(submitButton);\n            $confirm.notify(\"success\");\n            return $scope.$emit(\"project:modules:reload\");\n          });\n          return promise.then(null, function(data) {\n            $loading.finish(submitButton);\n            form.setErrors(data);\n            if (data._error_message) {\n              return $confirm.notify(\"error\", data._error_message);\n            }\n          });\n        };\n      })(this));\n      submitButton = $el.find(\".submit-button\");\n      return $el.on(\"submit\", \"form\", submit);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgGitlabWebhooks\", [\"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", GitlabWebhooksDirective]);\n\n  BitbucketWebhooksDirective = function($repo, $confirm, $loading) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var form, submit, submitButton;\n      form = $el.find(\"form\").checksley({\n        \"onlyOneErrorElement\": true\n      });\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var promise;\n          event.preventDefault();\n          if (!form.validate()) {\n            return;\n          }\n          $loading.start(submitButton);\n          promise = $repo.saveAttribute($scope.bitbucket, \"bitbucket\");\n          promise.then(function() {\n            $loading.finish(submitButton);\n            $confirm.notify(\"success\");\n            return $scope.$emit(\"project:modules:reload\");\n          });\n          return promise.then(null, function(data) {\n            $loading.finish(submitButton);\n            form.setErrors(data);\n            if (data._error_message) {\n              return $confirm.notify(\"error\", data._error_message);\n            }\n          });\n        };\n      })(this));\n      submitButton = $el.find(\".submit-button\");\n      return $el.on(\"submit\", \"form\", submit);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgBitbucketWebhooks\", [\"$tgRepo\", \"$tgConfirm\", \"$tgLoading\", BitbucketWebhooksDirective]);\n\n  ValidOriginIpsDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs, $ngModel) {\n      return $ngModel.$parsers.push(function(value) {\n        value = $.trim(value);\n        if (value === \"\") {\n          return [];\n        }\n        return value.split(\",\");\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      require: \"ngModel\"\n    };\n  };\n\n  module.directive(\"tgValidOriginIps\", ValidOriginIpsDirective);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/attachments.coffee\n */\n\n(function() {\n  var CreateProject, DeleteProjectDirective, bindOnce, debounce, module, taiga, timeout;\n\n  taiga = this.taiga;\n\n  bindOnce = this.taiga.bindOnce;\n\n  timeout = this.taiga.timeout;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaProject\");\n\n  CreateProject = function($rootscope, $repo, $confirm, $location, $navurls, $rs, $projectUrl, $loading, lightboxService, $cacheFactory) {\n    var link;\n    link = function($scope, $el, attrs) {\n      var form, onErrorSubmit, onSuccessSubmit, submit, submitButton;\n      $scope.data = {};\n      $scope.templates = [];\n      form = $el.find(\"form\").checksley({\n        \"onlyOneErrorElement\": true\n      });\n      onSuccessSubmit = function(response) {\n        $cacheFactory.get('$http').removeAll();\n        $loading.finish(submitButton);\n        $rootscope.$broadcast(\"projects:reload\");\n        $confirm.notify(\"success\", \"Success\");\n        $location.url($projectUrl.get(response));\n        return lightboxService.close($el);\n      };\n      onErrorSubmit = function(response) {\n        var error_field, error_step, selectors, _i, _len, _ref;\n        $loading.finish(submitButton);\n        form.setErrors(response);\n        selectors = [];\n        _ref = _.keys(response);\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          error_field = _ref[_i];\n          selectors.push(\"[name=\" + error_field + \"]\");\n        }\n        $el.find(\".active\").removeClass(\"active\");\n        error_step = $el.find(selectors.join(\",\")).first().parents(\".wizard-step\");\n        error_step.addClass(\"active\");\n        return $el.find('.progress-bar').removeClass().addClass('progress-bar').addClass(error_step.data(\"step\"));\n      };\n      submit = (function(_this) {\n        return function(event) {\n          var promise;\n          event.preventDefault();\n          if (!form.validate()) {\n            return;\n          }\n          $loading.start(submitButton);\n          promise = $repo.create(\"projects\", $scope.data);\n          return promise.then(onSuccessSubmit, onErrorSubmit);\n        };\n      })(this);\n      $scope.$on(\"projects:create\", function() {\n        $scope.data = {\n          total_story_points: 100,\n          total_milestones: 5\n        };\n        if (!$scope.templates.length) {\n          $rs.projects.templates().then((function(_this) {\n            return function(result) {\n              $scope.templates = result;\n              return $scope.data.creation_template = _.head(_.filter($scope.templates, function(x) {\n                return x.slug === \"scrum\";\n              })).id;\n            };\n          })(this));\n        } else {\n          $scope.data.creation_template = _.head(_.filter($scope.templates, function(x) {\n            return x.slug === \"scrum\";\n          })).id;\n        }\n        $el.find(\".active\").removeClass(\"active\");\n        $el.find(\".create-step1\").addClass(\"active\");\n        lightboxService.open($el);\n        return timeout(600, function() {\n          return $el.find(\".progress-bar\").addClass('step1');\n        });\n      });\n      $el.on(\"click\", \".button-next\", function(event) {\n        var current, field, next, step, valid, _i, _len, _ref;\n        event.preventDefault();\n        current = $el.find(\".active\");\n        valid = true;\n        _ref = form.fields;\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          field = _ref[_i];\n          if (current.find(\"[name=\" + (field.element.attr('name')) + \"]\").length) {\n            valid = field.validate() !== false && valid;\n          }\n        }\n        if (!valid) {\n          return;\n        }\n        next = current.next();\n        current.toggleClass('active');\n        next.toggleClass('active');\n        step = next.data('step');\n        return $el.find('.progress-bar').removeClass().addClass('progress-bar').addClass(step);\n      });\n      $el.on(\"click\", \".button-prev\", function(event) {\n        var current, prev, step;\n        event.preventDefault();\n        current = $el.find(\".active\");\n        prev = current.prev();\n        current.toggleClass('active');\n        prev.toggleClass('active');\n        step = prev.data('step');\n        return $el.find('.progress-bar').removeClass().addClass('progress-bar').addClass(step);\n      });\n      submitButton = $el.find(\".submit-button\");\n      $el.on(\"submit\", \"form\", submit);\n      return $el.on(\"click\", \".close\", function(event) {\n        event.preventDefault();\n        return lightboxService.close($el);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLbCreateProject\", [\"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$location\", \"$tgNavUrls\", \"$tgResources\", \"$projectUrl\", \"$tgLoading\", \"lightboxService\", \"$cacheFactory\", CreateProject]);\n\n  DeleteProjectDirective = function($repo, $rootscope, $auth, $location, $navUrls, $confirm, lightboxService, tgLoader) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var projectToDelete, submit;\n      projectToDelete = null;\n      $scope.$on(\"deletelightbox:new\", function(ctx, project) {\n        lightboxService.open($el);\n        return projectToDelete = project;\n      });\n      $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n      submit = function() {\n        var promise;\n        tgLoader.start();\n        lightboxService.close($el);\n        promise = $repo.remove(projectToDelete);\n        promise.then(function(data) {\n          tgLoader.pageLoaded();\n          $rootscope.$broadcast(\"projects:reload\");\n          $location.path($navUrls.resolve(\"home\"));\n          return $confirm.notify(\"success\");\n        });\n        return promise.then(null, function() {\n          $confirm.notify(\"error\");\n          return lightboxService.close($el);\n        });\n      };\n      $el.on(\"click\", \".button-red\", function(event) {\n        event.preventDefault();\n        return lightboxService.close($el);\n      });\n      return $el.on(\"click\", \".button-green\", function(event) {\n        event.preventDefault();\n        return submit();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgLbDeleteProject\", [\"$tgRepo\", \"$rootScope\", \"$tgAuth\", \"$tgLocation\", \"$tgNavUrls\", \"$tgConfirm\", \"lightboxService\", \"tgLoader\", DeleteProjectDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/common/attachments.coffee\n */\n\n(function() {\n  var ProjectController, ProjectsController, ProjectsListDirective, ProjectsPaginationDirective, bindOnce, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  module = angular.module(\"taigaProject\");\n\n  bindOnce = this.taiga.bindOnce;\n\n  ProjectsController = (function(_super) {\n    __extends(ProjectsController, _super);\n\n    ProjectsController.$inject = [\"$scope\", \"$q\", \"$tgResources\", \"$rootScope\", \"$tgNavUrls\", \"$tgAuth\", \"$tgLocation\", \"$appTitle\", \"$projectUrl\", \"tgLoader\"];\n\n    function ProjectsController(_at_scope, _at_q, _at_rs, _at_rootscope, _at_navUrls, _at_auth, _at_location, _at_appTitle, _at_projectUrl, tgLoader) {\n      var promise;\n      this.scope = _at_scope;\n      this.q = _at_q;\n      this.rs = _at_rs;\n      this.rootscope = _at_rootscope;\n      this.navUrls = _at_navUrls;\n      this.auth = _at_auth;\n      this.location = _at_location;\n      this.appTitle = _at_appTitle;\n      this.projectUrl = _at_projectUrl;\n      this.appTitle.set(\"Projects\");\n      if (!this.auth.isAuthenticated()) {\n        this.location.path(this.navUrls.resolve(\"login\"));\n      }\n      this.user = this.auth.getUser();\n      this.projects = [];\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.scope.$emit(\"projects:loaded\");\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n      promise[\"finally\"](tgLoader.pageLoaded);\n    }\n\n    ProjectsController.prototype.loadInitialData = function() {\n      return this.rs.projects.list().then((function(_this) {\n        return function(projects) {\n          var project, _i, _len;\n          _this.projects = {\n            'recents': projects.slice(0, 8),\n            'all': projects\n          };\n          for (_i = 0, _len = projects.length; _i < _len; _i++) {\n            project = projects[_i];\n            project.url = _this.projectUrl.get(project);\n          }\n          return projects;\n        };\n      })(this));\n    };\n\n    ProjectsController.prototype.newProject = function() {\n      return this.rootscope.$broadcast(\"projects:create\");\n    };\n\n    ProjectsController.prototype.logout = function() {\n      this.auth.logout();\n      return this.location.path(this.navUrls.resolve(\"login\"));\n    };\n\n    return ProjectsController;\n\n  })(taiga.Controller);\n\n  module.controller(\"ProjectsController\", ProjectsController);\n\n  ProjectController = (function(_super) {\n    __extends(ProjectController, _super);\n\n    ProjectController.$inject = [\"$scope\", \"$tgResources\", \"$tgRepo\", \"$routeParams\", \"$q\", \"$rootScope\", \"$appTitle\", \"$tgLocation\", \"$tgNavUrls\"];\n\n    function ProjectController(_at_scope, _at_rs, _at_repo, _at_params, _at_q, _at_rootscope, _at_appTitle, _at_location, _at_navUrls) {\n      var promise;\n      this.scope = _at_scope;\n      this.rs = _at_rs;\n      this.repo = _at_repo;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.rootscope = _at_rootscope;\n      this.appTitle = _at_appTitle;\n      this.location = _at_location;\n      this.navUrls = _at_navUrls;\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          _this.appTitle.set(_this.scope.project.name);\n          return _this.scope.$emit(\"regenerate:project-pagination\");\n        };\n      })(this));\n      promise.then(null, this.onInitialDataError.bind(this));\n    }\n\n    ProjectController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.repo.resolve({\n        pslug: this.params.pslug\n      }).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadPageData();\n        };\n      })(this)).then((function(_this) {\n        return function() {\n          return _this.scope.$emit(\"project:loaded\", _this.scope.project);\n        };\n      })(this));\n    };\n\n    ProjectController.prototype.loadPageData = function() {\n      return this.q.all([this.loadProjectStats(), this.loadProject()]);\n    };\n\n    ProjectController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          return project;\n        };\n      })(this));\n    };\n\n    ProjectController.prototype.loadProjectStats = function() {\n      return this.rs.projects.stats(this.scope.projectId).then((function(_this) {\n        return function(stats) {\n          _this.scope.stats = stats;\n          return stats;\n        };\n      })(this));\n    };\n\n    return ProjectController;\n\n  })(taiga.Controller);\n\n  module.controller(\"ProjectController\", ProjectController);\n\n  ProjectsPaginationDirective = function($timeout) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var checkButtonVisibility, container, containerSize, hasNextPage, hasPagination, hasPrevPage, hide, nextBtn, nextPage, pageSize, prevBtn, prevPage, remove, render, visible;\n      prevBtn = $el.find(\".v-pagination-previous\");\n      nextBtn = $el.find(\".v-pagination-next\");\n      container = $el.find(\"ul\");\n      pageSize = 0;\n      containerSize = 0;\n      render = function() {\n        pageSize = $el.find(\".v-pagination-list\").height();\n        if (container.find(\"li\").length) {\n          if (hasPagination()) {\n            if (hasNextPage()) {\n              visible(nextBtn);\n            } else {\n              hide(nextBtn);\n            }\n            if (hasPrevPage()) {\n              return visible(prevBtn);\n            } else {\n              return hide(prevBtn);\n            }\n          } else {\n            return remove();\n          }\n        } else {\n          return remove();\n        }\n      };\n      hasPagination = function() {\n        containerSize = container.height();\n        return containerSize > pageSize;\n      };\n      hasPrevPage = function(top) {\n        if (top == null) {\n          top = -parseInt(container.css('top'), 10) || 0;\n        }\n        return top !== 0;\n      };\n      hasNextPage = function(top) {\n        containerSize = container.height();\n        if (!top) {\n          top = -parseInt(container.css('top'), 10) || 0;\n        }\n        return containerSize > pageSize && top + pageSize < containerSize;\n      };\n      nextPage = function(callback) {\n        var lastLi, maxTop, newTop, top;\n        top = parseInt(container.css('top'), 10);\n        newTop = top - pageSize;\n        lastLi = $el.find(\".v-pagination-list li:last-child\");\n        maxTop = -((lastLi.position().top + lastLi.outerHeight()) - pageSize);\n        if (newTop < maxTop) {\n          newTop = maxTop;\n        }\n        container.animate({\n          \"top\": newTop\n        }, callback);\n        return newTop;\n      };\n      prevPage = function(callback) {\n        var newTop, top;\n        top = parseInt(container.css('top'), 10);\n        newTop = top + pageSize;\n        if (newTop > 0) {\n          newTop = 0;\n        }\n        container.animate({\n          \"top\": newTop\n        }, callback);\n        return newTop;\n      };\n      visible = function(element) {\n        return element.css('visibility', 'visible');\n      };\n      hide = function(element) {\n        return element.css('visibility', 'hidden');\n      };\n      checkButtonVisibility = function() {};\n      remove = function() {\n        container.css('top', 0);\n        hide(prevBtn);\n        return hide(nextBtn);\n      };\n      $el.on(\"click\", \".v-pagination-previous\", function(event) {\n        var newTop;\n        event.preventDefault();\n        if (container.is(':animated')) {\n          return;\n        }\n        visible(nextBtn);\n        newTop = prevPage();\n        if (!hasPrevPage(newTop)) {\n          return hide(prevBtn);\n        }\n      });\n      $el.on(\"click\", \".v-pagination-next\", function(event) {\n        var newTop;\n        event.preventDefault();\n        if (container.is(':animated')) {\n          return;\n        }\n        visible(prevBtn);\n        newTop = -nextPage();\n        if (!hasNextPage(newTop)) {\n          return hide(nextBtn);\n        }\n      });\n      $scope.$on(\"regenerate:project-pagination\", function() {\n        remove();\n        return render();\n      });\n      $(window).on(\"resize.projects-pagination\", render);\n      return $scope.$on(\"$destroy\", function() {\n        return $(window).off(\"resize.projects-pagination\");\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgProjectsPagination\", ['$timeout', ProjectsPaginationDirective]);\n\n  ProjectsListDirective = function($compile, $template) {\n    var link, template;\n    template = $template.get('project/project-list.html', true);\n    link = function($scope, $el, $attrs, $ctrls) {\n      var render;\n      render = function(projects) {\n        $el.html($compile(template({\n          projects: projects\n        }))($scope));\n        return $scope.$emit(\"regenerate:project-pagination\");\n      };\n      return $scope.$watch(\"projects\", function(projects) {\n        if (projects != null) {\n          return render(projects);\n        }\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgProjectsList\", [\"$compile\", \"$tgTemplate\", ProjectsListDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base/bind.coffee\n */\n\n(function() {\n  var BindHtmlDirective, BindOnceAltDirective, BindOnceBindDirective, BindOnceHrefDirective, BindOnceHtmlDirective, BindOnceRefDirective, BindOnceSrcDirective, BindOnceTitleDirective, BindTitleDirective, bindOnce, module;\n\n  bindOnce = this.taiga.bindOnce;\n\n  BindOnceBindDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return bindOnce($scope, $attrs.tgBoBind, function(val) {\n        return $el.text(val);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  BindOnceHtmlDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return bindOnce($scope, $attrs.tgBoHtml, function(val) {\n        return $el.html(val);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  BindOnceRefDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return bindOnce($scope, $attrs.tgBoRef, function(val) {\n        return $el.html(\"#\" + val + \" \");\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  BindOnceSrcDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return bindOnce($scope, $attrs.tgBoSrc, function(val) {\n        return $el.attr(\"src\", val);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  BindOnceHrefDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return bindOnce($scope, $attrs.tgBoHref, function(val) {\n        return $el.attr(\"href\", val);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  BindOnceAltDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return bindOnce($scope, $attrs.tgBoAlt, function(val) {\n        return $el.attr(\"alt\", val);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  BindOnceTitleDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return bindOnce($scope, $attrs.tgBoTitle, function(val) {\n        return $el.attr(\"title\", val);\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  BindTitleDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return $scope.$watch($attrs.tgTitleHtml, function(val) {\n        if (val != null) {\n          return $el.attr(\"title\", val);\n        }\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  BindHtmlDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return $scope.$watch($attrs.tgBindHtml, function(val) {\n        if (val != null) {\n          return $el.html(val);\n        }\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module = angular.module(\"taigaBase\");\n\n  module.directive(\"tgBoBind\", BindOnceBindDirective);\n\n  module.directive(\"tgBoHtml\", BindOnceHtmlDirective);\n\n  module.directive(\"tgBoRef\", BindOnceRefDirective);\n\n  module.directive(\"tgBoSrc\", BindOnceSrcDirective);\n\n  module.directive(\"tgBoHref\", BindOnceHrefDirective);\n\n  module.directive(\"tgBoAlt\", BindOnceAltDirective);\n\n  module.directive(\"tgBoTitle\", BindOnceTitleDirective);\n\n  module.directive(\"tgBindTitle\", BindTitleDirective);\n\n  module.directive(\"tgBindHtml\", BindHtmlDirective);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base/conf.coffee\n */\n\n(function() {\n  var ConfigurationService, module;\n\n  ConfigurationService = (function() {\n    function ConfigurationService() {\n      this.config = window.taigaConfig;\n    }\n\n    ConfigurationService.prototype.get = function(key, defaultValue) {\n      if (defaultValue == null) {\n        defaultValue = null;\n      }\n      if (_.has(this.config, key)) {\n        return this.config[key];\n      }\n      return defaultValue;\n    };\n\n    return ConfigurationService;\n\n  })();\n\n  module = angular.module(\"taigaBase\");\n\n  module.service(\"$tgConfig\", ConfigurationService);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base/contrib.coffee\n */\n\n(function() {\n  var ContribController, module, taigaContribPlugins,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taigaContribPlugins = this.taigaContribPlugins = this.taigaContribPlugins || [];\n\n  ContribController = (function(_super) {\n    __extends(ContribController, _super);\n\n    ContribController.$inject = [\"$rootScope\", \"$scope\", \"$routeParams\", \"$tgRepo\", \"$tgResources\", \"$tgConfirm\", \"$appTitle\"];\n\n    function ContribController(_at_rootScope, _at_scope, _at_params, _at_repo, _at_rs, _at_confirm, _at_appTitle) {\n      var promise;\n      this.rootScope = _at_rootScope;\n      this.scope = _at_scope;\n      this.params = _at_params;\n      this.repo = _at_repo;\n      this.rs = _at_rs;\n      this.confirm = _at_confirm;\n      this.appTitle = _at_appTitle;\n      this.scope.currentPlugin = _.first(_.where(taigaContribPlugins, {\n        \"slug\": this.params.plugin\n      }));\n      this.scope.pluginTemplate = \"contrib/\" + this.scope.currentPlugin.slug;\n      this.scope.projectSlug = this.params.pslug;\n      this.scope.adminPlugins = _.where(this.rootScope.contribPlugins, {\n        \"type\": \"admin\"\n      });\n      promise = this.loadInitialData();\n      promise.then((function(_this) {\n        return function() {\n          return _this.appTitle.set(_this.scope.project.name);\n        };\n      })(this));\n      promise.then(null, (function(_this) {\n        return function() {\n          return _this.confirm.notify(\"error\");\n        };\n      })(this));\n    }\n\n    ContribController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          _this.scope.$broadcast('project:loaded', project);\n          return project;\n        };\n      })(this));\n    };\n\n    ContribController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.repo.resolve({\n        pslug: this.params.pslug\n      }).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadProject();\n        };\n      })(this));\n    };\n\n    return ContribController;\n\n  })(taiga.Controller);\n\n  module = angular.module(\"taigaBase\");\n\n  module.controller(\"ContribController\", ContribController);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base/filters.coffee\n */\n\n(function() {\n  var FiltersStorageService, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  FiltersStorageService = (function(_super) {\n    __extends(FiltersStorageService, _super);\n\n    FiltersStorageService.$inject = [\"$tgStorage\", \"$routeParams\"];\n\n    function FiltersStorageService(_at_storage, _at_params) {\n      this.storage = _at_storage;\n      this.params = _at_params;\n    }\n\n    FiltersStorageService.prototype.generateHash = function(components) {\n      if (components == null) {\n        components = [];\n      }\n      components = _.map(components, function(x) {\n        return JSON.stringify(x);\n      });\n      return hex_sha1(components.join(\":\"));\n    };\n\n    return FiltersStorageService;\n\n  })(taiga.Service);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base/http.coffee\n */\n\n(function() {\n  var HttpService, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  HttpService = (function(_super) {\n    __extends(HttpService, _super);\n\n    HttpService.$inject = [\"$http\", \"$q\", \"$tgStorage\"];\n\n    HttpService.prototype.headers = function() {\n      var token;\n      token = this.storage.get('token');\n      if (token) {\n        return {\n          \"Authorization\": \"Bearer \" + token\n        };\n      }\n      return {};\n    };\n\n    function HttpService(_at_http, _at_q, _at_storage) {\n      this.http = _at_http;\n      this.q = _at_q;\n      this.storage = _at_storage;\n      HttpService.__super__.constructor.call(this);\n    }\n\n    HttpService.prototype.request = function(options) {\n      options.headers = _.merge({}, options.headers || {}, this.headers());\n      if (_.isPlainObject(options.data)) {\n        options.data = JSON.stringify(options.data);\n      }\n      return this.http(options);\n    };\n\n    HttpService.prototype.get = function(url, params, options) {\n      options = _.merge({\n        method: \"GET\",\n        url: url\n      }, options);\n      if (params) {\n        options.params = params;\n      }\n      return this.request(options);\n    };\n\n    HttpService.prototype.post = function(url, data, params, options) {\n      options = _.merge({\n        method: \"POST\",\n        url: url\n      }, options);\n      if (data) {\n        options.data = data;\n      }\n      if (params) {\n        options.params = params;\n      }\n      return this.request(options);\n    };\n\n    HttpService.prototype.put = function(url, data, params, options) {\n      options = _.merge({\n        method: \"PUT\",\n        url: url\n      }, options);\n      if (data) {\n        options.data = data;\n      }\n      if (params) {\n        options.params = params;\n      }\n      return this.request(options);\n    };\n\n    HttpService.prototype.patch = function(url, data, params, options) {\n      options = _.merge({\n        method: \"PATCH\",\n        url: url\n      }, options);\n      if (data) {\n        options.data = data;\n      }\n      if (params) {\n        options.params = params;\n      }\n      return this.request(options);\n    };\n\n    HttpService.prototype[\"delete\"] = function(url, data, params, options) {\n      options = _.merge({\n        method: \"DELETE\",\n        url: url\n      }, options);\n      if (data) {\n        options.data = data;\n      }\n      if (params) {\n        options.params = params;\n      }\n      return this.request(options);\n    };\n\n    return HttpService;\n\n  })(taiga.Service);\n\n  module = angular.module(\"taigaBase\");\n\n  module.service(\"$tgHttp\", HttpService);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base/i18n.coffee\n */\n\n(function() {\n  var I18nDirective, I18nService, bindOnce, defaults, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  bindOnce = this.taiga.bindOnce;\n\n  defaults = {\n    ns: \"app\",\n    fallbackLng: \"en\",\n    async: false,\n    lng: \"en\"\n  };\n\n  I18nService = (function(_super) {\n    __extends(I18nService, _super);\n\n    function I18nService(_at_rootscope, localesEn) {\n      this.rootscope = _at_rootscope;\n      this.options = _.clone(defaults, true);\n      this.options.resStore = {\n        en: {\n          app: localesEn\n        }\n      };\n    }\n\n    I18nService.prototype.setLanguage = function(language) {\n      i18n.setLng(language);\n      this.rootscope.currentLang = language;\n      return this.rootscope.$broadcast(\"i18n:changeLang\", language);\n    };\n\n    I18nService.prototype.initialize = function() {\n      i18n.init(this.options);\n      return this.rootscope.t = i18n.t;\n    };\n\n    I18nService.prototype.t = function(path, opts) {\n      return i18n.t(path, opts);\n    };\n\n    return I18nService;\n\n  })(taiga.Service);\n\n  I18nDirective = function($rootscope, $i18n) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var ns, options, opts, v, values, _i, _len, _ref, _results;\n      values = $attrs.tr.split(\",\");\n      options = $attrs.trOpts || '{}';\n      opts = $scope.$eval(options);\n      _results = [];\n      for (_i = 0, _len = values.length; _i < _len; _i++) {\n        v = values[_i];\n        if (v.indexOf(\":\") === -1) {\n          _results.push($el.html(_.escape($i18n.t(v, opts))));\n        } else {\n          _ref = v.split(\":\"), ns = _ref[0], v = _ref[1];\n          _results.push($el.attr(ns, _.escape($i18n.t(v, opts))));\n        }\n      }\n      return _results;\n    };\n    return {\n      link: link,\n      restrict: \"A\",\n      scope: false\n    };\n  };\n\n  module = angular.module(\"taigaBase\");\n\n  module.service(\"$tgI18n\", [\"$rootScope\", \"localesEn\", I18nService]);\n\n  module.directive(\"tr\", [\"$rootScope\", \"$tgI18n\", I18nDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base/location.coffee\n */\n\n(function() {\n  var locationFactory, module;\n\n  locationFactory = function($location, $route, $rootscope) {\n    $location.noreload = function(scope) {\n      var lastRoute, un;\n      lastRoute = $route.current;\n      un = scope.$on(\"$locationChangeSuccess\", function() {\n        $route.current = lastRoute;\n        return un();\n      });\n      return $location;\n    };\n    return $location;\n  };\n\n  module = angular.module(\"taigaBase\");\n\n  module.factory(\"$tgLocation\", [\"$location\", \"$route\", \"$rootScope\", locationFactory]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base/model.coffee\n */\n\n(function() {\n  var Model, ModelService, module, provider, taiga,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  Model = (function() {\n    function Model(name, data, dataTypes) {\n      this._attrs = data;\n      this._name = name;\n      this._dataTypes = dataTypes;\n      this.setAttrs(data);\n      this.initialize();\n    }\n\n    Model.prototype.clone = function() {\n      var instance;\n      instance = new Model(this._name, this._attrs, this._dataTypes);\n      instance._modifiedAttrs = this._modifiedAttrs;\n      instance._isModified = this._isModified;\n      return instance;\n    };\n\n    Model.prototype.applyCasts = function() {\n      var attrName, castMethod, castName, _ref, _results;\n      _ref = this._dataTypes;\n      _results = [];\n      for (attrName in _ref) {\n        castName = _ref[attrName];\n        castMethod = service.casts[castName];\n        if (!castMethod) {\n          continue;\n        }\n        _results.push(this._attrs[attrName] = castMethod(this._attrs[attrName]));\n      }\n      return _results;\n    };\n\n    Model.prototype.getIdAttrName = function() {\n      return \"id\";\n    };\n\n    Model.prototype.getName = function() {\n      return this._name;\n    };\n\n    Model.prototype.getAttrs = function(patch) {\n      if (patch == null) {\n        patch = false;\n      }\n      if (this._attrs.version != null) {\n        this._modifiedAttrs.version = this._attrs.version;\n      }\n      if (patch) {\n        return _.extend({}, this._modifiedAttrs);\n      }\n      return _.extend({}, this._attrs, this._modifiedAttrs);\n    };\n\n    Model.prototype.setAttrs = function(attrs) {\n      this._attrs = attrs;\n      this._modifiedAttrs = {};\n      this.applyCasts();\n      return this._isModified = false;\n    };\n\n    Model.prototype.setAttr = function(name, value) {\n      this._modifiedAttrs[name] = value;\n      return this._isModified = true;\n    };\n\n    Model.prototype.initialize = function() {\n      var getter, self, setter;\n      self = this;\n      getter = function(name) {\n        return function() {\n          if (typeof name === 'string' && name.substr(0, 2) === \"__\") {\n            return self[name];\n          }\n          if (__indexOf.call(_.keys(self._modifiedAttrs), name) < 0) {\n            return self._attrs[name];\n          }\n          return self._modifiedAttrs[name];\n        };\n      };\n      setter = function(name) {\n        return function(value) {\n          if (typeof name === 'string' && name.substr(0, 2) === \"__\") {\n            self[name] = value;\n            return;\n          }\n          if (self._attrs[name] !== value) {\n            self._modifiedAttrs[name] = value;\n            self._isModified = true;\n          } else {\n            delete self._modifiedAttrs[name];\n          }\n        };\n      };\n      return _.each(this._attrs, function(value, name) {\n        var options;\n        options = {\n          get: getter(name),\n          set: setter(name),\n          enumerable: true,\n          configurable: true\n        };\n        return Object.defineProperty(self, name, options);\n      });\n    };\n\n    Model.prototype.serialize = function() {\n      var data;\n      data = {\n        \"data\": _.clone(this._attrs),\n        \"name\": this._name\n      };\n      return JSON.stringify(data);\n    };\n\n    Model.prototype.isModified = function() {\n      return this._isModified;\n    };\n\n    Model.prototype.isAttributeModified = function(attribute) {\n      return this._modifiedAttrs[attribute] != null;\n    };\n\n    Model.prototype.markSaved = function() {\n      this._isModified = false;\n      this._attrs = this.getAttrs();\n      return this._modifiedAttrs = {};\n    };\n\n    Model.prototype.revert = function() {\n      this._modifiedAttrs = {};\n      return this._isModified = false;\n    };\n\n    Model.desSerialize = function(sdata) {\n      var ddata, model;\n      ddata = JSON.parse(sdata);\n      model = new Model(ddata.url, ddata.data);\n      return model;\n    };\n\n    return Model;\n\n  })();\n\n  taiga = this.taiga;\n\n  ModelService = (function(_super) {\n    __extends(ModelService, _super);\n\n    ModelService.$inject = [\"$q\", \"$tgUrls\", \"$tgStorage\", \"$tgHttp\"];\n\n    function ModelService(_at_q, _at_urls, _at_storage, _at_http) {\n      this.q = _at_q;\n      this.urls = _at_urls;\n      this.storage = _at_storage;\n      this.http = _at_http;\n      ModelService.__super__.constructor.call(this);\n    }\n\n    return ModelService;\n\n  })(taiga.Service);\n\n  provider = function($q, $http, $gmUrls, $gmStorage) {\n    var service;\n    service = {};\n    service.make_model = function(name, data, cls, dataTypes) {\n      if (cls == null) {\n        cls = Model;\n      }\n      if (dataTypes == null) {\n        dataTypes = {};\n      }\n      return new cls(name, data, dataTypes);\n    };\n    service.cls = Model;\n    service.casts = {\n      int: function(value) {\n        return parseInt(value, 10);\n      },\n      float: function(value) {\n        return parseFloat(value, 10);\n      }\n    };\n    return service;\n  };\n\n  module = angular.module(\"taigaBase\");\n\n  module.factory(\"$tgModel\", [\"$q\", \"$http\", \"$tgUrls\", \"$tgStorage\", provider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base/navurl.coffee\n */\n\n(function() {\n  var NavigationUrlsDirective, NavigationUrlsService, bindOnce, module, taiga, trim,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  trim = this.taiga.trim;\n\n  bindOnce = this.taiga.bindOnce;\n\n  module = angular.module(\"taigaBase\");\n\n  NavigationUrlsService = (function(_super) {\n    __extends(NavigationUrlsService, _super);\n\n    function NavigationUrlsService() {\n      this.urls = {};\n    }\n\n    NavigationUrlsService.prototype.update = function(urls) {\n      return this.urls = _.merge({}, this.urls, urls || {});\n    };\n\n    NavigationUrlsService.prototype.formatUrl = function(url, ctx) {\n      var replacer;\n      if (ctx == null) {\n        ctx = {};\n      }\n      replacer = function(match) {\n        match = trim(match, \":\");\n        return ctx[match] || \"undefined\";\n      };\n      return url.replace(/(:\\w+)/g, replacer);\n    };\n\n    NavigationUrlsService.prototype.resolve = function(name, ctx) {\n      var url;\n      url = this.urls[name];\n      if (!url) {\n        return \"\";\n      }\n      if (ctx) {\n        return this.formatUrl(url, ctx);\n      }\n      return url;\n    };\n\n    return NavigationUrlsService;\n\n  })(taiga.Service);\n\n  module.service(\"$tgNavUrls\", NavigationUrlsService);\n\n  NavigationUrlsDirective = function($navurls, $auth, $q, $location) {\n    var bindOnceP, link, parseNav;\n    bindOnceP = function($scope, attr) {\n      var defered;\n      defered = $q.defer();\n      bindOnce($scope, attr, function(v) {\n        return defered.resolve(v);\n      });\n      return defered.promise;\n    };\n    parseNav = function(data, $scope) {\n      var name, params, promises, values, _ref;\n      _ref = _.map(data.split(\":\"), trim), name = _ref[0], params = _ref[1];\n      if (params) {\n        params = _.map(params.split(\",\"), trim);\n      } else {\n        params = [];\n      }\n      values = _.map(params, function(x) {\n        return trim(x.split(\"=\")[1]);\n      });\n      promises = _.map(values, function(x) {\n        return bindOnceP($scope, x);\n      });\n      return $q.all(promises).then(function() {\n        var item, key, options, value, _i, _len, _ref1;\n        options = {};\n        for (_i = 0, _len = params.length; _i < _len; _i++) {\n          item = params[_i];\n          _ref1 = _.map(item.split(\"=\"), trim), key = _ref1[0], value = _ref1[1];\n          options[key] = $scope.$eval(value);\n        }\n        return [name, options];\n      });\n    };\n    link = function($scope, $el, $attrs) {\n      if ($el.is(\"a\")) {\n        $el.attr(\"href\", \"#\");\n      }\n      $el.on(\"mouseenter\", function(event) {\n        var target;\n        target = $(event.currentTarget);\n        if (!target.data(\"fullUrl\")) {\n          return parseNav($attrs.tgNav, $scope).then(function(result) {\n            var fullUrl, name, options, url, user;\n            name = result[0], options = result[1];\n            user = $auth.getUser();\n            if (user) {\n              options.user = user.username;\n            }\n            url = $navurls.resolve(name);\n            fullUrl = $navurls.formatUrl(url, options);\n            target.data(\"fullUrl\", fullUrl);\n            if (target.is(\"a\")) {\n              target.attr(\"href\", fullUrl);\n            }\n            return $el.on(\"click\", function(event) {\n              event.preventDefault();\n              target = $(event.currentTarget);\n              if (target.hasClass('noclick')) {\n                return;\n              }\n              fullUrl = target.data(\"fullUrl\");\n              switch (event.which) {\n                case 1:\n                  $location.url(fullUrl);\n                  return $scope.$apply();\n                case 2:\n                  return window.open(fullUrl);\n              }\n            });\n          });\n        }\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgNav\", [\"$tgNavUrls\", \"$tgAuth\", \"$q\", \"$tgLocation\", NavigationUrlsDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base/repository.coffee\n */\n\n(function() {\n  var RepositoryService, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  RepositoryService = (function(_super) {\n    __extends(RepositoryService, _super);\n\n    RepositoryService.$inject = [\"$q\", \"$tgModel\", \"$tgStorage\", \"$tgHttp\", \"$tgUrls\"];\n\n    function RepositoryService(_at_q, _at_model, _at_storage, _at_http, _at_urls) {\n      this.q = _at_q;\n      this.model = _at_model;\n      this.storage = _at_storage;\n      this.http = _at_http;\n      this.urls = _at_urls;\n      RepositoryService.__super__.constructor.call(this);\n    }\n\n    RepositoryService.prototype.resolveUrlForModel = function(model) {\n      var idAttrName;\n      idAttrName = model.getIdAttrName();\n      return (this.urls.resolve(model.getName())) + \"/\" + model[idAttrName];\n    };\n\n    RepositoryService.prototype.resolveUrlForAttributeModel = function(model) {\n      return this.urls.resolve(model.getName(), model.parent);\n    };\n\n    RepositoryService.prototype.create = function(name, data, dataTypes, extraParams) {\n      var defered, promise, url;\n      if (dataTypes == null) {\n        dataTypes = {};\n      }\n      if (extraParams == null) {\n        extraParams = {};\n      }\n      defered = this.q.defer();\n      url = this.urls.resolve(name);\n      promise = this.http.post(url, JSON.stringify(data));\n      promise.success((function(_this) {\n        return function(_data, _status) {\n          return defered.resolve(_this.model.make_model(name, _data, null, dataTypes));\n        };\n      })(this));\n      promise.error((function(_this) {\n        return function(data, status) {\n          return defered.reject(data);\n        };\n      })(this));\n      return defered.promise;\n    };\n\n    RepositoryService.prototype.remove = function(model, params) {\n      var defered, promise, url;\n      if (params == null) {\n        params = {};\n      }\n      defered = this.q.defer();\n      url = this.resolveUrlForModel(model);\n      promise = this.http[\"delete\"](url, {}, params);\n      promise.success(function(data, status) {\n        return defered.resolve(model);\n      });\n      promise.error(function(data, status) {\n        return defered.reject(model);\n      });\n      return defered.promise;\n    };\n\n    RepositoryService.prototype.saveAll = function(models, patch) {\n      var promises;\n      if (patch == null) {\n        patch = true;\n      }\n      promises = _.map(models, (function(_this) {\n        return function(x) {\n          return _this.save(x, true);\n        };\n      })(this));\n      return this.q.all(promises);\n    };\n\n    RepositoryService.prototype.save = function(model, patch) {\n      var data, defered, promise, url;\n      if (patch == null) {\n        patch = true;\n      }\n      defered = this.q.defer();\n      if (!model.isModified() && patch) {\n        defered.resolve(model);\n        return defered.promise;\n      }\n      url = this.resolveUrlForModel(model);\n      data = JSON.stringify(model.getAttrs(patch));\n      if (patch) {\n        promise = this.http.patch(url, data);\n      } else {\n        promise = this.http.put(url, data);\n      }\n      promise.success((function(_this) {\n        return function(data, status) {\n          model._isModified = false;\n          model._attrs = _.extend(model.getAttrs(), data);\n          model._modifiedAttrs = {};\n          model.applyCasts();\n          return defered.resolve(model);\n        };\n      })(this));\n      promise.error(function(data, status) {\n        return defered.reject(data);\n      });\n      return defered.promise;\n    };\n\n    RepositoryService.prototype.saveAttribute = function(model, attribute, patch) {\n      var data, defered, promise, url;\n      if (patch == null) {\n        patch = true;\n      }\n      defered = this.q.defer();\n      if (!model.isModified() && patch) {\n        defered.resolve(model);\n        return defered.promise;\n      }\n      url = this.resolveUrlForAttributeModel(model);\n      data = {};\n      data[attribute] = model.getAttrs();\n      if (patch) {\n        promise = this.http.patch(url, data);\n      } else {\n        promise = this.http.put(url, data);\n      }\n      promise.success((function(_this) {\n        return function(data, status) {\n          model._isModified = false;\n          model._attrs = _.extend(model.getAttrs(), data);\n          model._modifiedAttrs = {};\n          model.applyCasts();\n          return defered.resolve(model);\n        };\n      })(this));\n      promise.error(function(data, status) {\n        return defered.reject(data);\n      });\n      return defered.promise;\n    };\n\n    RepositoryService.prototype.refresh = function(model) {\n      var defered, promise, url;\n      defered = this.q.defer();\n      url = this.resolveUrlForModel(model);\n      promise = this.http.get(url);\n      promise.success(function(data, status) {\n        model._modifiedAttrs = {};\n        model._attrs = data;\n        model._isModified = false;\n        model.applyCasts();\n        return defered.resolve(model);\n      });\n      promise.error(function(data, status) {\n        return defered.reject(data);\n      });\n      return defered.promise;\n    };\n\n    RepositoryService.prototype.queryMany = function(name, params, options) {\n      var httpOptions, url;\n      if (options == null) {\n        options = {};\n      }\n      url = this.urls.resolve(name);\n      httpOptions = {\n        headers: {}\n      };\n      if (!options.enablePagination) {\n        httpOptions.headers[\"x-disable-pagination\"] = \"1\";\n      }\n      return this.http.get(url, params, httpOptions).then((function(_this) {\n        return function(data) {\n          return _.map(data.data, function(x) {\n            return _this.model.make_model(name, x);\n          });\n        };\n      })(this));\n    };\n\n    RepositoryService.prototype.queryOneAttribute = function(name, id, attribute, params, options) {\n      var httpOptions, url;\n      if (options == null) {\n        options = {};\n      }\n      url = this.urls.resolve(name, id);\n      httpOptions = {\n        headers: {}\n      };\n      if (!options.enablePagination) {\n        httpOptions.headers[\"x-disable-pagination\"] = \"1\";\n      }\n      return this.http.get(url, params, httpOptions).then((function(_this) {\n        return function(data) {\n          var model;\n          model = _this.model.make_model(name, data.data[attribute]);\n          model.parent = id;\n          return model;\n        };\n      })(this));\n    };\n\n    RepositoryService.prototype.queryOne = function(name, id, params, options) {\n      var httpOptions, url;\n      if (options == null) {\n        options = {};\n      }\n      url = this.urls.resolve(name);\n      if (id) {\n        url = url + \"/\" + id;\n      }\n      httpOptions = {\n        headers: {}\n      };\n      if (!options.enablePagination) {\n        httpOptions.headers[\"x-disable-pagination\"] = \"1\";\n      }\n      return this.http.get(url, params, httpOptions).then((function(_this) {\n        return function(data) {\n          return _this.model.make_model(name, data.data);\n        };\n      })(this));\n    };\n\n    RepositoryService.prototype.queryOneRaw = function(name, id, params, options) {\n      var httpOptions, url;\n      if (options == null) {\n        options = {};\n      }\n      url = this.urls.resolve(name);\n      if (id) {\n        url = url + \"/\" + id;\n      }\n      httpOptions = _.merge({\n        headers: {}\n      }, options);\n      if (!options.enablePagination) {\n        httpOptions.headers[\"x-disable-pagination\"] = \"1\";\n      }\n      return this.http.get(url, params, httpOptions).then((function(_this) {\n        return function(data) {\n          return data.data;\n        };\n      })(this));\n    };\n\n    RepositoryService.prototype.queryPaginated = function(name, params, options) {\n      var httpOptions, url;\n      if (options == null) {\n        options = {};\n      }\n      url = this.urls.resolve(name);\n      httpOptions = _.merge({\n        headers: {}\n      }, options);\n      return this.http.get(url, params, httpOptions).then((function(_this) {\n        return function(data) {\n          var headers, result;\n          headers = data.headers();\n          result = {};\n          result.models = _.map(data.data, function(x) {\n            return _this.model.make_model(name, x);\n          });\n          result.count = parseInt(headers[\"x-pagination-count\"], 10);\n          result.current = parseInt(headers[\"x-pagination-current\"] || 1, 10);\n          result.paginatedBy = parseInt(headers[\"x-paginated-by\"], 10);\n          return result;\n        };\n      })(this));\n    };\n\n    RepositoryService.prototype.resolve = function(options) {\n      var cache, params;\n      params = {};\n      if (options.pslug != null) {\n        params.project = options.pslug;\n      }\n      if (options.usref != null) {\n        params.us = options.usref;\n      }\n      if (options.taskref != null) {\n        params.task = options.taskref;\n      }\n      if (options.issueref != null) {\n        params.issue = options.issueref;\n      }\n      if (options.sslug != null) {\n        params.milestone = options.sslug;\n      }\n      if (options.wikipage != null) {\n        params.wikipage = options.wikipage;\n      }\n      cache = !(options.wikipage || options.sslug);\n      return this.queryOneRaw(\"resolver\", null, params, {\n        cache: cache\n      });\n    };\n\n    return RepositoryService;\n\n  })(taiga.Service);\n\n  module = angular.module(\"taigaBase\");\n\n  module.service(\"$tgRepo\", RepositoryService);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base/storage.coffee\n */\n\n(function() {\n  var StorageService, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  StorageService = (function(_super) {\n    __extends(StorageService, _super);\n\n    StorageService.$inject = [\"$rootScope\"];\n\n    function StorageService($rootScope) {\n      StorageService.__super__.constructor.call(this);\n    }\n\n    StorageService.prototype.get = function(key, _default) {\n      var serializedValue;\n      serializedValue = localStorage.getItem(key);\n      if (serializedValue === null) {\n        return _default || null;\n      }\n      return JSON.parse(serializedValue);\n    };\n\n    StorageService.prototype.set = function(key, val) {\n      if (_.isObject(key)) {\n        return _.each(key, (function(_this) {\n          return function(val, key) {\n            return _this.set(key, val);\n          };\n        })(this));\n      } else {\n        return localStorage.setItem(key, JSON.stringify(val));\n      }\n    };\n\n    StorageService.prototype.contains = function(key) {\n      var value;\n      value = this.get(key);\n      return value !== null;\n    };\n\n    StorageService.prototype.remove = function(key) {\n      return localStorage.removeItem(key);\n    };\n\n    StorageService.prototype.clear = function() {\n      return localStorage.clear();\n    };\n\n    return StorageService;\n\n  })(taiga.Service);\n\n  module = angular.module(\"taigaBase\");\n\n  module.service(\"$tgStorage\", StorageService);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/base/http.coffee\n */\n\n(function() {\n  var UrlsService, format, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  format = function(fmt, obj) {\n    obj = _.clone(obj);\n    return fmt.replace(/%s/g, function(match) {\n      return String(obj.shift());\n    });\n  };\n\n  taiga = this.taiga;\n\n  UrlsService = (function(_super) {\n    __extends(UrlsService, _super);\n\n    UrlsService.$inject = [\"$tgConfig\"];\n\n    function UrlsService(_at_config) {\n      this.config = _at_config;\n      this.urls = {};\n      this.mainUrl = this.config.get(\"api\");\n    }\n\n    UrlsService.prototype.update = function(urls) {\n      return this.urls = _.merge(this.urls, urls);\n    };\n\n    UrlsService.prototype.resolve = function() {\n      var args, name, url;\n      args = _.toArray(arguments);\n      if (args.length === 0) {\n        throw Error(\"wrong arguments to setUrls\");\n      }\n      name = args.slice(0, 1)[0];\n      url = format(this.urls[name], args.slice(1));\n      return format(\"%s/%s\", [_.str.rtrim(this.mainUrl, \"/\"), _.str.ltrim(url, \"/\")]);\n    };\n\n    return UrlsService;\n\n  })(taiga.Service);\n\n  module = angular.module(\"taigaBase\");\n\n  module.service('$tgUrls', UrlsService);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/attachments.coffee\n */\n\n(function() {\n  var module, resourceProvider, sizeFormat, taiga;\n\n  taiga = this.taiga;\n\n  sizeFormat = this.taiga.sizeFormat;\n\n  resourceProvider = function($rootScope, $config, $urls, $model, $repo, $auth, $q) {\n    var service;\n    service = {};\n    service.list = function(urlName, objectId, projectId) {\n      var params;\n      params = {\n        object_id: objectId,\n        project: projectId\n      };\n      return $repo.queryMany(urlName, params);\n    };\n    service.create = function(urlName, projectId, objectId, file) {\n      var data, defered, maxFileSize, response, uploadComplete, uploadFailed, uploadProgress, xhr;\n      defered = $q.defer();\n      if (file === void 0) {\n        defered.reject(null);\n        return defered.promise;\n      }\n      maxFileSize = $config.get(\"maxUploadFileSize\", null);\n      if (maxFileSize && file.size > maxFileSize) {\n        response = {\n          status: 413,\n          data: {\n            _error_message: \"'\" + file.name + \"' (\" + (sizeFormat(file.size)) + \") is too heavy for our oompa loompas, try it with a smaller than (\" + (sizeFormat(maxFileSize)) + \")\"\n          }\n        };\n        defered.reject(response);\n        return defered.promise;\n      }\n      uploadProgress = (function(_this) {\n        return function(evt) {\n          return $rootScope.$apply(function() {\n            file.status = \"in-progress\";\n            file.size = sizeFormat(evt.total);\n            file.progressMessage = \"upload \" + (sizeFormat(evt.loaded)) + \" of \" + (sizeFormat(evt.total));\n            return file.progressPercent = (Math.round((evt.loaded / evt.total) * 100)) + \"%\";\n          });\n        };\n      })(this);\n      uploadComplete = (function(_this) {\n        return function(evt) {\n          return $rootScope.$apply(function() {\n            var data, model;\n            file.status = \"done\";\n            try {\n              data = JSON.parse(evt.target.responseText);\n            } catch (_error) {\n              data = {};\n            }\n            model = $model.make_model(urlName, data);\n            return defered.resolve(model);\n          });\n        };\n      })(this);\n      uploadFailed = (function(_this) {\n        return function(evt) {\n          return $rootScope.$apply(function() {\n            file.status = \"error\";\n            return defered.reject(\"fail\");\n          });\n        };\n      })(this);\n      data = new FormData();\n      data.append(\"project\", projectId);\n      data.append(\"object_id\", objectId);\n      data.append(\"attached_file\", file);\n      xhr = new XMLHttpRequest();\n      xhr.upload.addEventListener(\"progress\", uploadProgress, false);\n      xhr.addEventListener(\"load\", uploadComplete, false);\n      xhr.addEventListener(\"error\", uploadFailed, false);\n      xhr.open(\"POST\", $urls.resolve(urlName));\n      xhr.setRequestHeader(\"Authorization\", \"Bearer \" + ($auth.getToken()));\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send(data);\n      return defered.promise;\n    };\n    return function(instance) {\n      return instance.attachments = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgAttachmentsResourcesProvider\", [\"$rootScope\", \"$tgConfig\", \"$tgUrls\", \"$tgModel\", \"$tgRepo\", \"$tgAuth\", \"$q\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/history.coffee\n */\n\n(function() {\n  var module, resourceProvider, taiga;\n\n  taiga = this.taiga;\n\n  resourceProvider = function($repo, $http, $urls) {\n    var service;\n    service = {};\n    service.get = function(type, objectId) {\n      return $repo.queryOneRaw(\"history/\" + type, objectId);\n    };\n    service.deleteComment = function(type, objectId, activityId) {\n      var params, url;\n      url = $urls.resolve(\"history/\" + type);\n      url = url + \"/\" + objectId + \"/delete_comment\";\n      params = {\n        id: activityId\n      };\n      return $http.post(url, null, params).then((function(_this) {\n        return function(data) {\n          return data.data;\n        };\n      })(this));\n    };\n    service.undeleteComment = function(type, objectId, activityId) {\n      var params, url;\n      url = $urls.resolve(\"history/\" + type);\n      url = url + \"/\" + objectId + \"/undelete_comment\";\n      params = {\n        id: activityId\n      };\n      return $http.post(url, null, params).then((function(_this) {\n        return function(data) {\n          return data.data;\n        };\n      })(this));\n    };\n    return function(instance) {\n      return instance.history = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgHistoryResourcesProvider\", [\"$tgRepo\", \"$tgHttp\", \"$tgUrls\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/projects.coffee\n */\n\n(function() {\n  var module, resourceProvider, taiga;\n\n  taiga = this.taiga;\n\n  resourceProvider = function($repo) {\n    var service;\n    service = {};\n    service.get = function(token) {\n      return $repo.queryOne(\"invitations\", token);\n    };\n    return function(instance) {\n      return instance.invitations = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgInvitationsResourcesProvider\", [\"$tgRepo\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/issues.coffee\n */\n\n(function() {\n  var generateHash, module, resourceProvider, taiga;\n\n  taiga = this.taiga;\n\n  generateHash = taiga.generateHash;\n\n  resourceProvider = function($repo, $http, $urls, $storage, $q) {\n    var filtersHashSuffix, hashSuffix, myFiltersHashSuffix, service;\n    service = {};\n    hashSuffix = \"issues-queryparams\";\n    filtersHashSuffix = \"issues-filters\";\n    myFiltersHashSuffix = \"issues-my-filters\";\n    service.get = function(projectId, issueId) {\n      var params;\n      params = service.getQueryParams(projectId);\n      params.project = projectId;\n      return $repo.queryOne(\"issues\", issueId, params);\n    };\n    service.getByRef = function(projectId, ref) {\n      var params;\n      params = service.getQueryParams(projectId);\n      params.project = projectId;\n      params.ref = ref;\n      return $repo.queryOne(\"issues\", \"by_ref\", params);\n    };\n    service.list = function(projectId, filters, options) {\n      var params;\n      params = {\n        project: projectId\n      };\n      params = _.extend({}, params, filters || {});\n      service.storeQueryParams(projectId, params);\n      return $repo.queryPaginated(\"issues\", params, options);\n    };\n    service.bulkCreate = function(projectId, data) {\n      var params, url;\n      url = $urls.resolve(\"bulk-create-issues\");\n      params = {\n        project_id: projectId,\n        bulk_issues: data\n      };\n      return $http.post(url, params);\n    };\n    service.stats = function(projectId) {\n      return $repo.queryOneRaw(\"projects\", projectId + \"/issues_stats\");\n    };\n    service.filtersData = function(projectId) {\n      return $repo.queryOneRaw(\"projects\", projectId + \"/issue_filters_data\");\n    };\n    service.listValues = function(projectId, type) {\n      var params;\n      params = {\n        \"project\": projectId\n      };\n      service.storeQueryParams(projectId, params);\n      return $repo.queryMany(type, params);\n    };\n    service.storeQueryParams = function(projectId, params) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffix;\n      hash = generateHash([projectId, ns]);\n      return $storage.set(hash, params);\n    };\n    service.getQueryParams = function(projectId) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffix;\n      hash = generateHash([projectId, ns]);\n      return $storage.get(hash) || {};\n    };\n    service.storeFilters = function(projectSlug, params) {\n      var hash, ns;\n      ns = projectSlug + \":\" + filtersHashSuffix;\n      hash = generateHash([projectSlug, ns]);\n      return $storage.set(hash, params);\n    };\n    service.getFilters = function(projectSlug) {\n      var hash, ns;\n      ns = projectSlug + \":\" + filtersHashSuffix;\n      hash = generateHash([projectSlug, ns]);\n      return $storage.get(hash) || {};\n    };\n    service.storeMyFilters = function(projectId, myFilters) {\n      var deferred, hash, ns, promise, url;\n      deferred = $q.defer();\n      url = $urls.resolve(\"user-storage\");\n      ns = projectId + \":\" + myFiltersHashSuffix;\n      hash = generateHash([projectId, ns]);\n      if (_.isEmpty(myFilters)) {\n        promise = $http[\"delete\"](url + \"/\" + hash, {\n          key: hash,\n          value: myFilters\n        });\n        promise.then(function() {\n          return deferred.resolve();\n        });\n        promise.then(null, function() {\n          return deferred.reject();\n        });\n      } else {\n        promise = $http.put(url + \"/\" + hash, {\n          key: hash,\n          value: myFilters\n        });\n        promise.then(function(data) {\n          return deferred.resolve();\n        });\n        promise.then(null, function(data) {\n          var innerPromise;\n          innerPromise = $http.post(\"\" + url, {\n            key: hash,\n            value: myFilters\n          });\n          innerPromise.then(function() {\n            return deferred.resolve();\n          });\n          return innerPromise.then(null, function() {\n            return deferred.reject();\n          });\n        });\n      }\n      return deferred.promise;\n    };\n    service.getMyFilters = function(projectId) {\n      var deferred, hash, ns, promise, url;\n      deferred = $q.defer();\n      url = $urls.resolve(\"user-storage\");\n      ns = projectId + \":\" + myFiltersHashSuffix;\n      hash = generateHash([projectId, ns]);\n      promise = $http.get(url + \"/\" + hash);\n      promise.then(function(data) {\n        return deferred.resolve(data.data.value);\n      });\n      promise.then(null, function(data) {\n        return deferred.resolve({});\n      });\n      return deferred.promise;\n    };\n    return function(instance) {\n      return instance.issues = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgIssuesResourcesProvider\", [\"$tgRepo\", \"$tgHttp\", \"$tgUrls\", \"$tgStorage\", \"$q\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/kanban.coffee\n */\n\n(function() {\n  var generateHash, module, resourceProvider, taiga;\n\n  taiga = this.taiga;\n\n  generateHash = taiga.generateHash;\n\n  resourceProvider = function($storage) {\n    var hashSuffixStatusColumnModes, hashSuffixStatusViewModes, service;\n    service = {};\n    hashSuffixStatusViewModes = \"kanban-statusviewmodels\";\n    hashSuffixStatusColumnModes = \"kanban-statuscolumnmodels\";\n    service.storeStatusViewModes = function(projectId, params) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffixStatusViewModes;\n      hash = generateHash([projectId, ns]);\n      return $storage.set(hash, params);\n    };\n    service.getStatusViewModes = function(projectId) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffixStatusViewModes;\n      hash = generateHash([projectId, ns]);\n      return $storage.get(hash) || {};\n    };\n    service.storeStatusColumnModes = function(projectId, params) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffixStatusColumnModes;\n      hash = generateHash([projectId, ns]);\n      return $storage.set(hash, params);\n    };\n    service.getStatusColumnModes = function(projectId) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffixStatusColumnModes;\n      hash = generateHash([projectId, ns]);\n      return $storage.get(hash) || {};\n    };\n    return function(instance) {\n      return instance.kanban = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgKanbanResourcesProvider\", [\"$tgStorage\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/mdrender.coffee\n */\n\n(function() {\n  var module, resourceProvider, taiga;\n\n  taiga = this.taiga;\n\n  resourceProvider = function($repo, $urls, $http) {\n    var service;\n    service = {};\n    service.render = function(projectId, content) {\n      var params, url;\n      if ((content == null) || content === \"\") {\n        content = ' ';\n      }\n      params = {\n        project_id: projectId,\n        content: content\n      };\n      url = $urls.resolve(\"wiki\");\n      return $http.post(url + \"/render\", params).then((function(_this) {\n        return function(data) {\n          return data.data;\n        };\n      })(this));\n    };\n    return function(instance) {\n      return instance.mdrender = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgMdRenderResourcesProvider\", [\"$tgRepo\", \"$tgUrls\", \"$tgHttp\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/memberships.coffee\n */\n\n(function() {\n  var module, resourceProvider, taiga;\n\n  taiga = this.taiga;\n\n  resourceProvider = function($repo, $http, $urls) {\n    var service;\n    service = {};\n    service.get = function(id) {\n      return $repo.queryOne(\"memberships\", id);\n    };\n    service.list = function(projectId, filters, enablePagination) {\n      var options, params;\n      if (enablePagination == null) {\n        enablePagination = true;\n      }\n      params = {\n        project: projectId\n      };\n      params = _.extend({}, params, filters || {});\n      if (enablePagination) {\n        return $repo.queryPaginated(\"memberships\", params);\n      }\n      return $repo.queryMany(\"memberships\", params, options = {\n        enablePagination: enablePagination\n      });\n    };\n    service.listByUser = function(userId, filters) {\n      var params;\n      params = {\n        user: userId\n      };\n      params = _.extend({}, params, filters || {});\n      return $repo.queryPaginated(\"memberships\", params);\n    };\n    service.resendInvitation = function(id) {\n      var url;\n      url = $urls.resolve(\"memberships\");\n      return $http.post(url + \"/\" + id + \"/resend_invitation\", {});\n    };\n    service.bulkCreateMemberships = function(projectId, data, invitation_extra_text) {\n      var params, url;\n      url = $urls.resolve(\"bulk-create-memberships\");\n      params = {\n        project_id: projectId,\n        bulk_memberships: data,\n        invitation_extra_text: invitation_extra_text\n      };\n      return $http.post(url, params);\n    };\n    return function(instance) {\n      return instance.memberships = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgMembershipsResourcesProvider\", [\"$tgRepo\", \"$tgHttp\", \"$tgUrls\", resourceProvider]);\n\n}).call(this);\n\n(function() {\n  var module, resourceProvider;\n\n  resourceProvider = function($repo) {\n    var service;\n    service = {};\n    service.list = function(projectId, module) {\n      return $repo.queryOneAttribute(\"project-modules\", projectId, module);\n    };\n    return function(instance) {\n      return instance.modules = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgModulesResourcesProvider\", [\"$tgRepo\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/memberships.coffee\n */\n\n(function() {\n  var module, resourceProvider, taiga;\n\n  taiga = this.taiga;\n\n  resourceProvider = function($repo, $http, $urls) {\n    var service;\n    service = {};\n    service.get = function(id) {\n      return $repo.queryOne(\"notify-policies\", id);\n    };\n    service.list = function(filters) {\n      var params;\n      params = _.extend({}, params, filters || {});\n      return $repo.queryMany(\"notify-policies\", params);\n    };\n    return function(instance) {\n      return instance.notifyPolicies = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgNotifyPoliciesResourcesProvider\", [\"$tgRepo\", \"$tgHttp\", \"$tgUrls\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/projects.coffee\n */\n\n(function() {\n  var module, resourceProvider, sizeFormat, taiga;\n\n  taiga = this.taiga;\n\n  sizeFormat = this.taiga.sizeFormat;\n\n  resourceProvider = function($config, $repo, $http, $urls, $auth, $q, $rootScope) {\n    var service;\n    service = {};\n    service.get = function(projectId) {\n      return $repo.queryOne(\"projects\", projectId);\n    };\n    service.getBySlug = function(projectSlug) {\n      return $repo.queryOne(\"projects\", \"by_slug?slug=\" + projectSlug);\n    };\n    service.list = function() {\n      return $repo.queryMany(\"projects\");\n    };\n    service.templates = function() {\n      return $repo.queryMany(\"project-templates\");\n    };\n    service.usersList = function(projectId) {\n      var params;\n      params = {\n        \"project\": projectId\n      };\n      return $repo.queryMany(\"users\", params);\n    };\n    service.rolesList = function(projectId) {\n      var params;\n      params = {\n        \"project\": projectId\n      };\n      return $repo.queryMany(\"roles\", params);\n    };\n    service.stats = function(projectId) {\n      return $repo.queryOneRaw(\"projects\", projectId + \"/stats\");\n    };\n    service.leave = function(projectId) {\n      var url;\n      url = ($urls.resolve(\"projects\")) + \"/\" + projectId + \"/leave\";\n      return $http.post(url);\n    };\n    service.memberStats = function(projectId) {\n      return $repo.queryOneRaw(\"projects\", projectId + \"/member_stats\");\n    };\n    service.tagsColors = function(projectId) {\n      return $repo.queryOne(\"projects\", projectId + \"/tags_colors\");\n    };\n    service[\"export\"] = function(projectId) {\n      var url;\n      url = ($urls.resolve(\"exporter\")) + \"/\" + projectId;\n      return $http.get(url);\n    };\n    service[\"import\"] = function(file, statusUpdater) {\n      var complete, data, defered, failed, maxFileSize, response, uploadComplete, uploadFailed, uploadProgress, xhr;\n      defered = $q.defer();\n      maxFileSize = $config.get(\"maxUploadFileSize\", null);\n      if (maxFileSize && file.size > maxFileSize) {\n        response = {\n          status: 413,\n          data: {\n            _error_message: \"'\" + file.name + \"' (\" + (sizeFormat(file.size)) + \") is too heavy for our oompa loompas, try it with a smaller than (\" + (sizeFormat(maxFileSize)) + \")\"\n          }\n        };\n        defered.reject(response);\n        return defered.promise;\n      }\n      uploadProgress = (function(_this) {\n        return function(evt) {\n          var message, percent;\n          percent = Math.round((evt.loaded / evt.total) * 100);\n          message = \"Uloaded \" + (sizeFormat(evt.loaded)) + \" of \" + (sizeFormat(evt.total));\n          return statusUpdater(\"in-progress\", null, message, percent);\n        };\n      })(this);\n      uploadComplete = (function(_this) {\n        return function(evt) {\n          return statusUpdater(\"done\", \"Importing Project\", \"This process can take a while, please keep the window open.\");\n        };\n      })(this);\n      uploadFailed = (function(_this) {\n        return function(evt) {\n          return statusUpdater(\"error\");\n        };\n      })(this);\n      complete = (function(_this) {\n        return function(evt) {\n          var _ref;\n          response = {};\n          try {\n            response.data = JSON.parse(evt.target.responseText);\n          } catch (_error) {\n            response.data = {};\n          }\n          response.status = evt.target.status;\n          if ((_ref = response.status) === 201 || _ref === 202) {\n            defered.resolve(response);\n          }\n          return defered.reject(response);\n        };\n      })(this);\n      failed = (function(_this) {\n        return function(evt) {\n          return defered.reject(\"fail\");\n        };\n      })(this);\n      data = new FormData();\n      data.append('dump', file);\n      xhr = new XMLHttpRequest();\n      xhr.upload.addEventListener(\"progress\", uploadProgress, false);\n      xhr.upload.addEventListener(\"load\", uploadComplete, false);\n      xhr.upload.addEventListener(\"error\", uploadFailed, false);\n      xhr.upload.addEventListener(\"abort\", uploadFailed, false);\n      xhr.addEventListener(\"load\", complete, false);\n      xhr.addEventListener(\"error\", failed, false);\n      xhr.open(\"POST\", $urls.resolve(\"importer\"));\n      xhr.setRequestHeader(\"Authorization\", \"Bearer \" + ($auth.getToken()));\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send(data);\n      return defered.promise;\n    };\n    return function(instance) {\n      return instance.projects = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgProjectsResourcesProvider\", [\"$tgConfig\", \"$tgRepo\", \"$tgHttp\", \"$tgUrls\", \"$tgAuth\", \"$q\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/memberships.coffee\n */\n\n(function() {\n  var module, resourceProvider, taiga;\n\n  taiga = this.taiga;\n\n  resourceProvider = function($repo, $http, $urls) {\n    var service;\n    service = {};\n    service.get = function(id) {\n      return $repo.queryOne(\"roles\", id);\n    };\n    service.list = function(projectId) {\n      return $repo.queryMany(\"roles\", {\n        project: projectId\n      });\n    };\n    return function(instance) {\n      return instance.roles = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgRolesResourcesProvider\", [\"$tgRepo\", \"$tgHttp\", \"$tgUrls\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/search.coffee\n */\n\n(function() {\n  var module, resourceProvider, taiga;\n\n  taiga = this.taiga;\n\n  resourceProvider = function($repo, $urls, $http) {\n    var service;\n    service = {};\n    service[\"do\"] = function(projectId, term) {\n      var params, url;\n      url = $urls.resolve(\"search\");\n      params = {\n        project: projectId,\n        text: term,\n        get_all: false\n      };\n      return $http.get(url, params).then(function(data) {\n        return data.data;\n      });\n    };\n    return function(instance) {\n      return instance.search = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgSearchResourcesProvider\", [\"$tgRepo\", \"$tgUrls\", \"$tgHttp\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/sprints.coffee\n */\n\n(function() {\n  var generateHash, module, resourceProvider, taiga;\n\n  taiga = this.taiga;\n\n  generateHash = taiga.generateHash;\n\n  resourceProvider = function($repo, $model, $storage) {\n    var hashSuffixUserstories, service;\n    service = {};\n    hashSuffixUserstories = \"userstories-queryparams\";\n    service.get = function(projectId, sprintId) {\n      return $repo.queryOne(\"milestones\", sprintId).then(function(sprint) {\n        var uses;\n        service.storeUserstoriesQueryParams(projectId, {\n          \"milestone\": sprintId\n        });\n        uses = sprint.user_stories;\n        uses = _.map(uses, function(u) {\n          return $model.make_model(\"userstories\", u);\n        });\n        sprint._attrs.user_stories = uses;\n        return sprint;\n      });\n    };\n    service.stats = function(projectId, sprintId) {\n      return $repo.queryOneRaw(\"milestones\", sprintId + \"/stats\");\n    };\n    service.list = function(projectId, filters) {\n      var params;\n      params = {\n        \"project\": projectId\n      };\n      params = _.extend({}, params, filters || {});\n      return $repo.queryMany(\"milestones\", params).then((function(_this) {\n        return function(milestones) {\n          var m, uses, _i, _len;\n          for (_i = 0, _len = milestones.length; _i < _len; _i++) {\n            m = milestones[_i];\n            uses = m.user_stories;\n            uses = _.map(uses, function(u) {\n              return $model.make_model(\"userstories\", u);\n            });\n            m._attrs.user_stories = uses;\n          }\n          return milestones;\n        };\n      })(this));\n    };\n    service.storeUserstoriesQueryParams = function(projectId, params) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffixUserstories;\n      hash = generateHash([projectId, ns]);\n      return $storage.set(hash, params);\n    };\n    return function(instance) {\n      return instance.sprints = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgSprintsResourcesProvider\", [\"$tgRepo\", \"$tgModel\", \"$tgStorage\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/tasks.coffee\n */\n\n(function() {\n  var generateHash, module, resourceProvider, taiga;\n\n  taiga = this.taiga;\n\n  generateHash = taiga.generateHash;\n\n  resourceProvider = function($repo, $http, $urls, $storage) {\n    var hashSuffix, hashSuffixStatusColumnModes, hashSuffixUsRowModes, service;\n    service = {};\n    hashSuffix = \"tasks-queryparams\";\n    hashSuffixStatusColumnModes = \"tasks-statuscolumnmodels\";\n    hashSuffixUsRowModes = \"tasks-usrowmodels\";\n    service.get = function(projectId, taskId) {\n      var params;\n      params = service.getQueryParams(projectId);\n      params.project = projectId;\n      return $repo.queryOne(\"tasks\", taskId, params);\n    };\n    service.getByRef = function(projectId, ref) {\n      var params;\n      params = service.getQueryParams(projectId);\n      params.project = projectId;\n      params.ref = ref;\n      return $repo.queryOne(\"tasks\", \"by_ref\", params);\n    };\n    service.list = function(projectId, sprintId, userStoryId) {\n      var params;\n      if (sprintId == null) {\n        sprintId = null;\n      }\n      if (userStoryId == null) {\n        userStoryId = null;\n      }\n      params = {\n        project: projectId\n      };\n      if (sprintId) {\n        params.milestone = sprintId;\n      }\n      if (userStoryId) {\n        params.user_story = userStoryId;\n      }\n      service.storeQueryParams(projectId, params);\n      return $repo.queryMany(\"tasks\", params);\n    };\n    service.bulkCreate = function(projectId, sprintId, usId, data) {\n      var params, url;\n      url = $urls.resolve(\"bulk-create-tasks\");\n      params = {\n        project_id: projectId,\n        sprint_id: sprintId,\n        us_id: usId,\n        bulk_tasks: data\n      };\n      return $http.post(url, params).then(function(result) {\n        return result.data;\n      });\n    };\n    service.bulkUpdateTaskTaskboardOrder = function(projectId, data) {\n      var params, url;\n      url = $urls.resolve(\"bulk-update-task-taskboard-order\");\n      params = {\n        project_id: projectId,\n        bulk_tasks: data\n      };\n      return $http.post(url, params);\n    };\n    service.listValues = function(projectId, type) {\n      var params;\n      params = {\n        \"project\": projectId\n      };\n      return $repo.queryMany(type, params);\n    };\n    service.storeQueryParams = function(projectId, params) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffix;\n      hash = generateHash([projectId, ns]);\n      return $storage.set(hash, params);\n    };\n    service.getQueryParams = function(projectId) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffix;\n      hash = generateHash([projectId, ns]);\n      return $storage.get(hash) || {};\n    };\n    service.storeStatusColumnModes = function(projectId, params) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffixStatusColumnModes;\n      hash = generateHash([projectId, ns]);\n      return $storage.set(hash, params);\n    };\n    service.getStatusColumnModes = function(projectId) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffixStatusColumnModes;\n      hash = generateHash([projectId, ns]);\n      return $storage.get(hash) || {};\n    };\n    service.storeUsRowModes = function(projectId, sprintId, params) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffixUsRowModes;\n      hash = generateHash([projectId, sprintId, ns]);\n      return $storage.set(hash, params);\n    };\n    service.getUsRowModes = function(projectId, sprintId) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffixUsRowModes;\n      hash = generateHash([projectId, sprintId, ns]);\n      return $storage.get(hash) || {};\n    };\n    return function(instance) {\n      return instance.tasks = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgTasksResourcesProvider\", [\"$tgRepo\", \"$tgHttp\", \"$tgUrls\", \"$tgStorage\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/memberships.coffee\n */\n\n(function() {\n  var module, resourceProvider, sizeFormat, taiga;\n\n  taiga = this.taiga;\n\n  sizeFormat = this.taiga.sizeFormat;\n\n  resourceProvider = function($config, $repo, $http, $urls, $q) {\n    var service;\n    service = {};\n    service.changeAvatar = function(file) {\n      var data, defered, maxFileSize, options, response, url;\n      maxFileSize = $config.get(\"maxUploadFileSize\", null);\n      if (maxFileSize && file.size > maxFileSize) {\n        response = {\n          status: 413,\n          data: {\n            _error_message: \"'\" + file.name + \"' (\" + (sizeFormat(file.size)) + \") is too heavy for our oompa loompas, try it with a smaller than (\" + (sizeFormat(maxFileSize)) + \")\"\n          }\n        };\n        defered = $q.defer();\n        defered.reject(response);\n        return defered.promise;\n      }\n      data = new FormData();\n      data.append('avatar', file);\n      options = {\n        transformRequest: angular.identity,\n        headers: {\n          'Content-Type': void 0\n        }\n      };\n      url = ($urls.resolve(\"users\")) + \"/change_avatar\";\n      return $http.post(url, data, {}, options);\n    };\n    service.removeAvatar = function() {\n      var url;\n      url = ($urls.resolve(\"users\")) + \"/remove_avatar\";\n      return $http.post(url);\n    };\n    service.changePassword = function(currentPassword, newPassword) {\n      var data, url;\n      url = ($urls.resolve(\"users\")) + \"/change_password\";\n      data = {\n        current_password: currentPassword,\n        password: newPassword\n      };\n      return $http.post(url, data);\n    };\n    return function(instance) {\n      return instance.userSettings = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgUserSettingsResourcesProvider\", [\"$tgConfig\", \"$tgRepo\", \"$tgHttp\", \"$tgUrls\", \"$q\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/userstories.coffee\n */\n\n(function() {\n  var generateHash, module, resourceProvider, taiga;\n\n  taiga = this.taiga;\n\n  generateHash = taiga.generateHash;\n\n  resourceProvider = function($repo, $http, $urls, $storage) {\n    var hashSuffix, service;\n    service = {};\n    hashSuffix = \"userstories-queryparams\";\n    service.get = function(projectId, usId) {\n      var params;\n      params = service.getQueryParams(projectId);\n      params.project = projectId;\n      return $repo.queryOne(\"userstories\", usId, params);\n    };\n    service.getByRef = function(projectId, ref) {\n      var params;\n      params = service.getQueryParams(projectId);\n      params.project = projectId;\n      params.ref = ref;\n      return $repo.queryOne(\"userstories\", \"by_ref\", params);\n    };\n    service.listUnassigned = function(projectId, filters) {\n      var params;\n      params = {\n        \"project\": projectId,\n        \"milestone\": \"null\"\n      };\n      params = _.extend({}, params, filters || {});\n      service.storeQueryParams(projectId, params);\n      return $repo.queryMany(\"userstories\", params);\n    };\n    service.listAll = function(projectId, filters) {\n      var params;\n      params = {\n        \"project\": projectId\n      };\n      params = _.extend({}, params, filters || {});\n      service.storeQueryParams(projectId, params);\n      return $repo.queryMany(\"userstories\", params);\n    };\n    service.bulkCreate = function(projectId, status, bulk) {\n      var data, url;\n      data = {\n        project_id: projectId,\n        status_id: status,\n        bulk_stories: bulk\n      };\n      url = $urls.resolve(\"bulk-create-us\");\n      return $http.post(url, data);\n    };\n    service.bulkUpdateBacklogOrder = function(projectId, data) {\n      var params, url;\n      url = $urls.resolve(\"bulk-update-us-backlog-order\");\n      params = {\n        project_id: projectId,\n        bulk_stories: data\n      };\n      return $http.post(url, params);\n    };\n    service.bulkUpdateSprintOrder = function(projectId, data) {\n      var params, url;\n      url = $urls.resolve(\"bulk-update-us-sprint-order\");\n      params = {\n        project_id: projectId,\n        bulk_stories: data\n      };\n      return $http.post(url, params);\n    };\n    service.bulkUpdateKanbanOrder = function(projectId, data) {\n      var params, url;\n      url = $urls.resolve(\"bulk-update-us-kanban-order\");\n      params = {\n        project_id: projectId,\n        bulk_stories: data\n      };\n      return $http.post(url, params);\n    };\n    service.listValues = function(projectId, type) {\n      var params;\n      params = {\n        \"project\": projectId\n      };\n      service.storeQueryParams(projectId, params);\n      return $repo.queryMany(type, params);\n    };\n    service.storeQueryParams = function(projectId, params) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffix;\n      hash = generateHash([projectId, ns]);\n      return $storage.set(hash, params);\n    };\n    service.getQueryParams = function(projectId) {\n      var hash, ns;\n      ns = projectId + \":\" + hashSuffix;\n      hash = generateHash([projectId, ns]);\n      return $storage.get(hash) || {};\n    };\n    service.storeShowTags = function(projectId, showTags) {\n      var hash;\n      hash = generateHash([projectId, 'showTags']);\n      return $storage.set(hash, showTags);\n    };\n    service.getShowTags = function(projectId) {\n      var hash;\n      hash = generateHash([projectId, 'showTags']);\n      return $storage.get(hash) || null;\n    };\n    return function(instance) {\n      return instance.userstories = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgUserstoriesResourcesProvider\", [\"$tgRepo\", \"$tgHttp\", \"$tgUrls\", \"$tgStorage\", resourceProvider]);\n\n}).call(this);\n\n(function() {\n  var module, resourceProvider;\n\n  resourceProvider = function($repo, $urls, $http) {\n    var service;\n    service = {};\n    service.list = function(webhookId) {\n      var params;\n      params = {\n        webhook: webhookId\n      };\n      return $repo.queryMany(\"webhooklogs\", params);\n    };\n    service.resend = function(webhooklogId) {\n      var url;\n      url = $urls.resolve(\"webhooklogs-resend\", webhooklogId);\n      return $http.post(url);\n    };\n    return function(instance) {\n      return instance.webhooklogs = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgWebhookLogsResourcesProvider\", [\"$tgRepo\", \"$tgUrls\", \"$tgHttp\", resourceProvider]);\n\n}).call(this);\n\n(function() {\n  var module, resourceProvider;\n\n  resourceProvider = function($repo, $urls, $http) {\n    var service;\n    service = {};\n    service.list = function(projectId) {\n      var params;\n      params = {\n        project: projectId\n      };\n      return $repo.queryMany(\"webhooks\", params);\n    };\n    service.test = function(webhookId) {\n      var url;\n      url = $urls.resolve(\"webhooks-test\", webhookId);\n      return $http.post(url);\n    };\n    return function(instance) {\n      return instance.webhooks = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgWebhooksResourcesProvider\", [\"$tgRepo\", \"$tgUrls\", \"$tgHttp\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/resources/wikis.coffee\n */\n\n(function() {\n  var module, resourceProvider, taiga;\n\n  taiga = this.taiga;\n\n  resourceProvider = function($repo, $http, $urls) {\n    var service;\n    service = {};\n    service.get = function(wikiId) {\n      return $repo.queryOne(\"wiki\", wikiId);\n    };\n    service.getBySlug = function(projectId, slug) {\n      return $repo.queryOne(\"wiki\", \"by_slug?project=\" + projectId + \"&slug=\" + slug);\n    };\n    service.listLinks = function(projectId) {\n      return $repo.queryMany(\"wiki-links\", {\n        project: projectId\n      });\n    };\n    return function(instance) {\n      return instance.wiki = service;\n    };\n  };\n\n  module = angular.module(\"taigaResources\");\n\n  module.factory(\"$tgWikiResourcesProvider\", [\"$tgRepo\", \"$tgHttp\", \"$tgUrls\", resourceProvider]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/user-settings/main.coffee\n */\n\n(function() {\n  var UserChangePasswordController, UserChangePasswordDirective, debounce, mixOf, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaUserSettings\");\n\n  UserChangePasswordController = (function(_super) {\n    __extends(UserChangePasswordController, _super);\n\n    UserChangePasswordController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$tgNavUrls\", \"$tgAuth\"];\n\n    function UserChangePasswordController(_at_scope, _at_rootscope, _at_repo, _at_confirm, _at_rs, _at_params, _at_q, _at_location, _at_navUrls, _at_auth) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.navUrls = _at_navUrls;\n      this.auth = _at_auth;\n      this.scope.sectionName = \"Change Password\";\n      this.scope.project = {};\n      this.scope.user = this.auth.getUser();\n      promise = this.loadInitialData();\n      promise.then(null, this.onInitialDataError.bind(this));\n    }\n\n    UserChangePasswordController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          return project;\n        };\n      })(this));\n    };\n\n    UserChangePasswordController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.repo.resolve({\n        pslug: this.params.pslug\n      }).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadProject();\n        };\n      })(this));\n    };\n\n    return UserChangePasswordController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin));\n\n  module.controller(\"UserChangePasswordController\", UserChangePasswordController);\n\n  UserChangePasswordDirective = function($rs, $confirm, $loading) {\n    var link;\n    link = function($scope, $el, $attrs, ctrl) {\n      var submit, submitButton;\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var promise;\n          event.preventDefault();\n          if ($scope.newPassword1 !== $scope.newPassword2) {\n            $confirm.notify('error', \"The passwords dosn't match\");\n            return;\n          }\n          $loading.start(submitButton);\n          promise = $rs.userSettings.changePassword($scope.currentPassword, $scope.newPassword1);\n          promise.then(function() {\n            $loading.finish(submitButton);\n            return $confirm.notify('success');\n          });\n          return promise.then(null, function(response) {\n            $loading.finish(submitButton);\n            return $confirm.notify('error', response.data._error_message);\n          });\n        };\n      })(this));\n      submitButton = $el.find(\".submit-button\");\n      $el.on(\"submit\", \"form\", submit);\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgUserChangePassword\", [\"$tgResources\", \"$tgConfirm\", \"$tgLoading\", UserChangePasswordDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/issues/lightboxes.coffee\n */\n\n(function() {\n  var DeleteUserDirective, bindOnce, debounce, module, taiga;\n\n  taiga = this.taiga;\n\n  bindOnce = this.taiga.bindOnce;\n\n  debounce = this.taiga.debounce;\n\n  module = angular.module(\"taigaUserSettings\");\n\n  DeleteUserDirective = function($repo, $rootscope, $auth, $location, $navUrls, lightboxService) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var submit;\n      $scope.$on(\"deletelightbox:new\", function(ctx, user) {\n        return lightboxService.open($el);\n      });\n      $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n      submit = function() {\n        var promise;\n        promise = $repo.remove($scope.user);\n        promise.then(function(data) {\n          lightboxService.close($el);\n          $auth.logout();\n          return $location.path($navUrls.resolve(\"login\"));\n        });\n        return promise.then(null, function() {\n          return console.log(\"FAIL\");\n        });\n      };\n      $el.on(\"click\", \".button-red\", function(event) {\n        event.preventDefault();\n        return lightboxService.close($el);\n      });\n      return $el.on(\"click\", \".button-green\", debounce(2000, function(event) {\n        event.preventDefault();\n        return submit();\n      }));\n    };\n    return {\n      link: link,\n      templateUrl: \"user/lightbox/lightbox-delete-account.html\"\n    };\n  };\n\n  module.directive(\"tgLbDeleteUser\", [\"$tgRepo\", \"$rootScope\", \"$tgAuth\", \"$tgLocation\", \"$tgNavUrls\", \"lightboxService\", DeleteUserDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/user-settings/main.coffee\n */\n\n(function() {\n  var TaigaAvatarModelDirective, UserAvatarDirective, UserProfileDirective, UserSettingsController, debounce, mixOf, module, sizeFormat, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  sizeFormat = this.taiga.sizeFormat;\n\n  module = angular.module(\"taigaUserSettings\");\n\n  debounce = this.taiga.debounce;\n\n  UserSettingsController = (function(_super) {\n    __extends(UserSettingsController, _super);\n\n    UserSettingsController.$inject = [\"$scope\", \"$rootScope\", \"$tgConfig\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$tgNavUrls\", \"$tgAuth\"];\n\n    function UserSettingsController(_at_scope, _at_rootscope, _at_config, _at_repo, _at_confirm, _at_rs, _at_params, _at_q, _at_location, _at_navUrls, _at_auth) {\n      var maxFileSize, promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.config = _at_config;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.navUrls = _at_navUrls;\n      this.auth = _at_auth;\n      this.scope.sectionName = \"User Profile\";\n      this.scope.project = {};\n      this.scope.user = this.auth.getUser();\n      maxFileSize = this.config.get(\"maxUploadFileSize\", null);\n      if (maxFileSize) {\n        this.scope.maxFileSizeMsg = \"[Max, size: \" + (sizeFormat(maxFileSize));\n      }\n      promise = this.loadInitialData();\n      promise.then(null, this.onInitialDataError.bind(this));\n    }\n\n    UserSettingsController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          return project;\n        };\n      })(this));\n    };\n\n    UserSettingsController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.repo.resolve({\n        pslug: this.params.pslug\n      }).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadProject();\n        };\n      })(this));\n    };\n\n    UserSettingsController.prototype.openDeleteLightbox = function() {\n      return this.rootscope.$broadcast(\"deletelightbox:new\", this.scope.user);\n    };\n\n    return UserSettingsController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin));\n\n  module.controller(\"UserSettingsController\", UserSettingsController);\n\n  UserProfileDirective = function($confirm, $auth, $repo) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var submit;\n      submit = debounce(2000, (function(_this) {\n        return function(event) {\n          var changeEmail, form, onError, onSuccess;\n          event.preventDefault();\n          form = $el.find(\"form\").checksley();\n          if (!form.validate()) {\n            return;\n          }\n          changeEmail = $scope.user.isAttributeModified(\"email\");\n          onSuccess = function(data) {\n            $auth.setUser($scope.user);\n            if (changeEmail) {\n              return $confirm.success(\"<strong>Check your inbox!</strong><br /> We have sent a mail to your account<br /> with the instructions to set your new address\");\n            } else {\n              return $confirm.notify('success');\n            }\n          };\n          onError = function(data) {\n            form.setErrors(data);\n            return $confirm.notify('error', data._error_message);\n          };\n          return $repo.save($scope.user).then(onSuccess, onError);\n        };\n      })(this));\n      $el.on(\"submit\", \"form\", submit);\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgUserProfile\", [\"$tgConfirm\", \"$tgAuth\", \"$tgRepo\", UserProfileDirective]);\n\n  UserAvatarDirective = function($auth, $model, $rs, $confirm) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var onError, onSuccess, showSizeInfo;\n      showSizeInfo = function() {\n        return $el.find(\".size-info\").removeClass(\"hidden\");\n      };\n      onSuccess = function(response) {\n        var user;\n        user = $model.make_model(\"users\", response.data);\n        $auth.setUser(user);\n        $scope.user = user;\n        $el.find('.overlay').addClass('hidden');\n        return $confirm.notify('success');\n      };\n      onError = function(response) {\n        if (response.status === 413) {\n          showSizeInfo();\n        }\n        $el.find('.overlay').addClass('hidden');\n        return $confirm.notify('error', response.data._error_message);\n      };\n      $el.on(\"click\", \".button.change\", function() {\n        return $el.find(\"#avatar-field\").click();\n      });\n      $el.on(\"change\", \"#avatar-field\", function(event) {\n        if ($scope.avatarAttachment) {\n          $el.find('.overlay').removeClass('hidden');\n          return $rs.userSettings.changeAvatar($scope.avatarAttachment).then(onSuccess, onError);\n        }\n      });\n      $el.on(\"click\", \"a.use-gravatar\", function(event) {\n        $el.find('.overlay').removeClass('hidden');\n        return $rs.userSettings.removeAvatar().then(onSuccess, onError);\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgUserAvatar\", [\"$tgAuth\", \"$tgModel\", \"$tgResources\", \"$tgConfirm\", UserAvatarDirective]);\n\n  TaigaAvatarModelDirective = function($parse) {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var model, modelSetter;\n      model = $parse($attrs.tgAvatarModel);\n      modelSetter = model.assign;\n      return $el.bind('change', function() {\n        return $scope.$apply(function() {\n          return modelSetter($scope, $el[0].files[0]);\n        });\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive('tgAvatarModel', ['$parse', TaigaAvatarModelDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/user-settings/nav.coffee\n */\n\n(function() {\n  var UserSettingsNavigationDirective, module;\n\n  UserSettingsNavigationDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      var section;\n      section = $attrs.tgUserSettingsNavigation;\n      $el.find(\".active\").removeClass(\"active\");\n      $el.find(\"#usersettingsmenu-\" + section + \" a\").addClass(\"active\");\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module = angular.module(\"taigaUserSettings\");\n\n  module.directive(\"tgUserSettingsNavigation\", UserSettingsNavigationDirective);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/user-settings/notifications.coffee\n */\n\n(function() {\n  var UserNotificationsController, UserNotificationsDirective, UserNotificationsListDirective, bindOnce, mixOf, module, taiga,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __hasProp = {}.hasOwnProperty;\n\n  taiga = this.taiga;\n\n  mixOf = this.taiga.mixOf;\n\n  bindOnce = this.taiga.bindOnce;\n\n  module = angular.module(\"taigaUserSettings\");\n\n  UserNotificationsController = (function(_super) {\n    __extends(UserNotificationsController, _super);\n\n    UserNotificationsController.$inject = [\"$scope\", \"$rootScope\", \"$tgRepo\", \"$tgConfirm\", \"$tgResources\", \"$routeParams\", \"$q\", \"$tgLocation\", \"$tgNavUrls\", \"$tgAuth\"];\n\n    function UserNotificationsController(_at_scope, _at_rootscope, _at_repo, _at_confirm, _at_rs, _at_params, _at_q, _at_location, _at_navUrls, _at_auth) {\n      var promise;\n      this.scope = _at_scope;\n      this.rootscope = _at_rootscope;\n      this.repo = _at_repo;\n      this.confirm = _at_confirm;\n      this.rs = _at_rs;\n      this.params = _at_params;\n      this.q = _at_q;\n      this.location = _at_location;\n      this.navUrls = _at_navUrls;\n      this.auth = _at_auth;\n      this.scope.sectionName = \"Email Notifications\";\n      this.scope.project = {};\n      this.scope.user = this.auth.getUser();\n      promise = this.loadInitialData();\n      promise.then(null, this.onInitialDataError.bind(this));\n    }\n\n    UserNotificationsController.prototype.loadProject = function() {\n      return this.rs.projects.get(this.scope.projectId).then((function(_this) {\n        return function(project) {\n          _this.scope.project = project;\n          _this.scope.$emit('project:loaded', project);\n          return project;\n        };\n      })(this));\n    };\n\n    UserNotificationsController.prototype.loadNotifyPolicies = function() {\n      return this.rs.notifyPolicies.list().then((function(_this) {\n        return function(notifyPolicies) {\n          _this.scope.notifyPolicies = notifyPolicies;\n          return notifyPolicies;\n        };\n      })(this));\n    };\n\n    UserNotificationsController.prototype.loadInitialData = function() {\n      var promise;\n      promise = this.repo.resolve({\n        pslug: this.params.pslug\n      }).then((function(_this) {\n        return function(data) {\n          _this.scope.projectId = data.project;\n          return data;\n        };\n      })(this));\n      return promise.then((function(_this) {\n        return function() {\n          return _this.loadProject();\n        };\n      })(this)).then((function(_this) {\n        return function() {\n          return _this.loadNotifyPolicies();\n        };\n      })(this));\n    };\n\n    return UserNotificationsController;\n\n  })(mixOf(taiga.Controller, taiga.PageMixin));\n\n  module.controller(\"UserNotificationsController\", UserNotificationsController);\n\n  UserNotificationsDirective = function() {\n    var link;\n    link = function($scope, $el, $attrs) {\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgUserNotifications\", UserNotificationsDirective);\n\n  UserNotificationsListDirective = function($repo, $confirm) {\n    var link, template;\n    template = _.template(\"<% _.each(notifyPolicies, function (notifyPolicy, index) { %>\\n<div class=\\\"policy-table-row\\\" data-index=\\\"<%- index %>\\\">\\n  <div class=\\\"policy-table-project\\\"><span><%- notifyPolicy.project_name %></span></div>\\n  <div class=\\\"policy-table-all\\\">\\n    <fieldset>\\n      <input type=\\\"radio\\\"\\n             name=\\\"policy-<%- notifyPolicy.id %>\\\" id=\\\"policy-all-<%- notifyPolicy.id %>\\\"\\n             value=\\\"2\\\" <% if (notifyPolicy.notify_level == 2) { %>checked=\\\"checked\\\"<% } %>/>\\n      <label for=\\\"policy-all-<%- notifyPolicy.id %>\\\">All</label>\\n    </fieldset>\\n  </div>\\n  <div class=\\\"policy-table-involved\\\">\\n    <fieldset>\\n      <input type=\\\"radio\\\"\\n             name=\\\"policy-<%- notifyPolicy.id %>\\\" id=\\\"policy-involved-<%- notifyPolicy.id %>\\\"\\n             value=\\\"1\\\" <% if (notifyPolicy.notify_level == 1) { %>checked=\\\"checked\\\"<% } %> />\\n      <label for=\\\"policy-involved-<%- notifyPolicy.id %>\\\">Involved</label>\\n    </fieldset>\\n  </div>\\n  <div class=\\\"policy-table-none\\\">\\n    <fieldset>\\n      <input type=\\\"radio\\\"\\n             name=\\\"policy-<%- notifyPolicy.id %>\\\" id=\\\"policy-none-<%- notifyPolicy.id %>\\\"\\n             value=\\\"3\\\" <% if (notifyPolicy.notify_level == 3) { %>checked=\\\"checked\\\"<% } %> />\\n      <label for=\\\"policy-none-<%- notifyPolicy.id %>\\\">None</label>\\n    </fieldset>\\n  </div>\\n</div>\\n<% }) %>\");\n    link = function($scope, $el, $attrs) {\n      var render;\n      render = function() {\n        $el.off();\n        $el.html(template({\n          notifyPolicies: $scope.notifyPolicies\n        }));\n        return $el.on(\"change\", \"input[type=radio]\", function(event) {\n          var onError, onSuccess, policy, policyIndex, prev_level, target;\n          target = angular.element(event.currentTarget);\n          policyIndex = target.parents(\".policy-table-row\").data('index');\n          policy = $scope.notifyPolicies[policyIndex];\n          prev_level = policy.notify_level;\n          policy.notify_level = parseInt(target.val(), 10);\n          onSuccess = function() {\n            return $confirm.notify(\"success\");\n          };\n          onError = function() {\n            $confirm.notify(\"error\");\n            return target.parents(\".policy-table-row\").find(\"input[value=\" + prev_level + \"]\").prop(\"checked\", true);\n          };\n          return $repo.save(policy).then(onSuccess, onError);\n        });\n      };\n      $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n      return bindOnce($scope, $attrs.ngModel, render);\n    };\n    return {\n      link: link\n    };\n  };\n\n  module.directive(\"tgUserNotificationsList\", [\"$tgRepo\", \"$tgConfirm\", UserNotificationsListDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: modules/integrations/github.coffee\n */\n\n(function() {\n  var AUTH_URL, GithubLoginButtonDirective, module, taiga;\n\n  taiga = this.taiga;\n\n  module = angular.module(\"taigaIntegrations\");\n\n  AUTH_URL = \"https://github.com/login/oauth/authorize\";\n\n  GithubLoginButtonDirective = function($window, $params, $location, $config, $events, $confirm, $auth, $navUrls, $loader) {\n    var link, template;\n    template = \"<a class=\\\"button button-github\\\" href=\\\"\\\" title=\\\"Enter with your github account\\\">\\n    <span class=\\\"icon icon-github\\\"></span>\\n    <span>Login with Github</span>\\n</a>\";\n    link = function($scope, $el, $attrs) {\n      var clientId, loginOnError, loginOnSuccess, loginWithGitHubAccount, renderGitHubButton;\n      clientId = $config.get(\"gitHubClientId\", null);\n      if (!clientId) {\n        return;\n      }\n      renderGitHubButton = function() {\n        if (clientId) {\n          return $el.html(template);\n        }\n      };\n      loginOnSuccess = function(response) {\n        var nextUrl;\n        if ($params.next && $params.next !== $navUrls.resolve(\"login\")) {\n          nextUrl = $params.next;\n        } else {\n          nextUrl = $navUrls.resolve(\"home\");\n        }\n        $events.setupConnection();\n        $location.search(\"next\", null);\n        $location.search(\"token\", null);\n        $location.search(\"state\", null);\n        $location.search(\"code\", null);\n        return $location.path(nextUrl);\n      };\n      loginOnError = function(response) {\n        $location.search(\"state\", null);\n        $location.search(\"code\", null);\n        $loader.pageLoaded();\n        if (response.data.error_message) {\n          return $confirm.notify(\"light-error\", response.data.error_message);\n        } else {\n          return $confirm.notify(\"light-error\", \"Our Oompa Loompas have not been able to get you credentials from GitHub.\");\n        }\n      };\n      loginWithGitHubAccount = function() {\n        var code, data, token, type;\n        type = $params.state;\n        code = $params.code;\n        token = $params.token;\n        if (!(type === \"github\" && code)) {\n          return;\n        }\n        $loader.start();\n        data = {\n          code: code,\n          token: token\n        };\n        return $auth.login(data, type).then(loginOnSuccess, loginOnError);\n      };\n      renderGitHubButton();\n      loginWithGitHubAccount();\n      $el.on(\"click\", \".button-github\", function(event) {\n        var redirectToUri, url;\n        redirectToUri = $location.absUrl();\n        url = AUTH_URL + \"?client_id=\" + clientId + \"&redirect_uri=\" + redirectToUri + \"&state=github&scope=user:email\";\n        return $window.location.href = url;\n      });\n      return $scope.$on(\"$destroy\", function() {\n        return $el.off();\n      });\n    };\n    return {\n      link: link,\n      restrict: \"EA\",\n      template: \"\"\n    };\n  };\n\n  module.directive(\"tgGithubLoginButton\", [\"$window\", '$routeParams', \"$tgLocation\", \"$tgConfig\", \"$tgEvents\", \"$tgConfirm\", \"$tgAuth\", \"$tgNavUrls\", \"tgLoader\", GithubLoginButtonDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: plugins/humanshtml/humanshtml.coffee\n */\n\n(function() {\n  var configure, module, taiga;\n\n  taiga = this.taiga;\n\n  module = angular.module(\"taigaPlugins\", [\"ngRoute\"]);\n\n  configure = function($routeProvider) {\n    return $routeProvider.when(\"/humans.html\", {\n      \"templateUrl\": \"/plugins/humanshtml/templates/humans.html\"\n    });\n  };\n\n  module.config([\"$routeProvider\", configure]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: plugins/terms/terms.coffee\n */\n\n(function() {\n  var TermsNoticeDirective, module, taiga, template;\n\n  taiga = this.taiga;\n\n  module = angular.module(\"taigaPlugins\", [\"ngRoute\"]);\n\n  template = _.template(\"<p class=\\\"register-text\\\">\\n    <span>By clicking \\\"Sign up\\\", you agree to our <br /></span>\\n    <a href=\\\"<%= termsUrl %>\\\" title=\\\"See terms of service\\\" target=\\\"_blank\\\"> terms of service</a>\\n    <span> and</span>\\n    <a href=\\\"<%= privacyUrl %>\\\" title=\\\"See privacy policy\\\" target=\\\"_blank\\\"> privacy policy.</a>\\n</p>\");\n\n  TermsNoticeDirective = function($config) {\n    var privacyPolicyUrl, templateFn, termsOfServiceUrl;\n    privacyPolicyUrl = $config.get(\"privacyPolicyUrl\");\n    termsOfServiceUrl = $config.get(\"termsOfServiceUrl\");\n    templateFn = function() {\n      var ctx;\n      if (!(privacyPolicyUrl && termsOfServiceUrl)) {\n        return \"\";\n      }\n      ctx = {\n        termsUrl: termsOfServiceUrl,\n        privacyUrl: privacyPolicyUrl\n      };\n      return template(ctx);\n    };\n    return {\n      scope: {},\n      restrict: \"AE\",\n      template: templateFn\n    };\n  };\n\n  module.directive(\"tgTermsNotice\", [\"$tgConfig\", TermsNoticeDirective]);\n\n}).call(this);\n\n\n/*\n * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>\n * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>\n * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>\n#\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n#\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n#\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n * File: pluggins/main.coffee\n */\n\n(function() {\n  var module;\n\n  module = angular.module(\"taigaPlugins\", [\"ngRoute\"]);\n\n}).call(this);\n","angular.module('taigaBase').value('localesEn', {\n    \"checksley\": {\n        \"defaultMessage\": \"This value seems to be invalid.\",\n        \"type-email\": \"This value should be a valid email.\",\n        \"type-url\": \"This value should be a valid url.\",\n        \"type-urlstrict\": \"This value should be a valid url.\",\n        \"type-number\": \"This value should be a valid number.\",\n        \"type-digits\": \"This value should be digits.\",\n        \"type-dateIso\": \"This value should be a valid date (YYYY-MM-DD).\",\n        \"type-alphanum\": \"This value should be alphanumeric.\",\n        \"type-phone\": \"This value should be a valid phone number.\",\n        \"notnull\": \"This value should not be null.\",\n        \"notblank\": \"This value should not be blank.\",\n        \"required\": \"This value is required.\",\n        \"regexp\": \"This value seems to be invalid.\",\n        \"min\": \"This value should be greater than or equal to %s.\",\n        \"max\": \"This value should be lower than or equal to %s.\",\n        \"range\": \"This value should be between %s and %s.\",\n        \"minlength\": \"This value is too short. It should have %s characters or more.\",\n        \"maxlength\": \"This value is too long. It should have %s characters or less.\",\n        \"rangelength\": \"This value length is invalid. It should be between %s and %s characters long.\",\n        \"mincheck\": \"You must select at least %s choices.\",\n        \"maxcheck\": \"You must select %s choices or less.\",\n        \"rangecheck\": \"You must select between %s and %s choices.\",\n        \"equalto\": \"This value should be the same.\"\n    },\n    \"common\": {\n        \"subject\": \"Subject\",\n        \"save\": \"Save\",\n        \"blocked\": \"Blocked\",\n        \"cancel\": \"Cancel\",\n        \"status\": \"Status\",\n        \"new-bulk\": \"New bulk insert\",\n        \"one-item-line\": \"One item per line...\"\n    },\n    \"pagination\": {\n        \"next\": \"Next\",\n        \"prev\": \"Previous\"\n    },\n    \"markdown-editor\": {\n        \"heading-1\": \"First Level Heading\",\n        \"heading-2\": \"Second Level Heading\",\n        \"heading-3\": \"Third Level Heading\",\n        \"bold\": \"Bold\",\n        \"italic\": \"Italic\",\n        \"strike\": \"Strike\",\n        \"bulleted-list\": \"Bulleted List\",\n        \"numeric-list\": \"Numeric List\",\n        \"picture\": \"Picture\",\n        \"link\": \"Link\",\n        \"quotes\": \"Quotes\",\n        \"code-block\": \"Code Block / Code\",\n        \"preview\": \"Preview\",\n        \"help\": \"Help\",\n        \"placeholder\": \"Your title here...\",\n        \"link-placeholder\": \"Your text to link here...\"\n    },\n    \"us\": {\n        \"title-new\": \"New User Story\",\n        \"team-requirement\": \"Team Requirement\",\n        \"client-requirement\": \"Client Requirement\"\n    }\n}\n);"],"sourceRoot":"/source/"}